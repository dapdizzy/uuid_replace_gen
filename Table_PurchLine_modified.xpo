Exportfile for AOT version 1.0 or later
Formatversion: 1

***Element: DBT

; Microsoft Dynamics AX Table : PurchLine unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #PurchLine
    EnforceFKRelation 0
    PROPERTIES
      Name                #PurchLine
      Label               #@SYS9664
      TitleField1         #PurchId
      TitleField2         #ItemId
      ConfigurationKey    #LogisticsBasic
      SecurityKey         #VendTables
      CacheLookup         #NotInTTS
      CreateRecIdIndex    #Yes
      TableGroup          #WorksheetLine
      PrimaryIndex        #TransIdIdx
      ClusterIndex        #PurchLineIdx
      SingularLabel       #@SYS22957
      CreatedDateTime     #Yes
      DeveloperDocumentation  #@SYS124476
      Origin              #{2C090154-0000-1000-F7E2-8163684C696E}
      LegacyId            #340
    ENDPROPERTIES
    
    FIELDS
      FIELD #AccountingDistributionTemplate
        INT64
        PROPERTIES
          Name                #AccountingDistributionTemplate
          Table               #PurchLine
          Origin              #{5B324BDA-2F99-4082-AFD7-FBD86A46D095}
          LegacyId            #299
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #ActivityNumber
        STRING
        PROPERTIES
          Name                #ActivityNumber
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{609D1EAB-602F-4712-AE54-9E2026CBE7C8}
          LegacyId            #108
          ExtendedDataType    #ProjActivityNumber
        ENDPROPERTIES
        
      FIELD #AddressRefRecId
        INT64
        PROPERTIES
          Name                #AddressRefRecId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{886E9C4A-496C-4D16-BEFA-3A8B0AC639F1}
          LegacyId            #24
          ExtendedDataType    #AddressRefRecId
        ENDPROPERTIES
        
      FIELD #AddressRefTableId
        INT
        PROPERTIES
          Name                #AddressRefTableId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{877B2B29-3651-422C-8BF3-E4D8203EE2D0}
          LegacyId            #28
          ExtendedDataType    #AddressRefTableId
        ENDPROPERTIES
        
      FIELD #AssetBookId
        STRING
        PROPERTIES
          Name                #AssetBookId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{3A5F7D2D-96B7-41C1-A962-4D9F2607E1A2}
          LegacyId            #72
          ExtendedDataType    #AssetBookIdPurchSalesInvent
        ENDPROPERTIES
        
      FIELD #AssetGroup
        STRING
        PROPERTIES
          Name                #AssetGroup
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{8F569AF2-DD6C-493A-8AF7-6FC949F4BF84}
          LegacyId            #112
          ExtendedDataType    #AssetGroupId
        ENDPROPERTIES
        
      FIELD #AssetId
        STRING
        PROPERTIES
          Name                #AssetId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{8F0A28DE-F876-4CEF-8733-4FECBC85051B}
          LegacyId            #70
          ExtendedDataType    #AssetIdOpen
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #AssetTransTypePurch
        ENUM
        PROPERTIES
          Name                #AssetTransTypePurch
          Table               #PurchLine
          Origin              #{B7407292-D9AA-4090-BFEE-928D33BE0CFD}
          LegacyId            #71
          ExtendedDataType    #AssetTransTypePurchEDT
          EnumType            #AssetTransTypePurch
        ENDPROPERTIES
        
      FIELD #BarCode
        STRING
        PROPERTIES
          Name                #BarCode
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{9E7824CE-C3B3-4B9C-AFD2-A4EB5DF3DC78}
          LegacyId            #48
          ExtendedDataType    #PurchBarCode
          StringSize          #80
        ENDPROPERTIES
        
      FIELD #BarCodeType
        STRING
        PROPERTIES
          Name                #BarCodeType
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{818E9CE1-1EC0-49FA-9693-34DCF89C4664}
          LegacyId            #49
          ExtendedDataType    #BarcodeSetupId
        ENDPROPERTIES
        
      FIELD #Blocked
        ENUM
        PROPERTIES
          Name                #Blocked
          Table               #PurchLine
          Origin              #{88DA2A1A-8C40-484A-A732-A82C5AF96CA4}
          LegacyId            #54
          ExtendedDataType    #LineStopped
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #CaseTagging
        ENUM
        PROPERTIES
          Name                #CaseTagging
          Table               #PurchLine
          Origin              #{56C1D6D4-BC94-45D0-8E65-88BC34601642}
          LegacyId            #99
          ExtendedDataType    #RFIDCaseTagging
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #CFOPTable_BR
        INT64
        PROPERTIES
          Name                #CFOPTable_BR
          Label               #@GLS200
          HelpText            #@GLS366
          Table               #PurchLine
          CountryRegionCodes  #BR
          Origin              #{2A0C1FBD-0154-1000-EAB8-D719E56D626C}
          LegacyId            #8125
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #Complete
        ENUM
        PROPERTIES
          Name                #Complete
          Table               #PurchLine
          Origin              #{B19657D4-C49E-4963-B7A4-009E75051727}
          LegacyId            #55
          ExtendedDataType    #LineComplete
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ConfirmedDlv
        DATE
        PROPERTIES
          Name                #ConfirmedDlv
          Label               #@SYS8985
          HelpText            #@SYS931
          Table               #PurchLine
          Origin              #{EC89949D-AAD8-467B-BDC9-7DAFCE70C232}
          LegacyId            #23
          ExtendedDataType    #PurchLineDlvDate
        ENDPROPERTIES
        
      FIELD #ConfirmedTaxAmount
        REAL
        PROPERTIES
          Name                #ConfirmedTaxAmount
          Table               #PurchLine
          Origin              #{4785A1D2-5F91-40E9-98E3-169C65EBDA01}
          ExtendedDataType    #TaxAmountCur
        ENDPROPERTIES
        
      FIELD #ConfirmedTaxWriteCode
        STRING
        PROPERTIES
          Name                #ConfirmedTaxWriteCode
          Table               #PurchLine
          Origin              #{591D060A-BE1E-4456-A64A-AAA5E99B787D}
          ExtendedDataType    #TaxWriteCode
        ENDPROPERTIES
        
      FIELD #CountyOrigDest
        STRING
        PROPERTIES
          Name                #CountyOrigDest
          Table               #PurchLine
          Origin              #{27D52C48-F160-4FF4-BAB8-3D5C6D57DBC9}
          LegacyId            #40
          ExtendedDataType    #AddressCountyOrigDest
        ENDPROPERTIES
        
      FIELD #CovRef
        ENUM
        PROPERTIES
          Name                #CovRef
          HelpText            #@SYS17021
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{3136AD64-C248-4B1F-AA99-433E32B6A4CD}
          LegacyId            #35
          EnumType            #PurchCovRef
        ENDPROPERTIES
        
      FIELD #CreateFixedAsset
        ENUM
        PROPERTIES
          Name                #CreateFixedAsset
          Table               #PurchLine
          Origin              #{AF71931B-C218-4E86-94E4-913C2349ED23}
          LegacyId            #111
          ExtendedDataType    #CreateFixedAsset
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #CurrencyCode
        STRING
        PROPERTIES
          Name                #CurrencyCode
          HelpText            #@SYS6734
          Mandatory           #Yes
          Table               #PurchLine
          Origin              #{5E2AF4E0-C06C-4C45-BD8E-22D0465B0FA2}
          LegacyId            #16
          ExtendedDataType    #VendCurrencyCode
          StringSize          #3
        ENDPROPERTIES
        
      FIELD #CustomerRef
        STRING
        PROPERTIES
          Name                #CustomerRef
          Table               #PurchLine
          Origin              #{02F9E252-9A53-4372-8D5B-DE72A18F3812}
          LegacyId            #90
          ExtendedDataType    #CustRefLine
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #CustPurchaseOrderFormNum
        STRING
        PROPERTIES
          Name                #CustPurchaseOrderFormNum
          Table               #PurchLine
          Origin              #{77A295AD-A570-4C2E-BC1B-D6A428F0D97F}
          LegacyId            #91
          ExtendedDataType    #CustPurchaseOrder
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #DefaultDimension
        INT64
        PROPERTIES
          Name                #DefaultDimension
          Table               #PurchLine
          Origin              #{490E3A95-65C4-48FB-995E-ACA25B7EE0CA}
          LegacyId            #140
          ExtendedDataType    #DimensionDefault
        ENDPROPERTIES
        
      FIELD #DeliveryDate
        DATE
        PROPERTIES
          Name                #DeliveryDate
          HelpText            #@SYS3828
          Table               #PurchLine
          Origin              #{6CA7F31F-31A9-4B99-8BB2-523D32F61690}
          LegacyId            #7
          ExtendedDataType    #PurchLineDlvDate
        ENDPROPERTIES
        
      FIELD #DeliveryName
        STRING
        PROPERTIES
          Name                #DeliveryName
          GroupPrompt         #@SYS7399
          Table               #PurchLine
          Origin              #{2B4FF535-9D97-406C-AFBC-A440966D2BE7}
          LegacyId            #82
          ExtendedDataType    #LogisticsDeliveryName
          StringSize          #100
        ENDPROPERTIES
        
      FIELD #DeliveryPostalAddress
        INT64
        PROPERTIES
          Name                #DeliveryPostalAddress
          Table               #PurchLine
          Origin              #{93B78464-7028-4AFF-925F-1CFEA5658CC9}
          LegacyId            #240
          ExtendedDataType    #LogisticsPostalAddressRecId
        ENDPROPERTIES
        
      FIELD #DeliveryType
        ENUM
        PROPERTIES
          Name                #DeliveryType
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{69366177-3E01-4B82-BB02-8BA4DBD2B8D8}
          LegacyId            #89
          ExtendedDataType    #TradeLineDlvTypeId
          EnumType            #TradeLineDlvType
        ENDPROPERTIES
        
      FIELD #DepreciationStartDate
        DATE
        PROPERTIES
          Name                #DepreciationStartDate
          Table               #PurchLine
          CountryRegionCodes  #IT
          Origin              #{8726C83C-BEC8-4DF3-9F84-55C617543D26}
          LegacyId            #107
          ExtendedDataType    #AssetDepreciationStartDate
        ENDPROPERTIES
        
      FIELD #DiscAmount
        REAL
        PROPERTIES
          Name                #DiscAmount
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{6948BBC1-F4D5-4501-ABEC-1621A3DDB0EA}
          ExtendedDataType    #PurchDiscAmount
        ENDPROPERTIES
        
      FIELD #DiscPercent
        REAL
        PROPERTIES
          Name                #DiscPercent
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{22E14467-91AC-4958-B17B-F8E0EC90E00B}
          ExtendedDataType    #PurchDiscPercent
        ENDPROPERTIES
        
      FIELD #EditableInWorkflow
        ENUM
        PROPERTIES
          Name                #EditableInWorkflow
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{7BB901CC-1CEE-480A-9C35-8BF0A499E407}
          LegacyId            #199
          ExtendedDataType    #TradeEditableInWorkflow
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ExternalItemId
        STRING
        PROPERTIES
          Name                #ExternalItemId
          Table               #PurchLine
          Origin              #{2E3A9052-4C49-418C-8912-69D2C6254E7B}
          LegacyId            #20
          ExtendedDataType    #PurchExternalItemId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #GSTHSTTaxType_CA
        ENUM
        PROPERTIES
          Name                #GSTHSTTaxType_CA
          Table               #PurchLine
          Origin              #{87C9DB6B-4633-4212-B9D5-A43FAC93CF8B}
          LegacyId            #235
          EnumType            #GSTHSTTaxType_CA
        ENDPROPERTIES
        
      FIELD #InterCompanyInventTransId
        STRING
        PROPERTIES
          Name                #InterCompanyInventTransId
          ConfigurationKey    #TradeInterCompany
          Table               #PurchLine
          Origin              #{47749BED-DF30-49B3-9509-5A028E87D977}
          LegacyId            #79
          ExtendedDataType    #InventRefTransId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InterCompanyOrigin
        ENUM
        PROPERTIES
          Name                #InterCompanyOrigin
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{2D75D953-F707-4E7C-91BC-904F2A0B32C9}
          LegacyId            #63
          EnumType            #InterCompanyOrigin
        ENDPROPERTIES
        
      FIELD #IntrastatFulfillmentDate_HU
        DATE
        PROPERTIES
          Name                #IntrastatFulfillmentDate_HU
          Table               #PurchLine
          Origin              #{542211FA-CDC0-41D3-853D-7E325DE8E5B5}
          LegacyId            #8123
          ExtendedDataType    #IntrastatFulfillmentDate_HU
        ENDPROPERTIES
        
      FIELD #InventDimId
        STRING
        PROPERTIES
          Name                #InventDimId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{116ACE01-E66C-4CC0-9EE0-418598AA9AA0}
          LegacyId            #66
          ExtendedDataType    #InventDimId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InventInvoiceNow
        REAL
        PROPERTIES
          Name                #InventInvoiceNow
          Label               #@PSA795
          HelpText            #@PSA10168
          Table               #PurchLine
          Origin              #{1DD33471-7499-4364-B993-26AA0654E1E7}
          LegacyId            #16038
          ExtendedDataType    #InventQty
        ENDPROPERTIES
        
      FIELD #InventReceivedNow
        REAL
        PROPERTIES
          Name                #InventReceivedNow
          Label               #@SYS1743
          HelpText            #@SYS12421
          Table               #PurchLine
          Origin              #{8E19C44D-3AD8-4548-AA2C-256E9FBED92F}
          LegacyId            #31
          ExtendedDataType    #InventQty
        ENDPROPERTIES
        
      FIELD #InventRefId
        STRING
        PROPERTIES
          Name                #InventRefId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{10AAE4E5-048B-4E17-841A-647D549517AD}
          LegacyId            #50
          ExtendedDataType    #InventRefId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InventRefTransId
        STRING
        PROPERTIES
          Name                #InventRefTransId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{4D707772-F3E8-45B2-A4D4-19E7865BE9E4}
          LegacyId            #51
          ExtendedDataType    #InventRefTransId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InventTransId
        STRING
        PROPERTIES
          Name                #InventTransId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{E92D1537-5337-4D27-A82D-B34E2310DDBF}
          LegacyId            #25
          ExtendedDataType    #TradeInventTransId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #IsDeleted
        ENUM
        PROPERTIES
          Name                #IsDeleted
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{72FFDCB9-8544-41E8-9F79-16C36921452F}
          LegacyId            #148
          ExtendedDataType    #VersioningIsDeleted
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #IsFinalized
        ENUM
        PROPERTIES
          Name                #IsFinalized
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{4C8A1AFA-7D21-489F-BB3F-67D266769EF1}
          LegacyId            #304
          ExtendedDataType    #PurchLineIsFinalized
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #IsInvoiceMatched
        ENUM
        PROPERTIES
          Name                #IsInvoiceMatched
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{D99708AE-A5C5-4381-A6B8-CCAD89C450FE}
          LegacyId            #306
          ExtendedDataType    #PurchLineIsInvoiceMatched
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #IsModified
        ENUM
        PROPERTIES
          Name                #IsModified
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{4CD8EF5A-02F0-4260-B786-199BC04A66DE}
          LegacyId            #149
          ExtendedDataType    #VersioningIsModified
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #IsPwp
        ENUM
        PROPERTIES
          Name                #IsPwp
          Label               #@PSA3342
          HelpText            #@PSA3344
          ConfigurationKey    #PSAPwp
          Table               #PurchLine
          Origin              #{0D552294-4394-47B3-886D-BA020F914B5E}
          ExtendedDataType    #NoYesId
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ItemBOMId
        STRING
        PROPERTIES
          Name                #ItemBOMId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{39366371-9822-4904-80FF-699D720BF2DB}
          LegacyId            #59
          ExtendedDataType    #ItemBOMId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ItemId
        STRING
        PROPERTIES
          Name                #ItemId
          HelpText            #@SYS2882
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{EF3B8DF2-B0CF-4BCA-83F1-D2FB95392E8E}
          LegacyId            #3
          ExtendedDataType    #ItemIdSmall
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #itemPBAId
        STRING
        PROPERTIES
          Name                #itemPBAId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{4F3438E8-AD9E-466F-BEE4-EF1B7D8B54E1}
          LegacyId            #8001
          ExtendedDataType    #PBAId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ItemRefType
        ENUM
        PROPERTIES
          Name                #ItemRefType
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{FD86A5EE-A9D8-411B-9FD6-7881A7F0F7EB}
          LegacyId            #52
          EnumType            #InventRefType
        ENDPROPERTIES
        
      FIELD #ItemRouteId
        STRING
        PROPERTIES
          Name                #ItemRouteId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{508BDAEA-F7E8-4EE9-A1B9-50D0B7EA0F73}
          LegacyId            #58
          ExtendedDataType    #ItemRouteId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ItemTagging
        ENUM
        PROPERTIES
          Name                #ItemTagging
          Table               #PurchLine
          Origin              #{8243BA22-4C78-4B37-915A-5CFC7A2D4718}
          LegacyId            #98
          ExtendedDataType    #RFIDItemTagging
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #LedgerDimension
        INT64
        PROPERTIES
          Name                #LedgerDimension
          Label               #@SYS8343
          HelpText            #@SYS7102
          Table               #PurchLine
          Origin              #{4D1B7477-A91F-4B23-B949-8FF6B7D823D6}
          LegacyId            #143
          ExtendedDataType    #LedgerDimensionDefaultAccount
        ENDPROPERTIES
        
      FIELD #LineAmount
        REAL
        PROPERTIES
          Name                #LineAmount
          Table               #PurchLine
          RelationContext     #Currency
          Origin              #{3B630245-E7EC-42FC-9904-3BE783FC7710}
          LegacyId            #19
          ExtendedDataType    #PurchLineAmount
        ENDPROPERTIES
        
      FIELD #LineDeliveryType
        ENUM
        PROPERTIES
          Name                #LineDeliveryType
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{05119B76-92A5-4BAF-B561-CB587FA27217}
          LegacyId            #124
          EnumType            #LineDeliveryType
        ENDPROPERTIES
        
      FIELD #LineDisc
        REAL
        PROPERTIES
          Name                #LineDisc
          Table               #PurchLine
          RelationContext     #Currency
          Origin              #{F8EB8A78-A71E-457F-8437-717074D71B45}
          LegacyId            #18
          ExtendedDataType    #PurchLineDisc
        ENDPROPERTIES
        
      FIELD #LineHeader
        STRING
        PROPERTIES
          Name                #LineHeader
          Table               #PurchLine
          Origin              #{C3F95584-14F5-4638-BFFB-7DB3D1834F97}
          LegacyId            #60
          ExtendedDataType    #LineHeader
          StringSize          #80
        ENDPROPERTIES
        
      FIELD #LineNumber
        INT64
        PROPERTIES
          Name                #LineNumber
          Table               #PurchLine
          Origin              #{282F8D8D-46FF-4063-B946-14EF963DC26E}
          LegacyId            #247
          ExtendedDataType    #TradeLineNumber
        ENDPROPERTIES
        
      FIELD #LinePercent
        REAL
        PROPERTIES
          Name                #LinePercent
          Table               #PurchLine
          Origin              #{1FC140A9-3419-40DE-B401-FE324935D9DA}
          LegacyId            #17
          ExtendedDataType    #PurchLinePercent
        ENDPROPERTIES
        
      FIELD #ManualEntryChangepolicy
        INT64
        PROPERTIES
          Name                #ManualEntryChangepolicy
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{4F7CACC1-DB12-45F8-9AFC-C67EFFA80AAB}
          LegacyId            #193
          ExtendedDataType    #PriceDiscPolicyManual
        ENDPROPERTIES
        
      FIELD #MatchingAgreementLine
        INT64
        PROPERTIES
          Name                #MatchingAgreementLine
          Table               #PurchLine
          Origin              #{7B0A7537-F0FC-4055-9437-870ACAD809FA}
          LegacyId            #177
          ExtendedDataType    #AgreementLineRecId
        ENDPROPERTIES
        
      FIELD #MatchingPolicy
        ENUM
        PROPERTIES
          Name                #MatchingPolicy
          Label               #@SYS129852
          HelpText            #@SYS129857
          Table               #PurchLine
          Origin              #{4469D30D-D1BE-4671-8DCD-F860AF788C68}
          LegacyId            #120
          EnumType            #PurchMatchingPolicyOption
        ENDPROPERTIES
        
      FIELD #MMS_PrecedingLWO
        STRING
        PROPERTIES
          Name                #MMS_PrecedingLWO
          Table               #PurchLine
          Origin              #{EEBD63EC-A99A-4C2F-B191-62AFACFB3C40}
          ExtendedDataType    #MMS_PrecedingLWO
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #MultiLnDisc
        REAL
        PROPERTIES
          Name                #MultiLnDisc
          Table               #PurchLine
          RelationContext     #Currency
          Origin              #{CB7E3D7A-8C54-41B5-8C1E-D06F8FF91819}
          LegacyId            #32
          ExtendedDataType    #PurchMultiLnDisc
        ENDPROPERTIES
        
      FIELD #MultiLnPercent
        REAL
        PROPERTIES
          Name                #MultiLnPercent
          Table               #PurchLine
          Origin              #{12539546-06F5-43F0-BC62-486BC862A43B}
          LegacyId            #33
          ExtendedDataType    #PurchMultiLnPercent
        ENDPROPERTIES
        
      FIELD #Name
        STRING
        PROPERTIES
          Name                #Name
          HelpText            #@SYS2102
          Table               #PurchLine
          Origin              #{2D2F7CD7-0DB5-47E2-839B-5262F9C630B8}
          LegacyId            #8
          ExtendedDataType    #ItemFreeTxt
          StringSize          #1000
        ENDPROPERTIES
        
      FIELD #OperationType_MX
        ENUM
        PROPERTIES
          Name                #OperationType_MX
          Table               #PurchLine
          Origin              #{CA63C1EB-A3CB-4CA9-9223-95F0CCFF70FE}
          LegacyId            #301
          EnumType            #VendorOperationType_MX
        ENDPROPERTIES
        
      FIELD #OverDeliveryPct
        REAL
        PROPERTIES
          Name                #OverDeliveryPct
          Table               #PurchLine
          Origin              #{A74C1E30-B3C5-4D9E-BF43-F7C832998351}
          LegacyId            #45
          ExtendedDataType    #PurchOverDeliveryPct
        ENDPROPERTIES
        
      FIELD #PackedExtensions
        QUEUE
        PROPERTIES
          Name                #PackedExtensions
          SaveContents        #No
          Visible             #No
          Table               #PurchLine
          Origin              #{90696C2E-1EB1-4AD8-BC2A-CC54AD2C4F62}
          ExtendedDataType    #SysExtensionSerializerPackedContainer
        ENDPROPERTIES
        
      FIELD #PalletTagging
        ENUM
        PROPERTIES
          Name                #PalletTagging
          Table               #PurchLine
          Origin              #{EBB6824F-2BF6-4B7A-B468-4347AD515C5F}
          LegacyId            #100
          ExtendedDataType    #RFIDPalletTagging
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #PDSCalculationId
        STRING
        PROPERTIES
          Name                #PDSCalculationId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{0492FA06-55AC-402E-817B-44579A221DB9}
          ExtendedDataType    #PDSCalculationId
        ENDPROPERTIES
        
      FIELD #PdsCWInventReceivedNow
        REAL
        PROPERTIES
          Name                #PdsCWInventReceivedNow
          Table               #PurchLine
          Origin              #{B696C285-D30B-45D7-9BDC-479BFF72C11F}
          ExtendedDataType    #PdsCWQtyReceiveNow
        ENDPROPERTIES
        
      FIELD #PdsCWQty
        REAL
        PROPERTIES
          Name                #PdsCWQty
          Table               #PurchLine
          Origin              #{A31807C3-FF1F-4775-86AB-D06A3A79873D}
          ExtendedDataType    #PdsCWInventQty
        ENDPROPERTIES
        
      FIELD #PdsCWRemainInventFinancial
        REAL
        PROPERTIES
          Name                #PdsCWRemainInventFinancial
          Label               #@PDS75
          HelpText            #@PDS172
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{B68825D8-D9CE-4D77-909E-77D2F2742D49}
          ExtendedDataType    #PdsCWInventQty
        ENDPROPERTIES
        
      FIELD #PdsCWRemainInventPhysical
        REAL
        PROPERTIES
          Name                #PdsCWRemainInventPhysical
          Label               #@PDS96
          HelpText            #@PDS97
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{F4EBDE8F-73E7-4852-AB7D-94526AB0AC9B}
          ExtendedDataType    #PdsCWInventQty
        ENDPROPERTIES
        
      FIELD #PlanReference
        INT64
        PROPERTIES
          Name                #PlanReference
          Label               #@SYS333324
          HelpText            #@SYS152559
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{4DE8A903-ED64-4C20-AACC-475C33063BDE}
          LegacyId            #305
          ExtendedDataType    #PlanReferenceRefRecId
        ENDPROPERTIES
        
      FIELD #Port
        STRING
        PROPERTIES
          Name                #Port
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{7644731F-C0B5-4EDD-8396-69F1517FC57C}
          LegacyId            #69
          ExtendedDataType    #IntrastatPortId
        ENDPROPERTIES
        
      FIELD #PriceUnit
        REAL
        PROPERTIES
          Name                #PriceUnit
          HelpText            #@SYS3472
          Table               #PurchLine
          Origin              #{35313E95-FBD5-400B-B87A-3F2E4649E26E}
          LegacyId            #14
          ExtendedDataType    #PriceUnit
        ENDPROPERTIES
        
      FIELD #ProcurementCategory
        INT64
        PROPERTIES
          Name                #ProcurementCategory
          Table               #PurchLine
          Origin              #{1B8E910A-2DD0-485B-A696-5638093235A2}
          LegacyId            #123
          ExtendedDataType    #PurchCategory
        ENDPROPERTIES
        
      FIELD #ProjCategoryId
        STRING
        PROPERTIES
          Name                #ProjCategoryId
          Label               #@SYS6114
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{72B29456-33EA-48D4-B6F3-ED82DCBC4958}
          LegacyId            #64
          ExtendedDataType    #ProjCategoryId
          StringSize          #30
        ENDPROPERTIES
        
      FIELD #ProjId
        STRING
        PROPERTIES
          Name                #ProjId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{30DBCECF-A601-4237-8C60-09AF948086A8}
          LegacyId            #65
          ExtendedDataType    #ProjId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ProjLinePropertyId
        STRING
        PROPERTIES
          Name                #ProjLinePropertyId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{E2E1E1F5-1A35-435B-9CC3-720F01F043BD}
          LegacyId            #73
          ExtendedDataType    #ProjLinePropertyId
        ENDPROPERTIES
        
      FIELD #ProjSalesCurrencyId
        STRING
        PROPERTIES
          Name                #ProjSalesCurrencyId
          Label               #@SYS56480
          HelpText            #@SYS20788
          Table               #PurchLine
          Origin              #{0C441AEE-3247-46F3-ACE3-9F10E75590D6}
          LegacyId            #77
          ExtendedDataType    #CurrencyCode
          StringSize          #3
        ENDPROPERTIES
        
      FIELD #ProjSalesPrice
        REAL
        PROPERTIES
          Name                #ProjSalesPrice
          Table               #PurchLine
          RelationContext     #Currency
          Origin              #{318828D1-2ADF-4E7D-B7A0-48EF6A3BDC6F}
          LegacyId            #76
          ExtendedDataType    #ProjSalesPriceCost
        ENDPROPERTIES
        
      FIELD #ProjSalesUnitId
        STRING
        PROPERTIES
          Name                #ProjSalesUnitId
          Table               #PurchLine
          Origin              #{7EF04E25-6366-4359-BB27-B937E0E2D0C0}
          LegacyId            #80
          ExtendedDataType    #UnitOfMeasureSymbol
        ENDPROPERTIES
        
      FIELD #ProjTaxGroupId
        STRING
        PROPERTIES
          Name                #ProjTaxGroupId
          HelpText            #@SYS67872
          Table               #PurchLine
          Origin              #{9DAE7F48-4B5B-4938-A1EA-0AC1A3CFCCD4}
          LegacyId            #75
          ExtendedDataType    #ProjTaxGroup
        ENDPROPERTIES
        
      FIELD #ProjTaxItemGroupId
        STRING
        PROPERTIES
          Name                #ProjTaxItemGroupId
          HelpText            #@SYS67873
          Table               #PurchLine
          Origin              #{9C5B27FE-FD50-44F2-B6FD-D8130C62BF24}
          LegacyId            #74
          ExtendedDataType    #ProjTaxItemGroup
        ENDPROPERTIES
        
      FIELD #ProjTransId
        STRING
        PROPERTIES
          Name                #ProjTransId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{9769B6E4-B003-49C0-82AD-CB88487FA441}
          LegacyId            #53
          ExtendedDataType    #ProjItemTransId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #PSARetainScheduleId
        STRING
        PROPERTIES
          Name                #PSARetainScheduleId
          Table               #PurchLine
          Origin              #{73A0AD94-C896-4977-B2E8-1F3D84A7BF63}
          LegacyId            #16032
          ExtendedDataType    #PSAPurchRetainScheduleId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #PSATotalRetainAmount
        REAL
        PROPERTIES
          Name                #PSATotalRetainAmount
          Label               #@SYS3494
          ConfigurationKey    #PSAAPRetainage
          Table               #PurchLine
          Origin              #{C66C8AE2-B123-4B14-AAA0-1B2A7EE1DAC9}
          LegacyId            #16034
          ExtendedDataType    #AmountCur
        ENDPROPERTIES
        
      FIELD #PurchaseType
        ENUM
        PROPERTIES
          Name                #PurchaseType
          Label               #@SYS1201
          HelpText            #@SYS17049
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{9D0552B7-2289-4B25-9355-1F501A1390F8}
          LegacyId            #34
          EnumType            #PurchaseType
        ENDPROPERTIES
        
      FIELD #PurchCommitmentLine_PSN
        INT64
        PROPERTIES
          Name                #PurchCommitmentLine_PSN
          Label               #@SPS1834
          HelpText            #@SPS2047
          ConfigurationKey    #PublicSector
          Table               #PurchLine
          CountryRegionCodes  #FR
          Origin              #{25AC9042-5188-4C14-BD78-A957DE7909B8}
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #PurchId
        STRING
        PROPERTIES
          Name                #PurchId
          HelpText            #@SYS13121
          Mandatory           #Yes
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{F4241750-932A-4641-B5F4-9E8E90C79741}
          LegacyId            #1
          ExtendedDataType    #PurchIdBase
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #PurchMarkup
        REAL
        PROPERTIES
          Name                #PurchMarkup
          HelpText            #@SYS16914
          Table               #PurchLine
          RelationContext     #Currency
          Origin              #{E5502488-338A-4518-8317-2B3C961189ED}
          LegacyId            #30
          ExtendedDataType    #PurchMarkup
        ENDPROPERTIES
        
      FIELD #PurchPrice
        REAL
        PROPERTIES
          Name                #PurchPrice
          Label               #@SYS11770
          HelpText            #@SYS5369
          Table               #PurchLine
          RelationContext     #Currency
          Origin              #{DFDE0529-CB13-46DC-9228-CB25C4283D0B}
          LegacyId            #15
          ExtendedDataType    #PurchPrice
        ENDPROPERTIES
        
      FIELD #PurchQty
        REAL
        PROPERTIES
          Name                #PurchQty
          Table               #PurchLine
          Origin              #{B5A900A8-5972-4DD5-9E8E-F620CD9D53F2}
          LegacyId            #29
          ExtendedDataType    #PurchOrderedQty
        ENDPROPERTIES
        
      FIELD #PurchReceivedNow
        REAL
        PROPERTIES
          Name                #PurchReceivedNow
          Label               #@SYS1743
          HelpText            #@SYS69028
          Table               #PurchLine
          Origin              #{B6F417AE-F0F7-4AD1-82D9-4F6D024966BC}
          LegacyId            #11
          ExtendedDataType    #PurchQty
        ENDPROPERTIES
        
      FIELD #PurchReqId
        STRING
        PROPERTIES
          Name                #PurchReqId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{3E6BC520-E211-4B78-AAF8-CDC4487A98CC}
          LegacyId            #115
          ExtendedDataType    #PurchReqId
          StringSize          #25
        ENDPROPERTIES
        
      FIELD #PurchReqLineRefId
        GUID
        PROPERTIES
          Name                #PurchReqLineRefId
          Visible             #No
          Table               #PurchLine
          Origin              #{80D0B73F-6B7F-41B3-AA59-8F30524C514E}
          LegacyId            #106
          ExtendedDataType    #PurchReqLineRefId
        ENDPROPERTIES
        
      FIELD #PurchStatus
        ENUM
        PROPERTIES
          Name                #PurchStatus
          Label               #@SYS7161
          HelpText            #@SYS6391
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{C983A9E5-7B43-4EB2-9057-A473123B3D36}
          LegacyId            #4
          EnumType            #PurchStatus
        ENDPROPERTIES
        
      FIELD #PurchUnit
        STRING
        PROPERTIES
          Name                #PurchUnit
          Table               #PurchLine
          Origin              #{1AA19964-78F1-420C-8751-9797479F1D16}
          LegacyId            #21
          ExtendedDataType    #PurchUnit
        ENDPROPERTIES
        
      FIELD #QtyOrdered
        REAL
        PROPERTIES
          Name                #QtyOrdered
          HelpText            #@SYS8090
          Table               #PurchLine
          Origin              #{DC09ABF8-A41A-4D7B-96BA-89639920C301}
          LegacyId            #10
          ExtendedDataType    #InventQty
        ENDPROPERTIES
        
      FIELD #RBOPackageLineNum
        REAL
        PROPERTIES
          Name                #RBOPackageLineNum
          Label               #@RET4403
          ConfigurationKey    #RetailHeadquarters
          Table               #PurchLine
          Origin              #{2420D75B-F36B-4145-8013-F913D0C96767}
          LegacyId            #16054
          ExtendedDataType    #LineNum
        ENDPROPERTIES
        
      FIELD #Remainder
        REAL
        PROPERTIES
          Name                #Remainder
          Label               #@SYS53728
          HelpText            #@SYS11699
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{6F085E85-8122-4E9C-B999-CD71F29C0A4F}
          LegacyId            #16036
          ExtendedDataType    #InventQty
        ENDPROPERTIES
        
      FIELD #RemainInventFinancial
        REAL
        PROPERTIES
          Name                #RemainInventFinancial
          Label               #@SYS22380
          HelpText            #@SYS27459
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{367AF194-0F13-4999-8DD3-CDB0514F4763}
          LegacyId            #105
          ExtendedDataType    #InventQty
        ENDPROPERTIES
        
      FIELD #RemainInventPhysical
        REAL
        PROPERTIES
          Name                #RemainInventPhysical
          Label               #@SYS22556
          HelpText            #@SYS11699
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{06C06833-3CA1-4234-97DE-DD4769CA3796}
          LegacyId            #36
          ExtendedDataType    #InventQty
        ENDPROPERTIES
        
      FIELD #RemainPurchFinancial
        REAL
        PROPERTIES
          Name                #RemainPurchFinancial
          Label               #@SYS22380
          HelpText            #@SYS27459
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{571FDAC6-F55E-49C4-A32F-1D353316878F}
          LegacyId            #13
          ExtendedDataType    #PurchQty
        ENDPROPERTIES
        
      FIELD #RemainPurchPhysical
        REAL
        PROPERTIES
          Name                #RemainPurchPhysical
          Label               #@SYS22556
          HelpText            #@SYS27457
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{4419CD00-535D-4A2F-AFF8-AD6F960EA274}
          LegacyId            #12
          ExtendedDataType    #PurchQty
        ENDPROPERTIES
        
      FIELD #ReqAttention
        STRING
        PROPERTIES
          Name                #ReqAttention
          Table               #PurchLine
          Origin              #{E12AF01C-723E-4CC3-B7C6-F696E247E497}
          LegacyId            #114
          ExtendedDataType    #PurchReqAttention
          StringSize          #255
        ENDPROPERTIES
        
      FIELD #ReqPlanIdSched
        STRING
        PROPERTIES
          Name                #ReqPlanIdSched
          AllowEdit           #No
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{DA3106A6-D2BF-485B-9745-B92D9258E8EE}
          LegacyId            #56
          ExtendedDataType    #ReqPlanIdSched
        ENDPROPERTIES
        
      FIELD #ReqPOId
        STRING
        PROPERTIES
          Name                #ReqPOId
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{26B8D248-F4EB-4036-9DD7-44BDC221273D}
          LegacyId            #57
          ExtendedDataType    #ReqPOId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #Requester
        INT64
        PROPERTIES
          Name                #Requester
          Table               #PurchLine
          Origin              #{190FB1EF-58D9-4282-A58E-BAAA0E090D33}
          LegacyId            #288
          ExtendedDataType    #PurchRequester
        ENDPROPERTIES
        
      FIELD #RetailLineNumEx1
        REAL
        PROPERTIES
          Name                #RetailLineNumEx1
          ConfigurationKey    #RetailHeadquarters
          Table               #PurchLine
          Origin              #{B7B26FF4-D418-4BDF-A9D8-4EE8A6E7D0A1}
          LegacyId            #16051
          ExtendedDataType    #LineNum
        ENDPROPERTIES
        
      FIELD #RetailPackageId
        STRING
        PROPERTIES
          Name                #RetailPackageId
          Table               #PurchLine
          Origin              #{A35F2580-6940-4CED-A0F4-6652E0C496A0}
          LegacyId            #16053
          ExtendedDataType    #RetailPackageId
        ENDPROPERTIES
        
      FIELD #RetailTempValueEx2
        REAL
        PROPERTIES
          Name                #RetailTempValueEx2
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{B26C2ACF-ADDB-482E-9AC4-FB1C4FDC08ED}
          LegacyId            #16058
          ExtendedDataType    #RetailTempValueEx2
        ENDPROPERTIES
        
      FIELD #ReturnActionId
        STRING
        PROPERTIES
          Name                #ReturnActionId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{DEC7010C-431B-4252-89CA-2CD2E0433C35}
          LegacyId            #62
          ExtendedDataType    #PurchReturnActionId
        ENDPROPERTIES
        
      FIELD #ReturnDispositionCodeId
        STRING
        PROPERTIES
          Name                #ReturnDispositionCodeId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{FAFE2B07-8F88-49BB-9DC0-5F0917D4BA96}
          LegacyId            #110
          ExtendedDataType    #ReturnDispositionCodeId
        ENDPROPERTIES
        
      FIELD #ReturnStatus
        ENUM
        PROPERTIES
          Name                #ReturnStatus
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{76730C7B-6DD0-4024-976C-D261A5FA0169}
          LegacyId            #109
          EnumType            #ReturnStatusLine
        ENDPROPERTIES
        
      FIELD #Scrap
        ENUM
        PROPERTIES
          Name                #Scrap
          Label               #@SYS24894
          HelpText            #@SYS29137
          Table               #PurchLine
          Origin              #{336A8658-4103-4038-A963-32058287AE8A}
          LegacyId            #61
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ServiceAddress
        STRING
        PROPERTIES
          Name                #ServiceAddress
          Label               #@SYS88743
          HelpText            #@SYS27762
          AllowEditOnCreate   #No
          AllowEdit           #No
          ConfigurationKey    #TradeMultiShipTo
          Table               #PurchLine
          Origin              #{251F9F10-D639-4F1E-B490-A13EB9DC658A}
          LegacyId            #16037
          ExtendedDataType    #Addressing
          StringSize          #250
        ENDPROPERTIES
        
      FIELD #ServiceDate
        DATE
        PROPERTIES
          Name                #ServiceDate
          Label               #@SYS88746
          Table               #PurchLine
          Origin              #{482E3D80-4656-4FA1-A049-10D11D97362F}
          LegacyId            #16035
          ExtendedDataType    #DlvDate
        ENDPROPERTIES
        
      FIELD #ShippingDateConfirmed
        DATE
        PROPERTIES
          Name                #ShippingDateConfirmed
          Visible             #No
          Table               #PurchLine
          Origin              #{0C3084C7-48F6-4267-84E1-609252706493}
          LegacyId            #39
          ExtendedDataType    #SalesShippingDateConfirmed
        ENDPROPERTIES
        
      FIELD #ShippingDateRequested
        DATE
        PROPERTIES
          Name                #ShippingDateRequested
          Visible             #No
          Table               #PurchLine
          Origin              #{FEF95137-DAC9-47D8-B34C-2F96FB07ECB1}
          LegacyId            #5
          ExtendedDataType    #SalesShippingDateRequested
        ENDPROPERTIES
        
      FIELD #SkipUpdate
        ENUM
        PROPERTIES
          Name                #SkipUpdate
          SaveContents        #No
          Visible             #No
          Table               #PurchLine
          Origin              #{828D546E-6981-4D2E-9E59-10AFACBD8460}
          LegacyId            #92
          EnumType            #InterCompanySkipUpdate
        ENDPROPERTIES
        
      FIELD #SourceDocumentLine
        INT64
        PROPERTIES
          Name                #SourceDocumentLine
          Label               #@SYS132694
          Visible             #No
          Table               #PurchLine
          Origin              #{14BB4DB7-91CB-4D9C-8D35-DEF07A27509F}
          LegacyId            #130
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #StatisticValue_LT
        REAL
        PROPERTIES
          Name                #StatisticValue_LT
          Table               #PurchLine
          Origin              #{5A8A12FA-5824-4432-8526-1736221D24E5}
          LegacyId            #16003
          ExtendedDataType    #LtIntrastatStatisticValue
        ENDPROPERTIES
        
      FIELD #StatProcId
        STRING
        PROPERTIES
          Name                #StatProcId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{ED9720C4-1644-43A3-AEA7-BBF6D3B33E42}
          LegacyId            #68
          ExtendedDataType    #IntrastatProcId
        ENDPROPERTIES
        
      FIELD #StatTriangularDeal
        ENUM
        PROPERTIES
          Name                #StatTriangularDeal
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{F9094166-7527-47B2-AEA9-AF1844AE7714}
          LegacyId            #95
          ExtendedDataType    #IntrastatTriangularDeal
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #StockedProduct
        ENUM
        PROPERTIES
          Name                #StockedProduct
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{FAD8DC13-0FEE-4AF3-8482-44A50C1BED3B}
          LegacyId            #302
          ExtendedDataType    #TradeStockedProduct
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #SystemEntryChangePolicy
        INT64
        PROPERTIES
          Name                #SystemEntryChangePolicy
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{4A200910-AF60-482B-93ED-0C91396BCEC8}
          LegacyId            #194
          ExtendedDataType    #PriceDiscPolicySystem
        ENDPROPERTIES
        
      FIELD #SystemEntrySource
        ENUM
        PROPERTIES
          Name                #SystemEntrySource
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{65120059-3214-47D7-9CEE-F51E61395C60}
          LegacyId            #195
          EnumType            #PriceDiscSystemSource
        ENDPROPERTIES
        
      FIELD #Tax1099Amount
        REAL
        PROPERTIES
          Name                #Tax1099Amount
          Table               #PurchLine
          Origin              #{EAF7B735-4877-4DE2-BE27-37263D7D8689}
          LegacyId            #47
          ExtendedDataType    #Tax1099Amount
        ENDPROPERTIES
        
      FIELD #Tax1099Fields
        INT64
        PROPERTIES
          Name                #Tax1099Fields
          Table               #PurchLine
          Origin              #{4EB4E706-74B7-4B05-832D-2D6DCF1FD918}
          LegacyId            #234
          ExtendedDataType    #Tax1099FieldsRecId
        ENDPROPERTIES
        
      FIELD #Tax1099RecId
        INT64
        PROPERTIES
          Name                #Tax1099RecId
          Visible             #No
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{078B518B-E652-4F12-A473-475AE0EDC4A7}
          LegacyId            #116
          ExtendedDataType    #Tax1099RecId
        ENDPROPERTIES
        
      FIELD #Tax1099State
        STRING
        PROPERTIES
          Name                #Tax1099State
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{0E7F50FA-6DD9-4C08-831B-54BBAF3DD972}
          LegacyId            #96
          ExtendedDataType    #Tax1099State
        ENDPROPERTIES
        
      FIELD #Tax1099StateAmount
        REAL
        PROPERTIES
          Name                #Tax1099StateAmount
          Table               #PurchLine
          Origin              #{492B0BCD-65CA-4046-8C9F-C0E88E61ECED}
          LegacyId            #97
          ExtendedDataType    #Tax1099StateAmount
        ENDPROPERTIES
        
      FIELD #TaxAutogenerated
        ENUM
        PROPERTIES
          Name                #TaxAutogenerated
          Table               #PurchLine
          Origin              #{C3CFBF95-A7D4-4B61-8095-DBC6855C4A70}
          LegacyId            #43
          ExtendedDataType    #TaxAutoGenerated
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #TaxGroup
        STRING
        PROPERTIES
          Name                #TaxGroup
          HelpText            #@SYS21920
          Table               #PurchLine
          Origin              #{7BBE9B6B-8ED8-4E1E-88AD-17E3A5E0E961}
          LegacyId            #9
          ExtendedDataType    #TaxGroup
        ENDPROPERTIES
        
      FIELD #TaxItemGroup
        STRING
        PROPERTIES
          Name                #TaxItemGroup
          Table               #PurchLine
          Origin              #{F5050A2B-96C3-4E9C-B0F6-9F918CEE7971}
          LegacyId            #37
          ExtendedDataType    #TaxItemGroup
        ENDPROPERTIES
        
      FIELD #TaxServiceCode_BR
        STRING
        PROPERTIES
          Name                #TaxServiceCode_BR
          Table               #PurchLine
          Origin              #{2A111F60-0154-1000-6BAE-1254F070F8F1}
          LegacyId            #8032
          ExtendedDataType    #TaxServiceCodeId_BR
        ENDPROPERTIES
        
      FIELD #TaxWithholdBaseCur_TH
        REAL
        PROPERTIES
          Name                #TaxWithholdBaseCur_TH
          Label               #@SYS314127
          HelpText            #@SYS314128
          Table               #PurchLine
          CountryRegionCodes  #TH,SA,GB,IE
          RelationContext     #Currency
          Origin              #{D6020EA7-0556-4240-9A52-214E83553FAA}
          LegacyId            #8019
          ExtendedDataType    #TaxWithholdBaseCur
        ENDPROPERTIES
        
      FIELD #TaxWithholdGroup_TH
        STRING
        PROPERTIES
          Name                #TaxWithholdGroup_TH
          Table               #PurchLine
          CountryRegionCodes  #TH,SA,GB,IE,BR
          IgnoreEDTRelation   #Yes
          Origin              #{3B3F11A0-03F7-4AE4-9095-47B6D9DDFBB4}
          LegacyId            #8021
          ExtendedDataType    #TaxWithholdGroup
        ENDPROPERTIES
        
      FIELD #TaxWithholdItemGroupHeading_TH
        INT64
        PROPERTIES
          Name                #TaxWithholdItemGroupHeading_TH
          Table               #PurchLine
          Origin              #{E25F8E18-7A63-4E52-A6D6-F1E0C47F8F7F}
          LegacyId            #249
          ExtendedDataType    #TaxWithholdItemGroupId_TH
        ENDPROPERTIES
        
      FIELD #TransactionCode
        STRING
        PROPERTIES
          Name                #TransactionCode
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{9982CC42-D784-49DB-8C10-70BCCA5F349D}
          LegacyId            #38
          ExtendedDataType    #IntrastatTransactionCodeId
        ENDPROPERTIES
        
      FIELD #Transport
        STRING
        PROPERTIES
          Name                #Transport
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{9076F7FD-6180-4081-BBC6-C2982E3F553F}
          LegacyId            #67
          ExtendedDataType    #IntrastatTransport
        ENDPROPERTIES
        
      FIELD #UnderDeliveryPct
        REAL
        PROPERTIES
          Name                #UnderDeliveryPct
          Table               #PurchLine
          Origin              #{5C5356A3-7C79-42EF-AA7B-BEE21F71526A}
          LegacyId            #44
          ExtendedDataType    #PurchUnderDeliveryPct
        ENDPROPERTIES
        
      FIELD #VariantId
        STRING
        PROPERTIES
          Name                #VariantId
          Table               #PurchLine
          Origin              #{FB80C492-5DC3-40F7-A35F-1360A75494AD}
          LegacyId            #16052
          ExtendedDataType    #RetailVariantId
        ENDPROPERTIES
        
      FIELD #VendAccount
        STRING
        PROPERTIES
          Name                #VendAccount
          Mandatory           #Yes
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{9373BFB6-8383-4032-BEA6-EAA5CC422D80}
          LegacyId            #27
          ExtendedDataType    #VendAccount
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #VendGroup
        STRING
        PROPERTIES
          Name                #VendGroup
          Label               #@SYS3815
          HelpText            #@SYS9253
          Mandatory           #Yes
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{E8E621B3-E01E-4C13-8F62-FFE4893EF737}
          LegacyId            #26
          ExtendedDataType    #VendGroupId
        ENDPROPERTIES
        
      FIELD #WfDeliveryDueState
        ENUM
        PROPERTIES
          Name                #WfDeliveryDueState
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{2FF4AD74-4931-489D-BEB8-B7A6369B8BD7}
          LegacyId            #231
          EnumType            #TradeWorkflowState
        ENDPROPERTIES
        
      FIELD #WfInvReceivedState
        ENUM
        PROPERTIES
          Name                #WfInvReceivedState
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{E7C0FFF0-C383-4F0B-A1EB-EE9E360A67DF}
          LegacyId            #230
          EnumType            #TradeWorkflowState
        ENDPROPERTIES
        
      FIELD #WorkflowState
        ENUM
        PROPERTIES
          Name                #WorkflowState
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{0D999E14-65FD-43F7-A9AD-8926840D6981}
          LegacyId            #198
          EnumType            #TradeWorkflowState
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #AutoReport
        PROPERTIES
          Name                #AutoReport
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchId
          #VendAccount
          #ItemId
          #PurchQty
          #PurchPrice
          #LineAmount
          #CurrencyCode
          #PurchStatus
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AddressLookup
        PROPERTIES
          Name                #AddressLookup
          Label               #@SYS88672
        ENDPROPERTIES
        
        GROUPFIELDS
          #LineNumber
          #PurchId
          #VendAccount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AddressReference
        PROPERTIES
          Name                #AddressReference
          Label               #@SYS88679
        ENDPROPERTIES
        
        GROUPFIELDS
          #AddressRefRecId
          #AddressRefTableId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AgreementLine
        PROPERTIES
          Name                #AgreementLine
          Label               #@SYS184156
        ENDPROPERTIES
        
        GROUPFIELDS
          #MatchingAgreementLine
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #All
        PROPERTIES
          Name                #All
          Label               #@SYS80094
        ENDPROPERTIES
        
        GROUPFIELDS
          #RetailLineNumEx1
          #RetailPackageId
          #RBOPackageLineNum
          #RetailTempValueEx2
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Attention
        PROPERTIES
          Name                #Attention
          Label               #@SYS1593
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReqAttention
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Barcode
        PROPERTIES
          Name                #Barcode
          Label               #@SYS24296
        ENDPROPERTIES
        
        GROUPFIELDS
          #BarCode
          #BarCodeType
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Block
        PROPERTIES
          Name                #Block
          Label               #@SYS28075
        ENDPROPERTIES
        
        GROUPFIELDS
          #Blocked
          #Complete
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #BOMRoute
        PROPERTIES
          Name                #BOMRoute
          Label               #@SYS22227
        ENDPROPERTIES
        
        GROUPFIELDS
          #ItemRouteId
          #ItemBOMId
          #itemPBAId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Calculated
        PROPERTIES
          Name                #Calculated
          Label               #@SYS22050
        ENDPROPERTIES
        
        GROUPFIELDS
          #DiscPercent
          #DiscAmount
          #ConfirmedTaxAmount
          #ConfirmedTaxWriteCode
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #CaseMoreInformation
        PROPERTIES
          Name                #CaseMoreInformation
          Label               #@SYS314356
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchId
          #ItemId
          #PurchQty
          #PurchPrice
          #LineAmount
          #CurrencyCode
          #PurchStatus
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Delivery
        PROPERTIES
          Name                #Delivery
          Label               #@SYS4508
        ENDPROPERTIES
        
        GROUPFIELDS
          #OverDeliveryPct
          #UnderDeliveryPct
          #DeliveryDate
          #ConfirmedDlv
          #DeliveryType
          #LineDeliveryType
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DeliveryAddress
        PROPERTIES
          Name                #DeliveryAddress
          Label               #@SYS7924
        ENDPROPERTIES
        
        GROUPFIELDS
          #DeliveryName
          #DeliveryPostalAddress
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DeliveryRef
        PROPERTIES
          Name                #DeliveryRef
          Label               #@SYS78577
        ENDPROPERTIES
        
        GROUPFIELDS
          #CustPurchaseOrderFormNum
          #CustomerRef
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Dimension
        PROPERTIES
          Name                #Dimension
          Label               #@SYS342338
        ENDPROPERTIES
        
        GROUPFIELDS
          #DefaultDimension
          #AccountingDistributionTemplate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DiotInformation_MX
        PROPERTIES
          Name                #DiotInformation_MX
          Label               #@SYS312478
        ENDPROPERTIES
        
        GROUPFIELDS
          #OperationType_MX
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Discount
        PROPERTIES
          Name                #Discount
          Label               #@SYS11829
        ENDPROPERTIES
        
        GROUPFIELDS
          #LineDisc
          #LinePercent
          #MultiLnDisc
          #MultiLnPercent
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DocumentPreview
        PROPERTIES
          Name                #DocumentPreview
          Label               #@SYS117648
        ENDPROPERTIES
        
        GROUPFIELDS
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #FiscalInformation_BR
        PROPERTIES
          Name                #FiscalInformation_BR
          Label               #@GLS56
        ENDPROPERTIES
        
        GROUPFIELDS
          #CFOPTable_BR
          #taxationOrigin_BR
          #taxFiscalClassification_BR
          #exceptionCode_BR
          #TaxServiceCode_BR
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #FixedAssets
        PROPERTIES
          Name                #FixedAssets
          Label               #@SYS12578
        ENDPROPERTIES
        
        GROUPFIELDS
          #CreateFixedAsset
          #AssetGroup
          #AssetId
          #AssetBookId
          #AssetTransTypePurch
          #DepreciationStartDate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #FixedAssets_RU
        PROPERTIES
          Name                #FixedAssets_RU
          Label               #@SYS12578
        ENDPROPERTIES
        
        GROUPFIELDS
          #AssetId
          #AssetTransTypePurch
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ForeignTrade
        PROPERTIES
          Name                #ForeignTrade
          Label               #@SYS27650
        ENDPROPERTIES
        
        GROUPFIELDS
          #TransactionCode
          #Transport
          #Port
          #StatProcId
          #StatTriangularDeal
          #CountyOrigDest
          #StatisticValue_LT
          #IntrastatFulfillmentDate_HU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #g1099Fields
        PROPERTIES
          Name                #g1099Fields
          Label               #@SYS24226
        ENDPROPERTIES
        
        GROUPFIELDS
          #Tax1099Fields
          #Tax1099Amount
          #Tax1099State
          #Tax1099StateAmount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #GSTHSTTaxType_CA
        PROPERTIES
          Name                #GSTHSTTaxType_CA
          Label               #@SYS313827
        ENDPROPERTIES
        
        GROUPFIELDS
          #GSTHSTTaxType_CA
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Identification
        PROPERTIES
          Name                #Identification
          Label               #@SYS5711
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchId
          #LineNumber
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Intercompany
        PROPERTIES
          Name                #Intercompany
          Label               #@SYS74106
        ENDPROPERTIES
        
        GROUPFIELDS
          #interCompanyOriginDisplay
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InterCompanyReference
        PROPERTIES
          Name                #InterCompanyReference
          Label               #@SYS14018
        ENDPROPERTIES
        
        GROUPFIELDS
          #InterCompanyInventTransId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InterCompanyReturn
        PROPERTIES
          Name                #InterCompanyReturn
          Label               #@SYS95177
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReturnDispositionCodeId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Intrastat
        PROPERTIES
          Name                #Intrastat
          Label               #@SYS6530
        ENDPROPERTIES
        
        GROUPFIELDS
          #TransactionCode
          #Transport
          #Port
          #StatProcId
          #CountyOrigDest
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Inventory
        PROPERTIES
          Name                #Inventory
          Label               #@SYS981
        ENDPROPERTIES
        
        GROUPFIELDS
          #InventTransId
          #PdsCWQty
          #QtyOrdered
          #PdsCWRemainInventPhysical
          #RemainInventPhysical
          #PdsCWInventReceivedNow
          #InventReceivedNow
          #PdsCWRemainInventFinancial
          #RemainInventFinancial
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InvoiceMatching
        PROPERTIES
          Name                #InvoiceMatching
          Label               #@SYS113690
        ENDPROPERTIES
        
        GROUPFIELDS
          #MatchingPolicy
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ItemReference
        PROPERTIES
          Name                #ItemReference
          Label               #@SYS24659
        ENDPROPERTIES
        
        GROUPFIELDS
          #ItemRefType
          #InventRefId
          #InventRefTransId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PayWhenPaid
        PROPERTIES
          Name                #PayWhenPaid
          Label               #@PSA3342
        ENDPROPERTIES
        
        GROUPFIELDS
          #IsPwp
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PdsCWInventory
        PROPERTIES
          Name                #PdsCWInventory
          Label               #@PDS83
        ENDPROPERTIES
        
        GROUPFIELDS
          #PdsCWInventReceivedNow
          #pdsCWInvoicedInTotal
          #PdsCWRemainInventFinancial
          #pdsCWReceivedInTotal
          #PdsCWRemainInventPhysical
          #pdsCWRegistered
          #pdsCWArrived
          #pdsCWOrdered
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PdsCWMain
        PROPERTIES
          Name                #PdsCWMain
          Label               #@PDS72
        ENDPROPERTIES
        
        GROUPFIELDS
          #PdsCWQty
          #pdsCWUnitId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PDSPotency
        PROPERTIES
          Name                #PDSPotency
          Label               #@PSC61
        ENDPROPERTIES
        
        GROUPFIELDS
          #PDSCalculationId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PlannedOrder
        PROPERTIES
          Name                #PlannedOrder
          Label               #@SYS8597
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReqPOId
          #ReqPlanIdSched
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PlanReference
        PROPERTIES
          Name                #PlanReference
          Label               #@SYS152559
        ENDPROPERTIES
        
        GROUPFIELDS
          #PlanReference
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Posting
        PROPERTIES
          Name                #Posting
          Label               #@SYS5943
        ENDPROPERTIES
        
        GROUPFIELDS
          #LedgerDimension
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Price
        PROPERTIES
          Name                #Price
          Label               #@SYS11865
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchPrice
          #PurchMarkup
          #PriceUnit
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ProjectCostPrice
        PROPERTIES
          Name                #ProjectCostPrice
          Label               #@SYS13134
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchQty
          #PurchPrice
          #LineAmount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ProjectIdentification
        PROPERTIES
          Name                #ProjectIdentification
          Label               #@SYS89920
        ENDPROPERTIES
        
        GROUPFIELDS
          #ProjId
          #ActivityNumber
          #ProjCategoryId
          #ItemId
          #ProjLinePropertyId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ProjectSalesPrice
        PROPERTIES
          Name                #ProjectSalesPrice
          Label               #@SYS5755
        ENDPROPERTIES
        
        GROUPFIELDS
          #ProjSalesCurrencyId
          #ProjSalesUnitId
          #ProjSalesPrice
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ProjectSalesTax
        PROPERTIES
          Name                #ProjectSalesTax
          Label               #@SYS67871
        ENDPROPERTIES
        
        GROUPFIELDS
          #ProjTaxGroupId
          #ProjTaxItemGroupId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ProjTransaction
        PROPERTIES
          Name                #ProjTransaction
          Label               #@SYS15191
        ENDPROPERTIES
        
        GROUPFIELDS
          #ProjTransId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PSA
        PROPERTIES
          Name                #PSA
          Label               #@PSA43
        ENDPROPERTIES
        
        GROUPFIELDS
          #InventInvoiceNow
          #ServiceAddress
          #Remainder
          #ServiceDate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PSARetainage
        PROPERTIES
          Name                #PSARetainage
          Label               #@PSA2704
        ENDPROPERTIES
        
        GROUPFIELDS
          #PSARetainScheduleId
          #PSATotalRetainAmount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PurchaseLines
        PROPERTIES
          Name                #PurchaseLines
          Label               #@SYS9664
        ENDPROPERTIES
        
        GROUPFIELDS
          #TaxAutogenerated
          #Name
          #ExternalItemId
          #PurchaseType
          #PurchStatus
          #CovRef
          #CurrencyCode
          #LineAmount
          #VendGroup
          #VendAccount
          #LineHeader
          #TaxWithholdBaseCur_TH
          #VariantId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PurchaseQuantity
        PROPERTIES
          Name                #PurchaseQuantity
          Label               #@SYS11187
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchQty
          #PurchReceivedNow
          #RemainPurchPhysical
          #RemainPurchFinancial
          #PurchUnit
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PurchCommitmentLine_PSN
        PROPERTIES
          Name                #PurchCommitmentLine_PSN
          Label               #@SPS1834
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchCommitmentLine_PSN
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PurchLine
        PROPERTIES
          Name                #PurchLine
          Label               #@SYS22957
        ENDPROPERTIES
        
        GROUPFIELDS
          #ProcurementCategory
          #Name
          #ExternalItemId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PurchReq
        PROPERTIES
          Name                #PurchReq
          Label               #@SYS94925
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchReqId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PurchReqReference
        PROPERTIES
          Name                #PurchReqReference
          Label               #@SYS110285
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchReqId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Requisitioner
        PROPERTIES
          Name                #Requisitioner
          Label               #@SYS108788
        ENDPROPERTIES
        
        GROUPFIELDS
          #Requester
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ReturnedItem
        PROPERTIES
          Name                #ReturnedItem
          Label               #@SYS24700
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReturnActionId
          #Scrap
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #RFIDTagging
        PROPERTIES
          Name                #RFIDTagging
          Label               #@SYS90171
        ENDPROPERTIES
        
        GROUPFIELDS
          #ItemTagging
          #CaseTagging
          #PalletTagging
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SalesTax
        PROPERTIES
          Name                #SalesTax
          Label               #@SYS5878
        ENDPROPERTIES
        
        GROUPFIELDS
          #TaxItemGroup
          #TaxGroup
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Status
        PROPERTIES
          Name                #Status
          Label               #@SYS25587
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchStatus
          #Blocked
          #Complete
          #WorkflowState
          #qualityOrderStatusDisplay
          #IsFinalized
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #TableGroup
        PROPERTIES
          Name                #TableGroup
          Label               #@SYS21958
        ENDPROPERTIES
        
        GROUPFIELDS
          #ItemId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #WithholdingTax
        PROPERTIES
          Name                #WithholdingTax
          Label               #@SYS7372
        ENDPROPERTIES
        
        GROUPFIELDS
          #TaxWithholdGroup_TH
          #TaxWithholdItemGroupHeading_TH
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #PurchLineIdx
      PROPERTIES
        Name                #PurchLineIdx
        AllowDuplicates     #No
        Origin              #{2B0C0001-0154-1000-F795-345DCC5E696E}
        LegacyId            #1
      ENDPROPERTIES
      
      INDEXFIELDS
        #PurchId
        #LineNumber
      ENDINDEXFIELDS
      
      #TransIdIdx
      PROPERTIES
        Name                #TransIdIdx
        AllowDuplicates     #No
        AlternateKey        #Yes
        Origin              #{2B0A0003-0154-1000-E060-C58073496449}
        LegacyId            #3
      ENDPROPERTIES
      
      INDEXFIELDS
        #InventTransId
      ENDINDEXFIELDS
      
      #PurchStatusIdx
      PROPERTIES
        Name                #PurchStatusIdx
        Origin              #{2B0E0004-0154-1000-8C84-84B92C4DD873}
        LegacyId            #4
      ENDPROPERTIES
      
      INDEXFIELDS
        #PurchId
        #PurchStatus
      ENDINDEXFIELDS
      
      #ItemIdx
      PROPERTIES
        Name                #ItemIdx
        AllowDuplicates     #No
        Origin              #{2B070005-0154-1000-4974-656D49647800}
        LegacyId            #5
      ENDPROPERTIES
      
      INDEXFIELDS
        #ItemId
        #RecId
      ENDINDEXFIELDS
      
      #StatusItemIdx
      PROPERTIES
        Name                #StatusItemIdx
        Origin              #{2B0D0006-0154-1000-FA60-CA376FD75B74}
        LegacyId            #6
      ENDPROPERTIES
      
      INDEXFIELDS
        #PurchStatus
        #ItemId
      ENDINDEXFIELDS
      
      #AgreementLineIdx
      PROPERTIES
        Name                #AgreementLineIdx
        Origin              #{2B10001B-0154-1000-7D23-3315EA9E2768}
        LegacyId            #27
      ENDPROPERTIES
      
      INDEXFIELDS
        #MatchingAgreementLine
      ENDINDEXFIELDS
      
      #Tax1099FieldsIdx
      PROPERTIES
        Name                #Tax1099FieldsIdx
        Origin              #{2B10002C-0154-1000-6712-5A4CA88CFD3F}
        LegacyId            #44
      ENDPROPERTIES
      
      INDEXFIELDS
        #Tax1099Fields
      ENDINDEXFIELDS
      
      #SourceDocumentLine
      PROPERTIES
        Name                #SourceDocumentLine
        AllowDuplicates     #No
        AlternateKey        #Yes
        UniqueAcrossCompanies #Yes
        Origin              #{9B96AFD2-3293-4EEE-8651-F5674F97BCE6}
        LegacyId            #49
      ENDPROPERTIES
      
      INDEXFIELDS
        #SourceDocumentLine
        #Partition
        #dataAreaId
      ENDINDEXFIELDS
      
      #CFOPTable_BRIdx
      PROPERTIES
        Name                #CFOPTable_BRIdx
        Origin              #{2B0F1F55-0154-1000-EAB8-D71998205CD0}
        LegacyId            #8021
      ENDPROPERTIES
      
      INDEXFIELDS
        #CFOPTable_BR
      ENDINDEXFIELDS
      
      #RBOPackageIdx
      PROPERTIES
        Name                #RBOPackageIdx
        Origin              #{2B0D3E84-0154-1000-2FA5-7F125BC77D61}
        LegacyId            #16004
      ENDPROPERTIES
      
      INDEXFIELDS
        #PurchId
        #RetailPackageId
        #RBOPackageLineNum
      ENDINDEXFIELDS
      
      #MMS_PrecedingLWOIdx
      PROPERTIES
        Name                #MMS_PrecedingLWOIdx
        Origin              #{25E533B0-040B-4040-A296-BB8CD63FB7AB}
      ENDPROPERTIES
      
      INDEXFIELDS
        #MMS_PrecedingLWO
      ENDINDEXFIELDS
      
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
      REFERENCE #AccountingDistributionTemplate
        PROPERTIES
          Name                #AccountingDistributionTemplate
          Table               #AccountingDistributionTemplate
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #AccountingDistributionTemplate
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #AgreementLine
        PROPERTIES
          Name                #AgreementLine
          Table               #AgreementLine
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #AgreementLine
          Role                #AgreementLine_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #MatchingAgreementLine
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #AssetBook
        PROPERTIES
          Name                #AssetBook
          Table               #AssetBook
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AssetId
            RelatedField        #AssetId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AssetBookId
            RelatedField        #BookId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #AssetBookTable
        PROPERTIES
          Name                #AssetBookTable
          Table               #AssetBookTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #AssetBookId
            RelatedField        #BookId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #AssetGroup
        PROPERTIES
          Name                #AssetGroup
          Table               #AssetGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #AssetGroup
            RelatedField        #GroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #AssetTable
        PROPERTIES
          Name                #AssetTable
          Table               #AssetTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #AssetId
            RelatedField        #AssetId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #BarcodeSetup
        PROPERTIES
          Name                #BarcodeSetup
          Table               #BarcodeSetup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #BarCodeType
            RelatedField        #barcodeSetupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #BOMTable
        PROPERTIES
          Name                #BOMTable
          Table               #BOMTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ItemBOMId
            RelatedField        #BOMId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CFOPTable_BR
        PROPERTIES
          Name                #CFOPTable_BR
          Table               #CFOPTable_BR
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CFOPTable_BR
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Common
        PROPERTIES
          Name                #Common
          Table               #Common
          Validate            #No
          RelationshipType    #Link
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AddressRefRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AddressRefTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CountyOrigDest
        PROPERTIES
          Name                #CountyOrigDest
          Table               #LogisticsAddressCounty
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #CountyOrigDest
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #CountyOrigDest
            RelatedField        #CountyId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Currency
        PROPERTIES
          Name                #Currency
          Table               #Currency
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #Currency
          Role                #PurchLine
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CurrencyCode
            RelatedField        #CurrencyCode
            SourceEDT           #VendCurrencyCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DefaultDimension
        PROPERTIES
          Name                #DefaultDimension
          Table               #DimensionAttributeValueSet
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #DimensionAttributeValueSet
          Role                #DimensionAttributeValueSet_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #DefaultDimension
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DeliveryPostalAddress
        PROPERTIES
          Name                #DeliveryPostalAddress
          Table               #LogisticsPostalAddress
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #LogisticsPostalAddress
          Role                #LogisticsPostalAddress_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #DeliveryPostalAddress
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #IntrastatPort
        PROPERTIES
          Name                #IntrastatPort
          Table               #IntrastatPort
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Port
            RelatedField        #PortId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #IntrastatStatProc
        PROPERTIES
          Name                #IntrastatStatProc
          Table               #IntrastatStatProc
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #StatProcId
            RelatedField        #StatProcId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #IntrastatTransactionCode
        PROPERTIES
          Name                #IntrastatTransactionCode
          Table               #IntrastatTransactionCode
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TransactionCode
            RelatedField        #TransactionCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #IntrastatTransportMode
        PROPERTIES
          Name                #IntrastatTransportMode
          Table               #IntrastatTransportMode
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Transport
            RelatedField        #TransPortCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventDim
        PROPERTIES
          Name                #InventDim
          Table               #InventDim
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #InventDimId
            RelatedField        #inventDimId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventDimCombination
        PROPERTIES
          Name                #InventDimCombination
          Table               #InventDimCombination
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #VariantId
            RelatedField        #RetailVariantId
            SourceEDT           #RetailVariantId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventItemBarcode
        PROPERTIES
          Name                #InventItemBarcode
          Table               #InventItemBarcode
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #BarCode
            RelatedField        #itemBarCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventJournalTableRef
        PROPERTIES
          Name                #InventJournalTableRef
          Table               #InventJournalTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PurchLine
            Field               #ItemRefType
            Value               #5
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InventRefId
            RelatedField        #JournalId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventTable
        PROPERTIES
          Name                #InventTable
          Table               #InventTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ItemId
            RelatedField        #ItemId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventTransOrigin
        PROPERTIES
          Name                #InventTransOrigin
          Table               #InventTransOrigin
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroOne
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InventTransId
            RelatedField        #InventTransId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #LedgerDimension
        PROPERTIES
          Name                #LedgerDimension
          Table               #DimensionAttributeValueCombination
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #DimensionAttributeValueCombination
          Role                #DimensionAttributeValueCombination_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #LedgerDimension
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PBATable
        PROPERTIES
          Name                #PBATable
          Table               #PBATable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #itemPBAId
            RelatedField        #PBAId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PlanReference
        PROPERTIES
          Name                #PlanReference
          Table               #PlanReference
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PlanReference
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PriceDiscChangePolicyRecId1
        PROPERTIES
          Name                #PriceDiscChangePolicyRecId1
          Table               #PriceDiscChangePolicy
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PriceDiscChangePolicy
          Role                #PriceDiscChangePolicy_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #SystemEntryChangePolicy
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PriceDiscChangePolicyRecId2
        PROPERTIES
          Name                #PriceDiscChangePolicyRecId2
          Table               #PriceDiscChangePolicy
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PriceDiscChangePolicy_1
          Role                #PriceDiscChangePolicy_1_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ManualEntryChangepolicy
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProcurementCategory
        PROPERTIES
          Name                #ProcurementCategory
          Table               #EcoResCategory
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #EcoResCategory
          Role                #EcoResCategory_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProcurementCategory
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProdLineRef
        PROPERTIES
          Name                #ProdLineRef
          Table               #ProdTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ProdLine
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InventRefId
            RelatedField        #ProdId
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PurchLine
            Field               #ItemRefType
            Value               #4
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProdTableRef
        PROPERTIES
          Name                #ProdTableRef
          Table               #ProdTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ProdTable
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PurchLine
            Field               #ItemRefType
            Value               #3
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InventRefId
            RelatedField        #ProdId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjCategory
        PROPERTIES
          Name                #ProjCategory
          Table               #ProjCategory
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjCategoryId
            RelatedField        #CategoryId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjectSalesCurrency
        PROPERTIES
          Name                #ProjectSalesCurrency
          Table               #Currency
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ProjectSalesCurrency
          Role                #PurchLine
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjSalesCurrencyId
            RelatedField        #CurrencyCode
            SourceEDT           #CurrencyCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjectTaxGroupHeading
        PROPERTIES
          Name                #ProjectTaxGroupHeading
          Table               #TaxGroupHeading
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ProjectTaxGroupHeading
          Role                #PurchLine
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjTaxGroupId
            RelatedField        #TaxGroup
            SourceEDT           #ProjTaxGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjectTaxItemGroupHeading
        PROPERTIES
          Name                #ProjectTaxItemGroupHeading
          Table               #TaxItemGroupHeading
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ProjectTaxItemGroupHeading
          Role                #PurchLine
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjTaxItemGroupId
            RelatedField        #TaxItemGroup
            SourceEDT           #ProjTaxItemGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjItemTrans
        PROPERTIES
          Name                #ProjItemTrans
          Table               #ProjItemTrans
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjTransId
            RelatedField        #ProjTransId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjLineProperty
        PROPERTIES
          Name                #ProjLineProperty
          Table               #ProjLineProperty
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjLinePropertyId
            RelatedField        #LinePropertyId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjSalesUnitId
        PROPERTIES
          Name                #ProjSalesUnitId
          Table               #UnitOfMeasure
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ProjSalesUnitId
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ProjSalesUnitId
            RelatedField        #Symbol
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjTable
        PROPERTIES
          Name                #ProjTable
          Table               #ProjTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjId
            RelatedField        #ProjId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PSAVendorRetentionTermsTable
        PROPERTIES
          Name                #PSAVendorRetentionTermsTable
          Table               #PSAVendorRetentionTermsTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PSARetainScheduleId
            RelatedField        #VendorRetentionTermId
            SourceEDT           #PSAPurchRetainScheduleId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchCommitmentLine_PSN
        PROPERTIES
          Name                #PurchCommitmentLine_PSN
          Table               #PurchCommitmentLine_PSN
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #PurchCommitmentLine_PSN
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PurchCommitmentLine_PSN
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchReqLine
        PROPERTIES
          Name                #PurchReqLine
          Table               #PurchReqLine
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroOne
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PurchReqLineRefId
            RelatedField        #LineRefId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchReturnActionDefaults
        PROPERTIES
          Name                #PurchReturnActionDefaults
          Table               #ReturnActionDefaults
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PurchReturnActionDefaults
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ReturnActionId
            RelatedField        #ReturnActionId
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #1
            Table               #ReturnActionDefaults
            RelatedField        #Module
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchTable
        PROPERTIES
          Name                #PurchTable
          Table               #PurchTable
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PurchId
            RelatedField        #PurchId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchUnit
        PROPERTIES
          Name                #PurchUnit
          Table               #UnitOfMeasure
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PurchUnit
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PurchUnit
            RelatedField        #Symbol
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ReqPlanSched
        PROPERTIES
          Name                #ReqPlanSched
          Table               #ReqPlanSched
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ReqPlanIdSched
            RelatedField        #ReqPlanIdSched
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Requester_FK
        PROPERTIES
          Name                #Requester_FK
          Table               #HcmWorker
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #HcmWorker
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Requester
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #RetailPackageTable
        PROPERTIES
          Name                #RetailPackageTable
          Table               #RetailPackageTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #RetailPackageId
            RelatedField        #PackageId
            SourceEDT           #RetailPackageId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ReturnDispositionCode
        PROPERTIES
          Name                #ReturnDispositionCode
          Table               #ReturnDispositionCode
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ReturnDispositionCodeId
            RelatedField        #DispositionCodeId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #RouteTable
        PROPERTIES
          Name                #RouteTable
          Table               #RouteTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ItemRouteId
            RelatedField        #RouteId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SalesTableRef
        PROPERTIES
          Name                #SalesTableRef
          Table               #SalesTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PurchLine
            Field               #ItemRefType
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InventRefId
            RelatedField        #SalesId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #smmActivities
        PROPERTIES
          Name                #smmActivities
          Table               #smmActivities
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ActivityNumber
            RelatedField        #ActivityNumber
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SourceDocumentLine
        PROPERTIES
          Name                #SourceDocumentLine
          Table               #SourceDocumentLine
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroOne
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #SourceDocumentLine
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #State
        PROPERTIES
          Name                #State
          Table               #LogisticsAddressState
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #Tax1099State
            RelatedField        #StateId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Tax1099BoxDetail
        PROPERTIES
          Name                #Tax1099BoxDetail
          Table               #Tax1099BoxDetail
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #Tax1099BoxDetail
          Role                #Tax1099BoxDetail_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #Tax1099RecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Tax1099Fields
        PROPERTIES
          Name                #Tax1099Fields
          Table               #Tax1099Fields
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #Tax1099Fields
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Tax1099Fields
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxGroupHeading
        PROPERTIES
          Name                #TaxGroupHeading
          Table               #TaxGroupHeading
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #TaxGroupHeading
          Role                #PurchLine
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TaxGroup
            RelatedField        #TaxGroup
            SourceEDT           #TaxGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxItemGroupHeading
        PROPERTIES
          Name                #TaxItemGroupHeading
          Table               #TaxItemGroupHeading
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #TaxItemGroupHeading
          Role                #PurchLine
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TaxItemGroup
            RelatedField        #TaxItemGroup
            SourceEDT           #TaxItemGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxServiceCode_BR
        PROPERTIES
          Name                #TaxServiceCode_BR
          Table               #TaxServiceCode_BR
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #PurchLine_TaxServiceCode_BR
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TaxServiceCode_BR
            RelatedField        #ServiceCodeId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxWithholdGroupHeading
        PROPERTIES
          Name                #TaxWithholdGroupHeading
          Table               #TaxWithholdGroupHeading
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TaxWithholdGroup_TH
            RelatedField        #TaxWithholdGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxWithholdItemGroupHeading_TH
        PROPERTIES
          Name                #TaxWithholdItemGroupHeading_TH
          Table               #TaxWithholdItemGroupHeading_TH
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #TaxWithholdItemGroupHeading_TH
          Role                #TaxWithholdItemGroupHeading_TH_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TaxWithholdItemGroupHeading_TH
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendGroup
        PROPERTIES
          Name                #VendGroup
          Table               #VendGroup
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #VendGroup
            RelatedField        #VendGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendTable
        PROPERTIES
          Name                #VendTable
          Table               #VendTable
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #VendAccount
            RelatedField        #AccountNum
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
      #ProjCreditNoteSource(PurchLine)
      PROPERTIES
        Table               #ProjCreditNoteSource
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #PurchLine_Intrastat(PurchLine)
      PROPERTIES
        Table               #PurchLine_Intrastat
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #PurchLine_IN(PurchLine)
      PROPERTIES
        Table               #PurchLine_IN
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #PurchLine_W(PurchLine)
      PROPERTIES
        Table               #PurchLine_W
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #CustomsExportOrderTable_IN
      PROPERTIES
        Table               #CustomsExportOrderTable_IN
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #CustomsImportAssessableValue_IN
      PROPERTIES
        Table               #CustomsImportAssessableValue_IN
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #EximPurchLine_IN
      PROPERTIES
        Table               #EximPurchLine_IN
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #PDSAdvancedPriceInfo(PurchLine)
      PROPERTIES
        Table               #PDSAdvancedPriceInfo
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #PdsVendBatchInfo(PurchLine)
      PROPERTIES
        Table               #PdsVendBatchInfo
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #WAXPurchLine(PurchLine)
      PROPERTIES
        Table               #WAXPurchLine
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #WAXLoadLine(PurchLine)
      PROPERTIES
        Table               #WAXLoadLine
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #AgreementLineReleasedLine(PurchLine)
      PROPERTIES
        Table               #AgreementLineReleasedLine
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #CustVendCreditInvoicingLine
      PROPERTIES
        Table               #CustVendCreditInvoicingLine
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #DocuRef
      PROPERTIES
        Table               #DocuRef
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #EMSPurchOrderFlowRelation(PurchLine)
      PROPERTIES
        Table               #EMSPurchOrderFlowRelation
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #KanbanJobPurchaseLine(PurchLine)
      PROPERTIES
        Table               #KanbanJobPurchaseLine
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #MarkupTrans
      PROPERTIES
        Table               #MarkupTrans
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #PurchLineForeignTradeCategory
      PROPERTIES
        Table               #PurchLineForeignTradeCategory
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #PurchLineOrigin(PurchLine)
      PROPERTIES
        Table               #PurchLineOrigin
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
    ENDDELETEACTIONS
    
    METHODS
      SOURCE #accountItemExtendParm_CN
        #/// <summary>
        #/// Retrieves a posting account for the purchase order line with site.
        #/// </summary>
        #/// <param name="_inventAccountType">
        #/// The posting account type.
        #/// </param>
        #/// <returns>
        #/// The posting account number for the account type for the purchase order line.
        #/// </returns>
        #// <GCN>
        #LedgerDimensionDefaultAccount accountItemExtendParm_CN(InventAccountType _inventAccountType)
        #{
        #    return InventPosting::accountItemExtendParm_CN(
        #            _inventAccountType,
        #            InventPostingExtendParm_CN::constructInventDim(this.inventDim()),
        #            this.ItemId,
        #            this.inventTable().itemGroupId(),
        #            this.ProcurementCategory,
        #            this.VendAccount,
        #            this.VendGroup,
        #            this.TaxGroup);
        #
        #}
        #// </GCN>
      ENDSOURCE
      SOURCE #allowEditReturnActionId
        #boolean  allowEditReturnActionId()
        #{
        #    return this.type().allowEditReturnActionId();
        #}
      ENDSOURCE
      SOURCE #allowEditScrap
        #boolean  allowEditScrap()
        #{
        #    return this.type().allowEditScrap() && this.isStocked();
        #}
      ENDSOURCE
      SOURCE #allowEditStockedProduct
        #/// <summary>
        #/// Determines whether the <c>StockedProduct</c> field can be changed.
        #/// </summary>
        #/// <returns>
        #/// true if the line is item based, the item is of type item, not a fixed asset,
        #/// and the line has not been packing slip or invoice updated; otherwise, false.
        #/// </returns>
        #boolean allowEditStockedProduct()
        #{
        #    return this.ItemId
        #        && !this.isPackingSlipOrInvoiceUpdated()
        #        && this.AssetId == ''
        #        && !this.CreateFixedAsset
        #        && this.inventTable().ItemType == ItemType::Item;
        #}
      ENDSOURCE
      SOURCE #allowEditTax1099
        #boolean allowEditTax1099()
        #{
        #    boolean  ok = true;
        #
        #    if (this.PurchStatus == PurchStatus::Invoiced)
        #    {
        #        ok = false;
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #allowInventProfileIdChange_RU
        #/// <summary>
        #/// Determines if InventProfileId_RU inventory dimension could be changed
        #/// </summary>
        #/// <param name="_showWarning">
        #/// If "true" warning message is shown in case method returns false
        #/// </param>
        #/// <returns>
        #/// true if InventProfileId_RU is allowed to change, otherwise, false.
        #/// </returns>
        #public boolean allowInventProfileIdChange_RU(boolean _showWarning = true)
        #{
        #    if (this.PurchStatus == PurchStatus::Invoiced   ||
        #        (this.InventTransId                         &&
        #        (this.existInvoice_RU()                     ||
        #         VendInvoiceTrans::findInventTransId(this.InventTransId))))
        #    {
        #        if (_showWarning)
        #        {
        #            checkFailed(strFmt("@GLS116011", this.PurchId, fieldId2pname(tableNum(InventDim), fieldNum(InventDim, InventProfileId_RU))));
        #        }
        #        return false;
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #allowPostingProfileChange_RU
        #/// <summary>
        #/// Determines if PostingProfile_RU field value could be changed
        #/// </summary>
        #/// <param name="_showWarning">
        #/// If "true" warning message is shown in case method returns false
        #/// </param>
        #/// <returns>
        #/// true if PostingProfile_RU is allowed to change, otherwise, false.
        #/// </returns>
        #public boolean allowPostingProfileChange_RU(boolean _showWarning = true)
        #{
        #    if (this.PurchStatus == PurchStatus::Invoiced ||
        #        (this.InventTransId                         &&
        #        (this.existInvoice_RU()                    ||
        #         VendInvoiceTrans::findInventTransId(this.InventTransId))))
        #    {
        #        if (_showWarning)
        #        {
        #            checkFailed(strFmt("@GLS116011", this.PurchId, fieldId2pname(tableNum(PurchLine_W), fieldNum(PurchLine_W, PostingProfile_RU))));
        #        }
        #        return false;
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #allowUpdateWithQualityOrder
        #/// <summary>
        #/// Specifies whether the update of the purchase line is enabled, even if an open quality order exists.
        #/// </summary>
        #/// <returns>
        #/// true if the update is enabled; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// Normally an update is not enabled, but if the invoice posting fails, a pending invoice is saved and
        #/// the remaining quantity is reset.
        #/// </remarks>
        #boolean allowUpdateWithQualityOrder()
        #{
        #    PurchLine   purchLine_orig;
        #
        #    if (!InventParameters::find().UseQualityManagement)
        #    {
        #        // Not using quality management for this company
        #        return true;
        #    }
        #
        #    if (this.qualityOrderStatusDisplay() != InventTestOrderStatusDisplay::Open)
        #    {
        #        // No open quality order exists
        #        return true;
        #    }
        #    purchLine_orig = this.orig().data();
        #
        #    // Changing the following fields is allowed so make those equal before comparing
        #    purchLine_orig.PurchReceivedNow    = this.PurchReceivedNow;
        #    purchLine_orig.InventReceivedNow   = this.InventReceivedNow;
        #
        #    if (this.PackedExtensions               != conNull()
        #        || purchLine_orig.PackedExtensions  != conNull())
        #    {
        #        return this.SysExtensionSerializerMap::equal(purchLine_orig);
        #    }
        #
        #    return this.equal(purchLine_orig);
        #}
      ENDSOURCE
      SOURCE #amountCur
        #AmountCur amountCur(AmountMST               amountMST,
        #                    TransDate               exchRateDate            = systemDateGet(),
        #                    ExchRate                exchRate                = 0,
        #                    ExchrateSecondary       exchrateSecondary       = 0,
        #                    ExchRatesTriangulation  exchRatesTriangulation  = UnknownNoYes::Unknown)
        #{
        #    return this.SalesPurchLine::amountCur(amountMST, exchRateDate, exchRate, exchrateSecondary, exchRatesTriangulation);
        #}
      ENDSOURCE
      SOURCE #amountExclTax
        #AmountCur amountExclTax(AmountCur amountCur, Qty  qty, TransDate transDate, Tax _tax = null)
        #{
        #    return this.SalesPurchLine::amountExclTax(amountCur, qty, transDate, _tax);
        #}
      ENDSOURCE
      SOURCE #amountMST
        #AmountMST amountMST(AmountCur               amountCur,
        #                    TransDate               exchRateDate            = systemDateGet(),
        #                    ExchRate                exchRate                = 0,
        #                    ExchrateSecondary       exchrateSecondary       = 0,
        #                    ExchRatesTriangulation  exchRatesTriangulation  = UnknownNoYes::Unknown)
        #
        #{
        #    return this.SalesPurchLine::amountMST(amountCur, exchRateDate, exchRate, exchrateSecondary, exchRatesTriangulation);
        #}
      ENDSOURCE
      SOURCE #arrived
        #//BP Deviation Documented
        #display InventQtyArrived arrived()
        #{
        #    if (this.InventTransId && this.isStocked())
        #    {
        #        return InventTransIdSumSingleStatus::qtyArrived(InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId));
        #    }
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #arrivedInPurchUnit
        #//BP Deviation Documented
        #display PurchQtyArrived arrivedInPurchUnit()
        #{
        #    PurchQtyArrived purchQtyArrived = this.arrived();
        #
        #    if (!purchQtyArrived)
        #    {
        #        return 0;
        #    }
        #
        #    return this.unitConvertInvent2Purch(purchQtyArrived);
        #}
      ENDSOURCE
      SOURCE #assessableValue_IN
        #/// <summary>
        #/// This method is used get the assessable value.
        #/// </summary>
        #// <GIN>
        #public void assessableValue_IN()
        #{
        #    CustomsImportAssessableValue_IN customsImportAssessableValue;
        #    MarkupValue                     value;
        #    CustomsAmount_IN                landingCharges;
        #    PurchLine_IN                    purchLine_IN;
        #
        #    purchLine_IN = this.purchLine_IN();
        #
        #    if (PurchTable::find(this.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::Yes)
        #    {
        #        customsImportAssessableValue = CustomsImportAssessableValue_IN::findInventTransId(this.InventTransId);
        #        if (customsImportAssessableValue.RecId)
        #        {
        #            ttsbegin;
        #            customsImportAssessableValue.selectForUpdate(true);
        #            customsImportAssessableValue.Amount = this.LineAmount;
        #            customsImportAssessableValue.Value  = CustomsImportAssessableValue_IN::getMarkupValue(this.TableId, this.RecId, this.InventTransId);
        #            customsImportAssessableValue.update();
        #            ttscommit;
        #            purchLine_IN.AssessableValue_IN = CustomsImportAssessableValue_IN::findInventTransId(this.InventTransId).invoiceAssessableValue();
        #        }
        #        else
        #        {
        #            value                   = CustomsImportAssessableValue_IN::getMarkupValue(this.TableId, this.RecId, this.InventTransId);
        #            landingCharges          = (this.LineAmount + value) * VendParameters::find().CustomsLandingChargesPct_IN/100;
        #            purchLine_IN.AssessableValue_IN = this.LineAmount + value + landingCharges;
        #        }
        #    }
        #    else
        #    {
        #        purchLine_IN.AssessableValue_IN = this.getMiscChargesAmount_IN();
        #    }
        #
        #    this.packPurchLine_IN(purchLine_IN);
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #assetLedgerDimension
        #/// <summary>
        #/// Changes the account that is returned when getting the ledger dimension so that all fixed asset
        #/// transactions will use the <c>PurchRecieptFA</c> account instead of the <c>PurchConsump</c> account.
        #/// </summary>
        #/// <returns>
        #/// A <c>LedgerDimensionDefaultAccount</c> value.
        #/// </returns>
        #private LedgerDimensionDefaultAccount assetLedgerDimension()
        #{
        #    AssetTransType  assetTransType;
        #    AssetBook       assetBook;
        #
        #    assetBook = AssetBook::find(this.AssetId, this.AssetBookId);
        #    assetTransType = AssetPost::assetTransTypePurch2AssetTransType(this.AssetTransTypePurch);
        #
        #    return AssetLedgerAccounts::assetLedgerDimension(this.AssetId, this.AssetBookId, assetTransType,
        #                        assetBook.PostingProfile);
        #}
      ENDSOURCE
      SOURCE #assetUpdateInventTrans
        #void assetUpdateInventTrans()
        #{
        #    if (this.InventTransId && this.isStocked())
        #    {
        #        AssetInventTrans::changeAssetId(
        #            InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId),
        #            this.orig().AssetId,
        #            this.AssetId,
        #            this.AssetBookId);
        #    }
        #}
      ENDSOURCE
      SOURCE #associateWithAgreementLine
        #/// <summary>
        #/// Associates the purchase line with the agreement line.
        #/// </summary>
        #[SysObsoleteAttribute('There is no longer a need to create agreement link manually. Agreement link is created or deleted whenever purchase order line is created, updated or deleted based on MatchingAgreementLine value on PurchLine.', true)]
        #server public void associateWithAgreementLine()
        #{
        #    throw error(Error::wrongUseOfFunction(funcName()));
        #}
      ENDSOURCE
      SOURCE #calcGrossAmount
        #AmountCur calcGrossAmount(Qty qty   = this.PurchQty)
        #{
        #    AmountCur ret;
        #
        #    if (this.LineDeliveryType != LineDeliveryType::OrderLineWithMultipleDeliveries)
        #    {
        #        ret = this.SalesPurchLine::calcGrossAmount(qty);
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #calcGrossAmountExclTax
        #AmountCur  calcGrossAmountExclTax(Qty  qty = this.PurchQty, TransDate transDate = systemDateGet(), Tax _tax = null)
        #{
        #    return this.SalesPurchLine::calcGrossAmountExclTax(qty, this.taxDate(transDate), _tax);
        #}
      ENDSOURCE
      SOURCE #calcLineAmount
        #AmountCur  calcLineAmount(Qty  qty = this.PurchQty)
        #{
        #    AmountCur ret;
        #
        #    if (this.LineDeliveryType != LineDeliveryType::OrderLineWithMultipleDeliveries)
        #    {
        #        ret = this.SalesPurchLine::calcLineAmount(qty);
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #calcLineAmountExclTax
        #AmountCur  calcLineAmountExclTax(Qty  qty = this.PurchQty, TransDate transDate = systemDateGet(), Tax _tax = null)
        #{
        #    return this.SalesPurchLine::calcLineAmountExclTax(qty, this.taxDate(transDate), _tax);
        #}
      ENDSOURCE
      SOURCE #calcLineAmountForced
        #AmountCur calcLineAmountForced(Qty _qty = this.PurchQty, PriceDiscPolicyCheckPolicy  _checkPolicy=null)
        #{
        #    AmountCur ret;
        #
        #    if (this.LineDeliveryType != LineDeliveryType::OrderLineWithMultipleDeliveries)
        #    {
        #        ret = this.SalesPurchLine::calcLineAmountForced(_qty, _checkPolicy);
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #calcLineAmountForcedInteraction
        #/// <summary>
        #/// Calculates the line amount with user interaction if associated link to agreement line becomes invalid.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field ID for the field which changes require recalculation of line amount.
        #/// </param>
        #/// <param name="_qty">
        #/// The purchase quantity used for calculating the line amount.
        #/// </param>
        #/// <param name="_recalcValidLink">
        #/// A Boolean value that indicates whether to calculate line amount if the agreement link is valid; optional.
        #/// </param>
        #/// <returns>
        #/// The line amount.
        #/// </returns>
        #/// <remarks>
        #/// Used when there is a need for the option to dissociate agreement line via prompt if changes will make the existing association to a agreement line invalid.
        #/// </remarks>
        #public AmountCur calcLineAmountForcedInteraction(
        #    FieldId _fieldId,
        #    Qty     _qty             = this.PurchQty,
        #    boolean _recalcValidLink = true)
        #{
        #    PurchLine   purchLineOrig;
        #    AmountCur   ret;
        #    boolean     calledFromWeb;
        #    boolean     isAgreementLinkValid = true;
        #    AmountCur   localOrigLineAmount  = this.LineAmount; //This variable is needed for the uncommitted scenario as <>.orig.LineAmont returns the db value.
        #
        #    if (this.isLinkedToAgreement())
        #    {
        #        if (_recalcValidLink)
        #        {
        #            //The impact on line amount should be included in the agreement link validation.
        #            this.LineAmount      = this.calcLineAmountForced(this.PurchQty);
        #            isAgreementLinkValid = this.isAgreementLinkValid();
        #            this.LineAmount      = localOrigLineAmount;
        #        }
        #        else
        #        {
        #            isAgreementLinkValid = this.isAgreementLinkValid();
        #        }
        #    }
        #
        #    if (!isAgreementLinkValid)
        #    {
        #        calledFromWeb = webSession() ? true : false;
        #        if (calledFromWeb)
        #        {
        #            warning("@SYS135750");
        #            ret = this.calcLineAmountForced(_qty);
        #        }
        #        else
        #        {
        #            if (this.unLinkAgreementLinePrompt(_fieldId))
        #            {
        #                if (_fieldId)
        #                {
        #                    this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, _fieldId);
        #                }
        #
        #                if (this.ManualEntryChangepolicy
        #                    && this.SystemEntryChangePolicy)
        #                {
        #                    this.PriceDiscResultFields::mergerPriceDiscPolicies(ModuleSalesPurch::Purch);
        #                }
        #
        #                if (this.LineDeliveryType == LineDeliveryType::OrderLineWithMultipleDeliveries
        #                    || (this.LineDeliveryType == LineDeliveryType::OrderLine
        #                        && this.doReCalcPricesFromBasePrompt()))
        #                {
        #                    purchLineOrig.data(this);
        #                    PurchLine::modifyPurchQty(this, this.inventDim());
        #                    this.(_fieldId) = purchLineOrig.(_fieldId);
        #                }
        #                ret = this.calcLineAmountForced(_qty);
        #            }
        #            else
        #            {
        #                ret = this.LineAmount;
        #            }
        #        }
        #    }
        #    else
        #    {
        #        ret = _recalcValidLink ? this.calcLineAmountForced(_qty) : this.LineAmount;
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #calcLineAmountInclTax_RU
        #AmountCur calcLineAmountInclTax_RU(Qty  qty = this.PurchQty, TransDate transDate = systemDateGet())
        #{
        #    return this.SalesPurchLine::calcLineAmountInclTax_RU(qty, this.taxDate(transDate));
        #}
      ENDSOURCE
      SOURCE #calcLineAmountInteraction
        #/// <summary>
        #/// Calculates the line amount with user interaction if associated link to agreement line becomes
        #/// invalid.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field ID for the field which changes require recalculation of line amount.
        #/// </param>
        #/// <param name="_qty">
        #/// The purchase quantity to calculate line amount for.
        #/// </param>
        #/// <returns>
        #/// The calculated line amount.
        #/// </returns>
        #/// <remarks>
        #/// Used when you need the option to dissociate an agreement line via prompt if changes will make the
        #/// existing association to a agreement line invalid.
        #/// </remarks>
        #public AmountCur calcLineAmountInteraction(FieldId _fieldId, Qty _qty = this.PurchQty)
        #{
        #    PurchLine   purchLineOrig;
        #    AmountCur   ret;
        #    boolean     calledFromWeb;
        #
        #    if (this.RecId && !this.isAgreementLinkValid())
        #    {
        #        calledFromWeb = webSession() ? true : false;
        #        if (calledFromWeb)
        #        {
        #            warning("@SYS135750");
        #            ret = this.calcLineAmount(_qty);
        #        }
        #        else
        #        {
        #            if (this.unLinkAgreementLinePrompt(_fieldId))
        #            {
        #                if (this.LineDeliveryType == LineDeliveryType::OrderLineWithMultipleDeliveries
        #                    || (this.LineDeliveryType == LineDeliveryType::OrderLine
        #                        && this.doReCalcPricesFromBasePrompt()))
        #                {
        #                    purchLineOrig.data(this);
        #                    PurchLine::modifyPurchQty(this, this.inventDim());
        #                    this.(_fieldId) = purchLineOrig.(_fieldId);
        #                }
        #                ret = this.calcLineAmount(_qty);
        #            }
        #            else
        #            {
        #                ret = this.LineAmount;
        #            }
        #        }
        #    }
        #    else
        #    {
        #        ret = this.calcLineAmount(_qty);
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #calcLineDisc
        #DiscAmount  calcLineDisc(Qty    qty   = this.PurchQty)
        #{
        #    return this.SalesPurchLine::calcLineDisc(qty);
        #}
      ENDSOURCE
      SOURCE #calcLineDiscExclTax
        #DiscAmount  calcLineDiscExclTax(Qty qty = this.PurchQty, TransDate transDate = systemDateGet(), Tax _tax = null)
        #{
        #    return this.SalesPurchLine::calcLineDiscExclTax(qty, this.taxDate(transDate), _tax);
        #}
      ENDSOURCE
      SOURCE #calcLineDiscUnit
        #//BP Deviation Documented
        #display DiscAmount calcLineDiscUnit()
        #{
        #    if (this.PurchQty)
        #    {
        #        return this.calcLineDisc() / this.PurchQty * this.PriceUnit;
        #    }
        #
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #calcPendingLineAmounts
        #/// <summary>
        #/// Calculates a sum of the <c>LineAmount</c> values that are in transaction and company currency for
        #/// all pending invoice lines that are connected to this record in the <c>PurchLine</c> table.
        #/// </summary>
        #/// <param name="_excludeTableRefId">
        #/// A <c>TableRefId</c> value for which to exclude invoices; optional.
        #/// </param>
        #/// <returns>
        #/// A container with the sum of the <c>LineAmount</c> values and the <c>LineAmount</c> values in the
        #/// default currency.
        #/// </returns>
        #/// <remarks>
        #/// Records in the <c>VendInvoiceInfoLine</c> table are used in the calculation. The exchange rate from
        #/// the <c>VendInvoiceInfoTable</c> table is used if populated; otherwise, the exchange rate is
        #/// retrieved.
        #/// </remarks>
        #public server container calcPendingLineAmounts(TradeLineRefId _excludeTableRefId = '')
        #{
        #    VendInvoiceInfoLine     vendInvoiceInfoLine, vendInvoiceInfoLineJoin;
        #    VendInvoiceInfoTable    vendInvoiceInfoTable;
        #    container               lineAmounts;
        #    LineAmount              lineAmount, lineAmountMST;
        #
        #    // sum for all saved invoice lines connected to this PO line
        #
        #    while select * from vendInvoiceInfoLine
        #        where
        #            vendInvoiceInfoLine.InventTransId == this.InventTransId &&
        #            (!_excludeTableRefId || vendInvoiceInfoLine.TableRefId != _excludeTableRefId)
        #        join * from vendInvoiceInfoTable
        #            where
        #                vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId &&
        #                vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId &&
        #                (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting ||
        #                    vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors)
        #        notexists join vendInvoiceInfoLineJoin // avoid double counting when saved document is active
        #            where
        #                vendInvoiceInfoLineJoin.InventTransId == vendInvoiceInfoLine.InventTransId &&
        #                vendInvoiceInfoLineJoin.InvoiceInfoTableRefId == vendInvoiceInfoLine.TableRefId &&
        #                vendInvoiceInfoLineJoin.RecId != vendInvoiceInfoLine.RecId &&
        #                vendInvoiceInfoLineJoin.ParmId != ''
        #
        #    {
        #        lineAmount += vendInvoiceInfoLine.LineAmount;
        #        lineAmountMST += vendInvoiceInfoLine.lineAmountMST(vendInvoiceInfoTable.updateDate(), vendInvoiceInfoTable.ExchRate,
        #            vendInvoiceInfoTable.ExchRateSecondary, Currency::noYes2UnknownNoYes(vendInvoiceInfoTable.euroTriangulation));
        #    }
        #
        #    lineAmounts = [lineAmount,lineAmountMST];
        #    return lineAmounts;
        #}
      ENDSOURCE
      SOURCE #calcPendingMatchedQtyInvent
        #/// <summary>
        #/// Calculates a sum of the <c>InventNow</c> quantities for invoice lines that are connected to this
        #/// record in the <c>PurchLine</c> table that are matched to a packing slip.
        #/// </summary>
        #/// <param name="_pendingOnly">
        #/// A Boolean value that indicates whether only pending invoice lines are considered connected;
        #/// optional.
        #/// </param>
        #/// <returns>
        #/// The calculated <c>InventNow</c> quantity.
        #/// </returns>
        #/// <remarks>
        #/// Records in the <c>VendInvoiceInfoSubLine</c> table are used in the calculation.
        #/// </remarks>
        #public InventQty calcPendingMatchedQtyInvent(boolean _pendingOnly = true)
        #{
        #    VendInvoiceInfoTable vendInvoiceInfoTable;
        #    VendInvoiceInfoLine vendInvoiceInfoLine, vendInvoiceInfoLineJoin;
        #    VendInvoiceInfoSubLine vendInvoiceInfoSubLine;
        #
        #    // sum for all saved invoice sub lines connected to this PO line
        #
        #    select sum(InventNow) from vendInvoiceInfoSubLine
        #        exists join vendInvoiceInfoLine
        #            where
        #                vendInvoiceInfoLine.RecId == vendInvoiceInfoSubLine.LineRefRecId &&
        #                vendInvoiceInfoLine.InventTransId == this.InventTransId
        #        exists join vendInvoiceInfoTable
        #            where
        #                vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId &&
        #                vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId &&
        #                (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting ||
        #                    vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors) &&
        #                (!_pendingOnly || vendInvoiceInfoTable.VendInvoiceSaveStatus == VendInvoiceSaveStatus::Pending)
        #       notexists join vendInvoiceInfoLineJoin // exclude all lines for existing document
        #            where
        #                vendInvoiceInfoLineJoin.InventTransId == vendInvoiceInfoLine.InventTransId &&
        #                vendInvoiceInfoLineJoin.InvoiceInfoTableRefId == vendInvoiceInfoLine.TableRefId &&
        #                vendInvoiceInfoLineJoin.RecId != vendInvoiceInfoLine.RecId &&
        #                vendInvoiceInfoLineJoin.ParmId != '';
        #
        #    return vendInvoiceInfoSubLine.InventNow;
        #}
      ENDSOURCE
      SOURCE #calcPendingMatchedQtyPurch
        #/// <summary>
        #/// Calculates the sum of the <c>ReceiveNow</c> quantity for invoice lines that are connected to this
        #/// <c>PurchLine</c> table record, which are matched to a packing slip.
        #/// </summary>
        #/// <param name="_pendingOnly">
        #/// A Boolean value that specifies whether only pending invoice lines are considered connected.
        #/// </param>
        #/// <param name="_openEndedOnly">
        #/// A Boolean value which determines whether to consider only sub lines without a relationship to a
        #/// packing slip.
        #/// </param>
        #/// <returns>
        #/// The calculated <c>ReceiveNow</c> quantity.
        #/// </returns>
        #/// <remarks>
        #/// Records from the <c>VendInvoiceInfoSubLine</c> table are used in the calculation.
        #/// </remarks>
        #public PurchQty calcPendingMatchedQtyPurch(boolean _pendingOnly = true, boolean _openEndedOnly = false)
        #{
        #    VendInvoiceInfoTable vendInvoiceInfoTable;
        #    VendInvoiceInfoLine vendInvoiceInfoLine, vendInvoiceInfoLineJoin;
        #    VendInvoiceInfoSubLine vendInvoiceInfoSubLine;
        #
        #    // sum for all saved invoice sub lines connected to this PO line
        #
        #    select sum(ReceiveNow) from vendInvoiceInfoSubLine
        #        exists join vendInvoiceInfoLine
        #            where
        #                vendInvoiceInfoLine.RecId == vendInvoiceInfoSubLine.LineRefRecId &&
        #                vendInvoiceInfoLine.InventTransId == this.InventTransId &&
        #                (!_openEndedOnly || vendInvoiceInfoSubLine.JournalRefRecId == 0)
        #        exists join vendInvoiceInfoTable
        #            where
        #                vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId &&
        #                vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId &&
        #                (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting ||
        #                    vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors) &&
        #                (!_pendingOnly || vendInvoiceInfoTable.VendInvoiceSaveStatus == VendInvoiceSaveStatus::Pending)
        #       notexists join vendInvoiceInfoLineJoin // exclude all lines for existing document
        #            where
        #                vendInvoiceInfoLineJoin.InventTransId == vendInvoiceInfoLine.InventTransId &&
        #                vendInvoiceInfoLineJoin.InvoiceInfoTableRefId == vendInvoiceInfoLine.TableRefId &&
        #                vendInvoiceInfoLineJoin.RecId != vendInvoiceInfoLine.RecId &&
        #                vendInvoiceInfoLineJoin.ParmId != '';
        #
        #    return vendInvoiceInfoSubLine.ReceiveNow;
        #}
      ENDSOURCE
      SOURCE #calcPendingQtyInvent
        #/// <summary>
        #/// Calculates a sum of the <c>InventNow</c> quantities for all pending invoice lines that are
        #/// connected to this record in the <c>PurchLine</c> table.
        #/// </summary>
        #/// <returns>
        #/// The calculated <c>InventNow</c> quantity.
        #/// </returns>
        #/// <remarks>
        #/// Records in the <c>VendInvoiceInfoLine</c> table are used in the calculation.
        #/// </remarks>
        #public InventQty calcPendingQtyInvent()
        #{
        #    VendInvoiceInfoLine vendInvoiceInfoLine, vendInvoiceInfoLineJoin;
        #    VendInvoiceInfoTable vendInvoiceInfoTable;
        #
        #    // sum for all saved invoice lines connected to this PO line
        #    select sum(InventNow) from vendInvoiceInfoLine
        #        where
        #            vendInvoiceInfoLine.InventTransId == this.InventTransId
        #        exists join vendInvoiceInfoTable
        #            where
        #                vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId &&
        #                vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId &&
        #                (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting ||
        #                    vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors)
        #        notexists join vendInvoiceInfoLineJoin // do not count active lines that are saved
        #            where
        #                vendInvoiceInfoLineJoin.InventTransId == vendInvoiceInfoLine.InventTransId &&
        #                vendInvoiceInfoLineJoin.InvoiceInfoTableRefId == vendInvoiceInfoLine.TableRefId &&
        #                vendInvoiceInfoLineJoin.RecId != vendInvoiceInfoLine.RecId &&
        #                vendInvoiceInfoLineJoin.ParmId != '';
        #
        #    return vendInvoiceInfoLine.InventNow;
        #}
      ENDSOURCE
      SOURCE #calcPendingQtyPurch
        #/// <summary>
        #/// Calculates a sum of the <c>ReceiveNow</c> quantities for all pending invoice lines that are
        #/// connected to this record in the <c>PurchLine</c> table.
        #/// </summary>
        #/// <returns>
        #/// The calculated <c>ReceiveNow</c> quantity.
        #/// </returns>
        #/// <remarks>
        #/// Records from the <c>VendInvoiceInfoLine</c> table are used in the calculation.
        #/// </remarks>
        #public server PurchQty calcPendingQtyPurch()
        #{
        #    VendInvoiceInfoLine vendInvoiceInfoLine, vendInvoiceInfoLineJoin;
        #    VendInvoiceInfoTable vendInvoiceInfoTable;
        #
        #    if (!this.InventTransId)
        #    {
        #        return 0;
        #    }
        #
        #    // sum for all saved invoice lines connected to this PO line
        #    select sum(ReceiveNow) from vendInvoiceInfoLine
        #        where
        #            vendInvoiceInfoLine.InventTransId == this.InventTransId
        #        exists join vendInvoiceInfoTable
        #            where
        #                vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId &&
        #                vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId &&
        #                (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting ||
        #                    vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors)
        #        notexists join vendInvoiceInfoLineJoin // do not count active lines that are saved
        #            where
        #                vendInvoiceInfoLineJoin.InventTransId == vendInvoiceInfoLine.InventTransId &&
        #                vendInvoiceInfoLineJoin.InvoiceInfoTableRefId == vendInvoiceInfoLine.TableRefId &&
        #                vendInvoiceInfoLineJoin.RecId != vendInvoiceInfoLine.RecId &&
        #                vendInvoiceInfoLineJoin.ParmId != '';
        #
        #    return vendInvoiceInfoLine.ReceiveNow;
        #}
      ENDSOURCE
      SOURCE #calcPendingQtyPurchDisplay
        #/// <summary>
        #/// Retrieves the sum of the <c>ReceiveNow</c> quantities for all pending invoice lines that are
        #/// connected to this record in the <c>PurchLine</c> table.
        #/// </summary>
        #/// <returns>
        #/// The calculated <c>ReceiveNow</c> quantity.
        #/// </returns>
        #/// <remarks>
        #/// Records from both the <c>PurchParmLine</c> table and the <c>VendInvoiceInfoLine</c> table are used
        #/// in the calculation.
        #/// </remarks>
        #//BP Deviation Documented
        #public display UnpostedInvoicePurchQty calcPendingQtyPurchDisplay()
        #{
        #    return this.calcPendingQtyPurch();
        #}
      ENDSOURCE
      SOURCE #calcPrice2LineAmount
        #AmountCur  calcPrice2LineAmount(Qty _qty, boolean _forceLineAmountCalculation)
        #{
        #    return this.SalesPurchLine::calcPrice2LineAmount(_qty, _forceLineAmountCalculation);
        #}
      ENDSOURCE
      SOURCE #calcPriceFromAmount
        #void  calcPriceFromAmount()
        #{
        #    this.SalesPurchLine::calcPriceFromAmount();
        #}
      ENDSOURCE
      SOURCE #calcProjSalesPriceIfDefault
        #private AmountCur calcProjSalesPriceIfDefault()
        #{
        #    return this.PurchQty != 0 ? (this.LineAmount / this.PurchQty) : 0;
        #}
      ENDSOURCE
      SOURCE #calcQtyOrdered
        #InventQty   calcQtyOrdered(Qty    purchQty = this.PurchQty)
        #{
        #    return this.isStocked() ? this.SalesPurchLine::calcQtyOrdered(purchQty) : 0;
        #}
      ENDSOURCE
      SOURCE #canAgreementBeLinked
        #/// <summary>
        #/// Determines whether the purchase line can be linked to an agreement line.
        #/// </summary>
        #/// <returns>
        #/// true if the purchase order line can be linked to an agreement line; otherwise, false.
        #/// </returns>
        #public boolean canAgreementBeLinked()
        #{
        #    return this.type().canAgreementBeLinked();
        #}
      ENDSOURCE
      SOURCE #canApplyAllocationOrDistributionTemplate
        #/// <summary>
        #/// Indicates whether to use an allocation or distribution template to create the distributions of the
        #/// transaction line.
        #/// </summary>
        #/// <returns>
        #/// true if the distribution template will be used; otherwise, false.
        #/// </returns>
        #public boolean canApplyAllocationOrDistributionTemplate()
        #{
        #    if (!this.hasAssetAssociated() && !this.isStocked() && !this.projTable() && !this.isInvoiceMatched())
        #    {
        #        return true;
        #    }
        #    return false;
        #}
      ENDSOURCE
      SOURCE #canAutoUpdatePurchLine
        #/// <summary>
        #/// Indicates whether the table buffer is restricted by the change management functionality.
        #/// </summary>
        #/// <returns>
        #/// true if the buffer can be updated; otherwise, false.
        #/// </returns>
        #public boolean canAutoUpdatePurchLine()
        #{
        #    return !this.purchTable().ChangeRequestRequired;
        #}
      ENDSOURCE
      SOURCE #canEditDisc
        #// This method is called when setting disc fields
        #boolean canEditDisc()
        #{
        #    return true;
        #}
      ENDSOURCE
      SOURCE #canEditLedgerDimensionDefaultAccount
        #/// <summary>
        #/// Determines if the ledger dimension default account can be edited.
        #/// </summary>
        #/// <returns>
        #/// True if the ledger dimension default account is editable; otherwise false.
        #/// </returns>
        #public boolean canEditLedgerDimensionDefaultAccount()
        #{
        #    boolean             canEditLedgerDimensionDefaultAccount;
        #    InventModelGroup    inventModelGroup = this.inventTable().modelGroup();
        #    // <GEERU>
        #    #isoCountryRegionCodes
        #    // </GEERU>
        #
        #
        #    if ((this.isStocked()           == false || (this.isStocked() == true &&
        #                                                 inventModelGroup.PostOnhandPhysical == NoYes::No &&
        #                                                 inventModelGroup.PostOnhandFinancial == NoYes::No))
        #        && this.ProjId              == ''
        #        && this.AssetGroup          == ''
        #        && this.AssetId             == ''
        #        && this.isSubcontracted()   == false
        #        // <GEERU>
        #        && (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU])
        #            || !this.purchLine_W().MarkupCode_RU)
        #        // </GEERU>
        #    )
        #    {
        #        canEditLedgerDimensionDefaultAccount = true;
        #    }
        #    else
        #    {
        #        canEditLedgerDimensionDefaultAccount = false;
        #    }
        #
        #    return canEditLedgerDimensionDefaultAccount;
        #}
      ENDSOURCE
      SOURCE #canFinalize
        #/// <summary>
        #///    Determines if the purchase order line can be finalized.
        #/// </summary>
        #/// <param name="_checkHeader">
        #///    Check header status.
        #/// </param>
        #/// <returns>
        #///    true if the the purchase order line can be finalized; otherwise, false.
        #/// </returns>
        #public boolean canFinalize(boolean _checkHeader = true)
        #{
        #    boolean lineCanFinalize = ( this.PurchStatus == PurchStatus::Invoiced
        #                                ||  this.PurchStatus == PurchStatus::Canceled
        #                                ||  this.IsDeleted == NoYes::Yes)
        #                                && this.IsFinalized == NoYes::No;
        #
        #    if (_checkHeader)
        #    {
        #        lineCanFinalize = lineCanFinalize
        #                            && this.purchTable().DocumentState == VersioningDocumentState::Confirmed;
        #    }
        #
        #    return lineCanFinalize;
        #}
        #
      ENDSOURCE
      SOURCE #canSubmitToWorkflow
        #/// <summary>
        #///     This method are testing if the current <c>PurchLine</c> can be submitted to workflow.
        #/// </summary>
        #/// <param name="workflowType">Workflow type</param>
        #/// <returns>
        #///     Returns true if the current record can be submitted to workflow, otherwise false.
        #/// </returns>
        #public boolean  canSubmitToWorkflow(str workflowType = '')
        #{
        #    boolean     canSubmit = false;
        #
        #    if (this.RecId
        #    &&  this.WorkflowState  == TradeWorkflowState::NotSubmitted)
        #    {
        #        canSubmit = true;
        #    }
        #
        #    return canSubmit;
        #}
      ENDSOURCE
      SOURCE #caption
        #public str caption()
        #{
        #    return strFmt("%1: %2, %3, %4",
        #        "@SYS15812", this.PurchId,
        #        strFmt("@SYS343102", this.LineNumber),
        #        this.ItemId);
        #}
      ENDSOURCE
      SOURCE #checkActivity
        #boolean checkActivity()
        #{
        #    RecId                       projRecId;
        #
        #    if (this.ActivityNumber)
        #    {
        #        if (!ProjActivity::find(this.ActivityNumber))
        #        {
        #            return checkFailed(strFmt("@SYS50966",this.ActivityNumber));
        #        }
        #
        #        //validate activity is associated to Project
        #        projRecId = ProjTable::find(this.ProjId).RecId;
        #        if (smmActivityParentLinkTable::find(this.ActivityNumber, smmActivityParentType::Project, projRecId).RecId == 0)
        #        {
        #            return checkFailed(strFmt("@SYS105858",this.ActivityNumber, this.ProjId));
        #        }
        #    }
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkAndPromptFixedLineAmount
        #boolean checkAndPromptFixedLineAmount()
        #{
        #    return this.PriceDiscLine::checkAndPromptFixedLineAmount();
        #}
      ENDSOURCE
      SOURCE #checkAssetBookId
        #boolean checkAssetBookId()
        #{
        #    boolean ret  = true;
        #
        #    // check that AssetId is always set for current AssetBookId
        #    if (this.AssetBookId && !this.AssetId)
        #    {
        #        ret = ret && checkFailed(strFmt("@SYS71114",this.AssetId,this.AssetBookId));
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkCFOP_BR
        #/// <summary>
        #/// It validates if CFOP is present in CFOPMatrix with the correct attributes
        #/// (Operation ID, Transaction Type, Direction and Location)
        #/// </summary>
        #/// <returns>
        #/// It returns true if it is valid.
        #/// </returns>
        #// <GBR>
        #public boolean checkCFOP_BR()
        #{
        #    boolean                     ok = true;
        #
        #    if (!this.cfopTable_BR
        #        && (this.purchTable().PurchaseType != PurchaseType::Journal)
        #        && this.inventTable().ItemType == ItemType::Item)
        #    {
        #        ok = checkFailed(strFmt("@SYS26332", fieldPName(CFOPTable_BR, cfopId)));
        #    }
        #
        #    if (this.cfopTable_BR)
        #    {
        #        ok = ok && CFOPValidation_BR::validateOnServer(this);
        #    }
        #
        #    return ok;
        #}
        #// </GBR>
        #
      ENDSOURCE
      SOURCE #checkCommitmentVendorMatchesOrderAccount
        #/// <summary>
        #/// Validates that the order account for the current purchase order header matches the vendor account
        #/// on the commitment related to the current purchase order line, if the commitment has a vendor account specified.
        #/// </summary>
        #/// <param name="_newOrderAccount">
        #/// The account number that should be validated against.  If no value is specied then it will be retrieved from the purchase order header.
        #/// </param>
        #/// <returns>
        #/// true if the vendor account on the related commitment is blank or matches the order account on the purchase order header; otherwise, false.
        #/// </returns>
        #public boolean checkCommitmentVendorMatchesOrderAccount(VendAccount _newOrderAccount = '')
        #{
        #    PurchCommitmentHeader_PSN       purchCommitmentHeader;
        #    VendAccount                     orderAccount;
        #
        #    if (PurchCommitmentHeader_PSN::isCommitmentsFeatureEnabled())
        #    {
        #        purchCommitmentHeader = this.getPurchCommitmentLine_PSN().getPurchCommitmentHeader_PSN();
        #
        #        // If the _newOrderAccount is specified, then we want to use that value, otherwise we retrieve it from the header table.
        #        if (_newOrderAccount != '')
        #        {
        #            orderAccount = _newOrderAccount;
        #        }
        #        else
        #        {
        #            orderAccount = this.purchTable().OrderAccount;
        #        }
        #
        #        // Verify that the order account on the PO matches the vendor account on the commitment.
        #        if (purchCommitmentHeader.VendorAccount != ''
        #            && orderAccount != purchCommitmentHeader.VendorAccount)
        #        {
        #            return false;
        #        }
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkCrossdocking
        #/// <summary>
        #///   Checks whether the relevant cross docking quantity exceeds the ordered quantity.
        #/// </summary>
        #void checkCrossdocking()
        #{
        #    RetailBuyersPushLine   buyersPushLine;
        #    ;
        #
        #    select firstonly buyersPushLine
        #    where buyersPushLine.RefRecId == this.RecId;
        #
        #    if (buyersPushLine && (buyersPushLine.totalQty() > this.PurchQty))
        #    {
        #        info(strFmt("@RET820",this.PurchId));
        #    }
        #}
      ENDSOURCE
      SOURCE #checkCurrencyCode
        #boolean  checkCurrencyCode()
        #{
        #    boolean  ok = true;
        #
        #    if (! Currency::exist(this.CurrencyCode))
        #    {
        #        ok = checkFailed(strFmt("@SYS1458", this.CurrencyCode));
        #    }
        #
        #    if (this.purchTable().CurrencyCode   != this.CurrencyCode)
        #    {
        #        ok = checkFailed("@SYS20793");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkCustomerRef
        #boolean  checkCustomerRef()
        #{
        #    boolean     ok = true;
        #    PurchLine   purchLine;
        #
        #    select count(RecId) from purchLine
        #        index hint PurchLineIdx
        #        where purchLine.PurchId             == this.PurchId
        #           && purchLine.DeliveryPostalAddress == this.DeliveryPostalAddress
        #           && purchLine.CustomerRef         != this.CustomerRef
        #           && purchLine.RecId               != this.RecId
        #           && !purchLine.IsDeleted;
        #
        #    if (purchLine.RecId)
        #    {
        #        ok = checkFailed("@SYS78581");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkCustomsTariffCode_IN
        #// <GIN>
        #public boolean checkCustomsTariffCode_IN(RefRecId  _customsTariffCodeTableRecId = this.purchLine_IN().CustomsTariffCodeTable_IN)
        #{
        #    return this.purchLineView_IN().SalesPurchJournalLine_IN::checkCustomsTariffCode(_customsTariffCodeTableRecId, Direction_IN::Import);
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #checkCustPurchaseOrderFormNum
        #boolean  checkCustPurchaseOrderFormNum()
        #{
        #    boolean     ok = true;
        #    PurchLine   purchLine;
        #
        #    select count(RecId) from purchLine
        #        index hint PurchLineIdx
        #        where purchLine.PurchId                     == this.PurchId
        #           && purchLine.DeliveryPostalAddress       == this.DeliveryPostalAddress
        #           && purchLine.CustPurchaseOrderFormNum    != this.CustPurchaseOrderFormNum
        #           && purchLine.RecId                       != this.RecId
        #           && !purchLine.IsDeleted;
        #
        #    if (purchLine.RecId)
        #    {
        #        ok = checkFailed("@SYS78581");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkDelete
        #boolean checkDelete(boolean _useWarning = true, PurchTable _purchTable = this.purchTable())
        #{
        #    return this.type(_purchTable).checkDelete(_useWarning);
        #}
      ENDSOURCE
      SOURCE #checkFullyDistributedAndQualified
        #/// <summary>
        #/// Checks if the purchase order line is fully distributed and fully qualified.
        #/// </summary>
        #/// <param name="_caller">
        #/// The calling source document processor.
        #/// </param>
        #/// <param name="_user">
        #/// The user that submitted the source document implementation for processing; optional.
        #/// </param>
        #/// <returns>
        #/// true if the purchase order line is fully distributed and qualified; otherwise, false.
        #/// </returns>
        #boolean checkFullyDistributedAndQualified(
        #    SourceDocumentProcessorCaller           _caller = null,
        #    UserId                                  _user = curUserId()
        #    )
        #{
        #    SourceDocumentLine  sourceDocumentLine = this.sourceDocumentLine();
        #
        #    if (sourceDocumentLine.AccountingStatus == SourceDocumentLineAccountingStatus::Draft
        #        || sourceDocumentLine.AccountingStatus == SourceDocumentLineAccountingStatus::PartlyDistributed)
        #    {
        #        // Make sure the line is fully distributed
        #        SourceDocumentProcessorFacade::submitSourceDocumentLineImplementation(
        #            this, true, SourceDocumentLineAccountingStatus::FullyDistributed, _caller, _user);
        #    }
        #
        #    // Check that line distributions are fully qualified.
        #    return SourceDocumentProvider::areSourceDocLineAccDistAccountValid(
        #        SourceDocumentLine::find(this.SourceDocumentLine), true, true);
        #}
      ENDSOURCE
      SOURCE #checkIfInvoiceRegistered_IN
        #/// <summary>
        #/// Checks if the invoice is registered.
        #/// </summary>
        #/// <returns>
        #/// Returns true if the invoice is registered.
        #/// </returns>
        #// <GIN>
        #public boolean checkIfInvoiceRegistered_IN()
        #{
        #    boolean ok = true;
        #
        #    if (PurchTable::find(this.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::Yes
        #        && CustomsInvoiceRegnTrans_IN::findByPurchLineRecId(this.RecId).RecId != 0)
        #    {
        #        ok = checkFailed("@GLS5764");
        #    }
        #    return ok;
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #checkInitFromInventTable
        #boolean  checkInitFromInventTable(InventTable inventTable)
        #{
        #    return this.SalesPurchLine::checkInitFromInventTable(inventTable);
        #}
      ENDSOURCE
      SOURCE #checkIntrastat
        #/// <summary>
        #///   Validates the intrastat setting on the item assosiated to the order line.
        #/// </summary>
        #/// <returns>
        #///   true if the validation passes; Otherwise, false.
        #/// </returns>
        #public boolean checkIntrastat()
        #{
        #    VendTable            vendTable;
        #    IntrastatParameters  intrastatParameters;
        #    InventTable          inventTable;
        #    boolean              ret = true;
        #    boolean              checkIntrastatLT;
        #    PurchLineForeignTradeCategory   purchLineForeignTradeCategory;
        #    #ISOCountryRegionCodes
        #
        #    vendTable           = VendTable::find(this.purchTable().OrderAccount);
        #    intrastatParameters = IntrastatParameters::find();
        #    inventTable         = this.inventTable();
        #
        #    if (! inventTable.IntrastatExclude
        #        //only perform check when vendor is from an EU country
        #        && IntrastatCountryRegionParameters::isInEU(vendTable.countryRegionId()))
        #    {
        #        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoHU]))
        #        {
        #            if (intrastatParameters.IntrastatFulfillmentDateEmptyWarning_HU && ! this.IntrastatFulfillmentDate_HU)
        #            {
        #                ret = checkFailed(strFmt("@SYS4080006", fieldPName(PurchLine, IntrastatFulfillmentDate_HU), this.InventTransId));
        #            }
        #        }
        #
        #        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLT]))
        #        {
        #            if (this.ItemId)
        #            {
        #                checkIntrastatLT = Intrastat::isIntrastatLine(InventTable::find(this.ItemId));
        #            }
        #            else if (this.isCategoryBased())
        #            {
        #                purchLineForeignTradeCategory = PurchLineForeignTradeCategory::findpurchLine(this);
        #
        #                if (purchLineForeignTradeCategory.ItemCodeId)
        #                {
        #                    checkIntrastatLT = Intrastat::isIntrastatLine(purchLineForeignTradeCategory);
        #                }
        #            }
        #
        #            if (checkIntrastatLT)
        #            {
        #                if (intrastatParameters.State             && ! this.deliveryAddress().State)
        #                {
        #                    ret = checkFailed("@SYS57801");
        #                }
        #
        #                if (intrastatParameters.TransactionCode   && ! this.TransactionCode)
        #                {
        #                    ret = checkFailed(strFmt("@SYS27175"));
        #                }
        #
        #                if (intrastatParameters.TransportMode     && ! this.Transport)
        #                {
        #                    ret = checkFailed(strFmt("@GLS107639"));
        #                }
        #
        #                if (intrastatParameters.Port              && ! this.Port)
        #                {
        #                    ret = checkFailed(strFmt("@GLS107640"));
        #                }
        #
        #                if (this.ItemId)
        #                {
        #                    if (intrastatParameters.Weight            && ! inventTable.NetWeight)
        #                    {
        #                        ret = checkFailed(strFmt("@GLS107646", inventTable.ItemId));
        #                    }
        #
        #                    if (intrastatParameters.IntrastatItemcode && ! inventTable.Intracode)
        #                    {
        #                        ret = checkFailed(strFmt("@GLS107643", inventTable.ItemId));
        #                    }
        #
        #                    if (intrastatParameters.AdditionalUnit    && ! inventTable.IntraUnit)
        #                    {
        #                        ret = checkFailed(strFmt("@GLS107644", inventTable.ItemId));
        #                    }
        #
        #                    if (intrastatParameters.OrigCountryRegion && ! inventTable.OrigCountryRegionId)
        #                    {
        #                        ret = checkFailed(strFmt("@GLS107645", inventTable.ItemId));
        #                    }
        #                }
        #                else
        #                {
        #                    if (intrastatParameters.Weight            && ! purchLineForeignTradeCategory.UnitWeight)
        #                    {
        #                        ret = checkFailed(strFmt("@SYS4082092", this.ProcurementCategory));
        #                    }
        #
        #                    if (intrastatParameters.OrigCountryRegion && ! purchLineForeignTradeCategory.OrigCountryRegionId)
        #                    {
        #                        ret = checkFailed(strFmt("@SYS4082093", this.ProcurementCategory));
        #                    }
        #                }
        #            }
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkInventReceivedNow
        #/// <summary>
        #/// Indicates whether the received now quantity is valid.
        #/// </summary>
        #/// <returns>
        #/// true if the received now quantity is valid; otherwise, false.
        #/// </returns>
        #boolean checkInventReceivedNow()
        #{
        #    boolean  ok = true;
        #
        #    if (this.QtyOrdered * this.InventReceivedNow < 0)
        #    {
        #        ok = checkFailed("@SYS323005");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkItemId
        #public server boolean checkItemId()
        #{
        #    boolean  ok = true;
        #    EcoResProductValidator productValidator;
        #    ItemId                 origItemId = this.orig().ItemId;
        #    InventTable            inventable = this.inventTable();
        #
        #
        #    if (origItemId
        #        && origItemId != this.ItemId
        #        && this.InventTransId)
        #    {
        #        ok = checkFailed("@SYS19376");
        #    }
        #
        #    if (this.ItemId
        #        && this.InventDimId != InventDim::inventDimIdBlank()
        #        && !inventable.inventItemPurchSetup(this.InventDimId).checkNotStopped(false))
        #    {
        #        ok = false;
        #    }
        #
        #    if (this.purchTable().isInterCompanyOrder()  &&  (!this.ItemId || inventable.interCompanyBlockedPurch()))
        #    {
        #        ok = checkFailed(strFmt("@SYS74812", this.ItemId));
        #    }
        #
        #    if (this.ItemId)
        #    {
        #        productValidator = EcoResProductValidator::construct(inventable);
        #        if (!productValidator.isEssentialFieldValuesSet())
        #        {
        #            ok = checkFailed(strFmt("@SYS4000187", productValidator.getErrorFieldList(), this.ItemId));
        #
        #        }
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkItemPBAId
        #boolean  checkItemPBAId()
        #{
        #    boolean  ok = true;
        #
        #    if ( new DictConfigurationKey( configurationKeyNum( PBA_ProductBuilder ) ).enabled() )
        #    {
        #        if ( InventTable::find( this.ItemId ).pbaItemConfigurable == NoYes::Yes )
        #        {
        #            if ( ! PBAVersion::existsVersion(this.ItemId,this.ItemPBAId) )
        #            {
        #                ok = checkFailed(strFmt("@SYS41402",this.ItemPBAId, this.ItemId));
        #            }
        #        }
        #    }
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkLine_RU
        #boolean checkLine_RU()
        #{
        #    boolean                 ret = true;
        #    CustomJournalTrans_RU   customJournalTrans;
        #    CustomJournalTable_RU   customJournalTable;
        #    container               customJournalTables;
        #    UnitOfMeasureSymbol     unitIdTo;
        #    Qty                     remainPurchPhysical, customJournalQty;
        #    List                    dimensionBoolean = new List(Types::Integer);
        #
        #    CustomJournalTrans_RU   customJournalTransUpdate;
        #    DialogButton            updateDimension;
        #
        #    if (this.RecId == 0 || ! this.InventTransId)
        #    {
        #        return true;
        #    }
        #
        #    while select sum(Qty) from customJournalTrans group by CustomJournalId
        #        where customJournalTrans.SalesPurchInventTransId            == this.InventTransId
        #            exists join customJournalTable
        #                where customJournalTable.CustomJournalId            == customJournalTrans.CustomJournalId &&
        #                      customJournalTable.CustomJournalType          == CustomJournalType_RU::Import       &&
        #                      customJournalTable.CustomInventTransStatus    == CustomInventTransStatus_RU::Ordered
        #    {
        #        customJournalQty    += customJournalTrans.Qty;
        #        customJournalTables += customJournalTrans.CustomJournalId;
        #    }
        #    if (ret && customJournalQty != 0)
        #    {
        #        setPrefix(strFmt("@GLS115270", con2Str(customJournalTables)));
        #        ret = (Box::yesNo(strFmt("@GLS115271", con2Str(customJournalTables)), DialogButton::No, "@GLS111162") == DialogButton::Yes);
        #
        #        unitIdTo            = InventTableModule::find(this.ItemId, ModuleInventPurchSales::Invent).UnitId;
        #        remainPurchPhysical = this.RemainPurchPhysical + (this.PurchQty - this.orig().PurchQty);
        #        if (InventTable::unitConvert(this.ItemId, this.PurchUnit, unitIdTo, unitIdTo, remainPurchPhysical) < customJournalQty)
        #        {
        #            error(strFmt("@GLS115274", remainPurchPhysical,
        #                                        this.PurchUnit,
        #                                        customJournalQty,
        #                                        unitIdTo));
        #            this.QtyOrdered = this.orig().QtyOrdered;
        #            this.PurchQty   = this.orig().PurchQty;
        #        }
        #        if (this.PurchPrice != this.orig().PurchPrice)
        #        {
        #            checkFailed(strFmt("@GLS115277"));
        #            this.PurchPrice = this.orig().PurchPrice;
        #            this.LineAmount = this.calcLineAmount();
        #        }
        #
        #        if (this.DefaultDimension != this.orig().DefaultDimension)
        #        {
        #            updateDimension = Box::yesNoCancel(strFmt("@GLS115280", con2Str(customJournalTables)), DialogButton::Cancel, "@GLS111162");
        #            switch (updateDimension)
        #            {
        #                case DialogButton::Yes:
        #                    ttsbegin;
        #
        #                    while select forupdate customJournalTransUpdate
        #                        where customJournalTransUpdate.SalesPurchInventTransId      == this.InventTransId
        #                            exists join customJournalTable
        #                                where customJournalTable.CustomJournalId            == customJournalTransUpdate.CustomJournalId &&
        #                                      customJournalTable.CustomJournalType          == CustomJournalType_RU::Import             &&
        #                                      customJournalTable.CustomInventTransStatus    == CustomInventTransStatus_RU::Ordered
        #                    {
        #                        customJournalTransUpdate.DefaultDimension = this.DefaultDimension;
        #                        customJournalTransUpdate.update();
        #                    }
        #
        #                    ttscommit;
        #                    break;
        #                case DialogButton::No       :
        #                    break;
        #                case DialogButton::Cancel   :
        #                    this.DefaultDimension = this.orig().DefaultDimension;
        #                    ret = checkFailed("@GLS115281");
        #                    break;
        #            }
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkLineNumber
        #/// <summary>
        #/// Indicates whether a line number is unique within the scope of an order; if it is not, issues an
        #/// error message.
        #/// </summary>
        #/// <returns>
        #/// true if the line number is unique; otherwise, false.
        #/// </returns>
        #public boolean checkLineNumber()
        #{
        #    boolean ret = true;
        #
        #    if (ret)
        #    {
        #        ret = TradeLineNumberManager::newLine(this).checkLineNumber();
        #    }
        #
        #    if (ret
        #     && this.LineDeliveryType == LineDeliveryType::DeliveryLine
        #     && PurchDeliverySchedule::findOrderLineForDeliveryLine(this.InventTransId).LineNumber > this.LineNumber)
        #    {
        #        ret = checkFailed(strFmt("@SYS319727", this.LineNumber));
        #    }
        #
        #    if (ret
        #     && this.LineDeliveryType == LineDeliveryType::OrderLineWithMultipleDeliveries
        #     && this.TradeLineNumbering::getNextLineNumber(this.orig().LineNumber) < this.LineNumber)
        #    {
        #        ret = checkFailed(strFmt("@SYS319727", this.LineNumber));
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkMarkupCode_RU
        #/// <summary>
        #/// Checks values of markup related fields
        #/// </summary>
        #/// <returns>
        #/// True if check succeed;otherwise false
        #/// </returns>
        #public boolean checkMarkupCode_RU()
        #{
        #    boolean     ret = true;
        #    MarkupTable markupTable;
        #    PurchLine_W purchLine_W;
        #    #ISOCountryRegionCodes
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        purchLine_W = this.purchLine_W();
        #        if (this.isMarkupCodeEnabled_RU())
        #        {
        #            if (purchLine_W.MarkupCode_RU)
        #            {
        #                markupTable = MarkupTable::find(MarkupModuleType::Vend, purchLine_W.MarkupCode_RU);
        #
        #                if (markupTable.CustType != MarkupType::LedgerAccount)
        #                {
        #                    ret = checkFailed(strFmt("@SYS95333", fieldPName(MarkupTable, CustType), MarkupType::LedgerAccount));
        #                }
        #                if (markupTable.VendType != MarkupType::CustVend)
        #                {
        #                    ret = checkFailed(strFmt("@SYS95333", fieldPName(MarkupTable, VendType), MarkupType::CustVend));
        #                }
        #            }
        #        }
        #        else
        #        {
        #            if (purchLine_W.MarkupCode_RU)
        #            {
        #                ret = checkFailed(strFmt("@SYS95333", fieldPName(PurchLine_W, MarkupCode_RU)), "@SYS19186");
        #            }
        #        }
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkMatchingPolicy
        #/// <summary>
        #/// Specifies whether the matching policy can be changed.
        #/// </summary>
        #/// <returns>
        #/// true if the changed matching policy is valid; otherwise, false.
        #/// </returns>
        #public boolean checkMatchingPolicy()
        #{
        #    boolean ok = true;
        #
        #    if (!this.RecId || this.MatchingPolicy != this.orig().MatchingPolicy)
        #    {
        #        if (PurchMatchingPolicyManager::canMatchingPolicyBeChanged(this.MatchingPolicy) == false)
        #        {
        #            ok = checkFailed(strFmt("@SYS130454", VendParameters::find().MatchingPolicy));
        #        }
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkMaximumRetailPrice_IN
        #/// <summary>
        #/// This method is used to check the Maximum retail price.
        #/// </summary>
        #/// <param name="_maximumRetailPrice">
        #/// A maximum retail price.
        #/// </param>
        #/// <returns>
        #/// Returns true if maximum return price is greater than zero.
        #/// </returns>
        #// <GIN>
        #public boolean  checkMaximumRetailPrice_IN(Price  _maximumRetailPrice = this.purchLine_IN().MaximumRetailPrice_IN)
        #{
        #    return this.purchLineView_IN().SalesPurchJournalLine_IN::checkMaximumRetailPrice(_maximumRetailPrice);
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #checkOperationType_MX
        #public boolean checkOperationType_MX()
        #{
        #    boolean ok = true;
        #
        #    if (this.OperationType_MX == VendorOperationType_MX::Blank)
        #    {
        #        ok = checkFailed("@SYS312596");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkOverDelivery
        #boolean  checkOverDelivery()
        #{
        #    boolean  ok = true;
        #
        #    if (this.OverDeliveryPct < 0)
        #    {
        #        ok = checkFailed("@SYS26776");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkPostingProfile_RU
        #boolean checkPostingProfile_RU()
        #{
        #    boolean                         ok = true;
        #    InventProfileCustVendLedger_RU  inventProfileCustVendLedger;
        #    Set                             inventProfileTypeSet = new Set(Types::Enum);
        #    PurchLine_W                     purchLine_W = this.purchLine_W();
        #
        #    if (EcoResDimensionGroupSetup::isInventoryDimensionActiveForItem(this.ItemId, fieldNum(InventDim, InventProfileId_RU)) &&
        #        purchLine_W.PostingProfile_RU              &&
        #        this.inventDim().InventProfileId_RU &&
        #        (!purchLine_W.orig() || purchLine_W.PostingProfile_RU != purchLine_W.orig().PostingProfile_RU))
        #    {
        #        while select InventProfileTypeAll, InventProfileId, InventProfileType
        #            from inventProfileCustVendLedger
        #            order by InventProfileTypeAll asc
        #            where inventProfileCustVendLedger.VendPostingProfile == purchLine_W.PostingProfile_RU
        #        {
        #            switch(inventProfileCustVendLedger.InventProfileTypeAll)
        #            {
        #                case InventProfileTypeAll_RU::Profile:
        #                    inventProfileTypeSet.add(InventProfile_RU::find(inventProfileCustVendLedger.InventProfileId).InventProfileType);
        #                    break;
        #                case InventProfileTypeAll_RU::Type:
        #                    inventProfileTypeSet.add(inventProfileCustVendLedger.InventProfileType);
        #                    break;
        #            }
        #        }
        #
        #        if (! inventProfileTypeSet.in(this.inventDim().inventProfile_RU().InventProfileType))
        #        {
        #            ok = checkFailed("@GLS113766");
        #        }
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkPriceDate
        #/// <summary>
        #/// Triggers price recalculation after a date change according to the <c>PurchPriceDateType</c>
        #/// enumeration value.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field ID of the <c>PurchLine</c> table that changed.
        #/// </param>
        #/// <remarks>
        #/// The <c>PurchPriceDateType</c> enumeration value can be set to a <c>Today</c> or <c>DeliveryDate</c>
        #/// value.
        #/// </remarks>
        #void checkPriceDate(FieldId _fieldId)
        #{
        #    PurchParameters purchParameters = PurchParameters::find();
        #
        #    if (purchParameters.PriceDateType == PurchPriceDateType::DeliveryDate
        #        && _fieldId == fieldNum(PurchLine, DeliveryDate)
        #        && !this.isLinkedToAgreement())
        #    {
        #        PurchLine::modifyPurchQty(this, this.inventDim());
        #    }
        #}
      ENDSOURCE
      SOURCE #checkProcurementCategory
        #/// <summary>
        #/// Validates that the <c>ProcurementCategory</c> field is filled correctly.
        #/// </summary>
        #/// <returns>
        #/// true if the <c>ProcurementCategory</c> field is filled correctly; otherwise, false.
        #/// </returns>
        #boolean checkProcurementCategory()
        #{
        #    // Check that the hierarchy matches the module
        #    return !this.ProcurementCategory
        #        || EcoResCategory::checkCategoryRole(this.ProcurementCategory, EcoResCategoryNamedHierarchyRole::Procurement);
        #}
      ENDSOURCE
      SOURCE #checkProjCategory
        #boolean checkProjCategory()
        #{
        #    boolean         ok = true;
        #    ProjCategory    projCategory;
        #
        #    if (this.ProjCategoryId)
        #    {
        #        projCategory = ProjCategory::find(this.ProjCategoryId);
        #        if (projCategory.CategoryType != ProjCategoryType::Item)
        #        {
        #            ok  = checkFailed(strFmt("@SYS56468",ProjTransType::Item));
        #        }
        #
        #        ok = ok && projCategory.validateIfInactiveAllowed();
        #    }
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkPurchCommitmentLine
        #/// <summary>
        #/// Performs validations for the commitment line reference on the purchase order line.
        #/// </summary>
        #/// <returns>
        #/// true if the commitment line reference is valid; otherwise, false
        #/// </returns>
        #public boolean checkPurchCommitmentLine()
        #{
        #    FiscalCalendarYear          fiscalCalendarYear;
        #    PurchCommitmentLine_PSN     purchCommitmentLine = this.getPurchCommitmentLine_PSN();
        #    PurchCommitmentHeader_PSN   purchCommitmentHeader = purchCommitmentLine.getPurchCommitmentHeader_PSN();
        #    str                         error = "@SPS2134";
        #
        #    if (PurchCommitmentHeader_PSN::isCommitmentsFeatureEnabled())
        #    {
        #        //Verify that the vendor account on the PO matches the vendor account on the commitment.
        #        if (!this.checkCommitmentVendorMatchesOrderAccount())
        #        {
        #            return checkFailed(error);
        #        }
        #
        #        //Verify that the commitment line is of the current fiscal year
        #        fiscalCalendarYear = FiscalCalendarYear::findYearByCalendarDate(Ledger::fiscalCalendar(CompanyInfo::find().RecId), this.purchTable().AccountingDate);
        #
        #        if (purchCommitmentLine.LineDate < fiscalCalendarYear.StartDate ||
        #            purchCommitmentLine.LineDate > fiscalCalendarYear.EndDate)
        #        {
        #            return checkFailed(error);
        #        }
        #
        #        //Verify that the entered commitment header has a status of complete.
        #        if (purchCommitmentHeader.DocumentStatus != PurchCommitmentDocumentStatus_PSN::Complete)
        #        {
        #            return checkFailed(error);
        #        }
        #
        #        //
        #        //Verify that the Purchase Agreement Line on the commitment document
        #        //line matches the Purchase Order Line Purchase Agreement field, if present
        #        //
        #        if (this.MatchingAgreementLine != 0 && this.MatchingAgreementLine != purchCommitmentLine.AgreementLine)
        #        {
        #            return checkFailed(error);
        #        }
        #
        #        // validate that the source document line state is complete for the commitment line.
        #        if (purchCommitmentLine.getSourceDocumentLine().AccountingStatus != SourceDocumentLineAccountingStatus::Completed)
        #        {
        #            return checkFailed(error);
        #        }
        #    }
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkPurchQty
        #boolean  checkPurchQty()
        #{
        #    boolean  ok = true;
        #
        #    if ((this.PurchQty  != 0     && this.QtyOrdered   == 0)     ||
        #        (this.PurchQty  == 0     && this.QtyOrdered   != 0)    )
        #    {
        #        ok = checkFailed(strFmt("@SYS18441",this.PurchId));
        #    }
        #    else
        #    {
        #        if (this.PurchQty  * this.QtyOrdered   < 0)
        #        {
        #            ok = checkFailed(strFmt("@SYS18442",this.PurchId));
        #        }
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkPurchReceivedNow
        #/// <summary>
        #/// Indicates whether the received now quantity is valid.
        #/// </summary>
        #/// <returns>
        #/// true if the received now quantity is valid; otherwise, false.
        #/// </returns>
        #boolean checkPurchReceivedNow()
        #{
        #    boolean  ok = true;
        #
        #    if (this.PurchQty * this.PurchReceivedNow < 0)
        #    {
        #        ok = checkFailed("@SYS323005");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkPurchType
        #boolean  checkPurchType()
        #{
        #    if (this.purchTable().PurchaseType   != this.PurchaseType)
        #    {
        #        return checkFailed("@SYS17095");
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkPurchUnit
        #boolean checkPurchUnit()
        #{
        #    boolean  ok = true;
        #
        #    if (!UnitOfMeasureConverter::canBeConverted(
        #            UnitOfMeasure::unitOfMeasureIdBySymbol(InventTable::find(this.ItemId).inventUnitId()),
        #            UnitOfMeasure::unitOfMeasureIdBySymbol(this.PurchUnit),
        #            InventTable::itemProduct(this.ItemId)))
        #        ok = checkFailed(strFmt("@SYS28690", InventTable::find(this.ItemId).inventUnitId(), this.PurchUnit));
        #
        #    if (this.orig()
        #    &&  this.orig().PurchUnit != this.PurchUnit
        #    &&  this.orig().PurchQty  != this.RemainPurchPhysical)
        #    {
        #        ok = checkFailed("@SYS81896");
        #    }
        #
        #    if (this.RecId
        #        && this.PurchUnit != this.orig().PurchUnit
        #        && (   this.LineDeliveryType == LineDeliveryType::OrderLineWithMultipleDeliveries
        #            || this.LineDeliveryType == LineDeliveryType::DeliveryLine))
        #    {
        #        // Unit cannot be changed on a Delivery Schedule.
        #        ok = checkFailed("@SYS131415");
        #    }
        #
        #    if (ok)
        #    {
        #        ok = this.type().checkPurchUnit();
        #    }
        #
        #    if (ok)
        #    {
        #        ok = this.runPriceDiscPolicyDialog();
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkRBOPackage
        #/// <summary>
        #///   Checks whether a package line have more than one related purchase order line.
        #/// </summary>
        #/// <param name="_purchId">
        #///   A <c>PurchId</c>.
        #/// </param>
        #/// <param name="_packageId">
        #///   A <c>RetailPackageId</c>.
        #/// </param>
        #/// <param name="_lineNum">
        #///   A <c>LineNum</c>.
        #/// </param>
        #/// <returns>
        #///   true if a package line does not have more than one related purchase order line; otherwise, false.
        #/// </returns>
        #boolean checkRBOPackage(PurchId _purchId, RetailPackageId _packageId,LineNum _lineNum)
        #{
        #    PurchLine   purchLine;
        #    ;
        #
        #    if (_purchId && _packageId && _lineNum)
        #    {
        #        select count(rboPackageLineNum) from purchLine
        #        index hint RBOPackageIdx
        #        where purchLine.PurchId           == _purchId   &&
        #              purchLine.RetailPackageId      == _packageId &&
        #              purchLine.rboPackageLineNum == _lineNum;
        #
        #        if (purchLine.rboPackageLineNum > 1)
        #            return checkFailed(strFmt("@RET4768",_packageId));
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkReqActivity
        #boolean checkReqActivity()
        #{
        #    RequireActivity             requireActivity;
        #    boolean                     ret = true;
        #
        #    requireActivity = ProjTable::checkRequireActivity(this.ProjId,tableNum(ProjItemTrans));
        #    if (requireActivity && (!this.ActivityNumber))
        #    {
        #        ret = false;
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkStatusChange
        #/// <summary>
        #/// Checks whether it is allowed to change to status on the order line.
        #/// </summary>
        #/// <returns>
        #/// true if change of status is allowed; otherwise, false.
        #/// </returns>
        #public boolean checkStatusChange()
        #{
        #    boolean ok = true;
        #    PurchLine origPurchLine = PurchLine::findRecId(this.RecId); //this.orig() cannot be used in all scenarios.
        #
        #    if (origPurchLine.RecId
        #        && this.PurchStatus              == PurchStatus::Backorder
        #        && (origPurchLine.PurchStatus    == PurchStatus::Invoiced
        #        ||  origPurchLine.PurchStatus    == PurchStatus::Canceled)
        #        && origPurchLine.isStocked() != this.inventTable().isStocked())
        #    {
        #        ok = checkFailed(strFmt("@SYS324424", fieldPName(InventModelGroup, StockedProduct)));
        #    }
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkStockedProduct
        #/// <summary>
        #/// Indicates whether the <c>StockedProduct</c> field is not set for category based lines.
        #/// </summary>
        #/// <returns>
        #/// true if the <c>StockedProduct</c> field is set to a valid value; otherwise, false.
        #/// </returns>
        #boolean  checkStockedProduct()
        #{
        #    boolean  ok = true;
        #
        #    if (this.isStocked() && this.isCategoryBased())
        #    {
        #        ok = checkFailed("@SYS134348");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkTaxItemGroup
        #boolean  checkTaxItemGroup()
        #{
        #    if (this.TaxItemGroup   && ! TaxItemGroupHeading::exist(this.TaxItemGroup))
        #    {
        #        return checkFailed(strFmt("@SYS21973", this.TaxItemGroup));
        #    }
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkTaxServiceCode_BR
        #/// <summary>
        #/// It validates if TaxServiceCode is required
        #/// </summary>
        #/// <returns>
        #/// It returns true if TaxServiceCode is acceptable (service item).
        #/// </returns>
        #// <GBR>
        #public boolean checkTaxServiceCode_BR()
        #{
        #    boolean ok = true;
        #
        #    if (this.TaxServiceCode_BR
        #        && this.inventTable().ItemType != ItemType::Service)
        #    {
        #        ok = checkFailed("@GLS60421");
        #    }
        #
        #    return ok;
        #}
        #// </GBR>
        #
      ENDSOURCE
      SOURCE #checkUnderDelivery
        #boolean  checkUnderDelivery()
        #{
        #    boolean  ok = true;
        #
        #    if (this.UnderDeliveryPct > 100)
        #    {
        #        ok = checkFailed("@SYS26778");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkUpdatePhysical
        #boolean checkUpdatePhysical()
        #{
        #    return this.type().checkUpdatePhysical();
        #}
      ENDSOURCE
      SOURCE #checkVendorName_IN
        #/// <summary>
        #/// Reads the table buffer and check the existence of record.
        #/// </summary>
        #/// <param name="_location">
        #/// The field is used to find the record.
        #/// </param>
        #/// <param name="_vendAccount">
        #/// The field is used to find the record.
        #/// </param>
        #/// <returns>
        #/// Returns the boolean value.
        #/// </returns>
        #// <GIN>
        #public boolean checkVendorName_IN(LogisticsLocationRecId    _location = this.purchLine_IN().VendorLocation_IN,
        #                                  VendAccount               _vendAccount = this.VendAccount)
        #{
        #    return  this.purchLineView_IN().SalesPurchJournalLine_IN::checkVendorName(_location, _vendAccount);
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #clearAddressReference
        #public void clearAddressReference()
        #{
        #    this.AddressRefRecId    = 0;
        #    this.AddressRefTableId  = 0;
        #}
      ENDSOURCE
      SOURCE #clearAllPriceDiscChangePolicies
        #/// <summary>
        #/// Clears all of the stored <c>PriceDiscChangePolicy</c> instances for the <c>PurchLine</c> table.
        #/// </summary>
        #/// <remarks>
        #/// Removes policies from both the manual and system groups.
        #/// </remarks>
        #void clearAllPriceDiscChangePolicies()
        #{
        #    PurchLineType purchLineType;
        #
        #    purchLineType = this.type();
        #    purchLineType.clearAllPriceDiscChangePolicies();
        #}
      ENDSOURCE
      SOURCE #clearingPeriod
        #//BP Deviation Documented
        #display ClearingPeriod clearingPeriod()
        #{
        #    return this.purchTable().payer().clearingPeriod();
        #}
      ENDSOURCE
      SOURCE #clearInventReference
        #/// <summary>
        #/// Clears the inventory reference fields on the <c>PurchLine</c> record.
        #/// </summary>
        #public void clearInventReference()
        #{
        #    this.InventRefTransId  = '';
        #    this.InventRefId       = '';
        #    this.ItemRefType       = InventRefType::None;
        #}
      ENDSOURCE
      SOURCE #companyInfo
        #/// <summary>
        #/// Retrieves the <c>CompanyInfo</c> record associated with the current record.
        #/// </summary>
        #/// <returns>
        #/// The <c>CompanyInfo</c> record.
        #/// </returns>
        #public CompanyInfo companyInfo()
        #{
        #    return CompanyInfo::findDataArea(this.company());
        #}
      ENDSOURCE
      SOURCE #convertCurrencyCode
        #server void convertCurrencyCode(CurrencyCode currencyCode, TradeCurencyConversion tradeCurrencyConversion = TradeCurencyConversion::ExchRate,TransDate _exchRateDate = systemDateGet())
        #{
        #    MarkupTrans     markupTrans;
        #    AgreementLine   linkedAgreementLine;
        #
        #    // <GIN>
        #    PurchLine_IN    purchLine_IN;
        #    #ISOCountryRegionCodes
        #    // </GIN>
        #
        #    ttsbegin;
        #
        #    while select forupdate markupTrans
        #          where markupTrans.TransTableId  == this.TableId &&
        #                markupTrans.TransRecId    == this.RecId   &&
        #               !markupTrans.IsDeleted
        #    {
        #        markupTrans.convertCurrencyCode(currencyCode,_exchRateDate);
        #        markupTrans.IsModified = NoYes::Yes;
        #        markupTrans.doUpdate();
        #    }
        #
        #    this.PurchPrice   = Currency::curPrice2CurPrice(this.PurchPrice, this.CurrencyCode, currencyCode,_exchRateDate);
        #    this.LineDisc     = Currency::curPrice2CurPrice(this.LineDisc, this.CurrencyCode, currencyCode,_exchRateDate);
        #    this.MultiLnDisc  = Currency::curPrice2CurPrice(this.MultiLnDisc, this.CurrencyCode, currencyCode,_exchRateDate);
        #    this.DiscAmount   = this.discAmount();
        #    this.PurchMarkup  = Currency::curPrice2CurPrice(this.PurchMarkup, this.CurrencyCode, currencyCode,_exchRateDate);
        #
        #    // <GIN>
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        this.convertCurrencyCode_IN(currencyCode);
        #    }
        #    // </GIN>
        #    if (this.LineDeliveryType != LineDeliveryType::OrderLineWithMultipleDeliveries)
        #    {
        #        this.LineAmount   = Currency::curAmount2CurAmount(this.LineAmount, this.CurrencyCode, currencyCode,_exchRateDate);
        #    }
        #    this.CurrencyCode = currencyCode;
        #
        #    switch(tradeCurrencyConversion)
        #    {
        #        case TradeCurencyConversion::ExchRate:
        #            break;
        #        case TradeCurencyConversion::TradeAgreements:
        #            if (this.LineDeliveryType == LineDeliveryType::DeliveryLine)
        #            {
        #                this.LineAmount = this.calcLineAmountForced();
        #            }
        #            else
        #            {
        #                this.SalesPurchLine::resetPriceAgreement();
        #                this.setPriceDisc(this.inventDim());
        #            }
        #            break;
        #    }
        #    this.LineAmount   = this.calcLineAmount();
        #
        #    if (   this.LineDeliveryType != LineDeliveryType::DeliveryLine
        #        && this.MatchingAgreementLine)
        #    {
        #        // Agreement line should NOT be un-linked if it is Quantity-based AND has IsPriceInformationMandatory set to false!
        #        linkedAgreementLine = AgreementLine::find(this.MatchingAgreementLine, false);
        #
        #        if (   linkedAgreementLine.RecId
        #            && ( (linkedAgreementLine.isQuantityBased() == false) || linkedAgreementLine.IsPriceInformationMandatory))
        #        {
        #            this.unLinkAgreementLine();
        #        }
        #    }
        #    // <GIN>
        #    if (TaxParameters::checkParameterForPosting_IN(TaxType_IN::Customs)
        #            && PurchTable::find(this.PurchId).purchTable_W().CustomsImportOrder_IN != NoYes::Yes)
        #    {
        #        purchLine_IN = this.purchLine_IN();
        #        purchLine_IN.AssessableValue_IN = this.getMiscChargesAmount_IN();
        #        this.packPurchLine_IN(purchLine_IN);
        #    }
        #    // </GIN>
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #convertCurrencyCode_IN
        #/// <summary>
        #/// This method is used to get the value in the converted currency.
        #/// </summary>
        #/// <param name="_currencyCode">
        #/// A currency code for conversion.
        #/// </param>
        #// <GIN>
        #public server void convertCurrencyCode_IN(CurrencyCode _currencyCode)
        #{
        #    CustomsImportAssessableValue_IN customsImportAssessableValue;
        #    MarkupValue                     value;
        #    CustomsAmount_IN                landingCharges;
        #    PurchLine_IN                    purchLine_IN = this.purchLine_IN();
        #
        #    purchLine_IN.MaximumRetailPrice_IN = Currency::curPrice2CurPrice(purchLine_IN.MaximumRetailPrice_IN, this.CurrencyCode, _currencyCode);
        #
        #    if (TaxParameters::checkParameterForPosting_IN(TaxType_IN::Customs) && PurchTable::find(this.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::Yes)
        #    {
        #        customsImportAssessableValue = CustomsImportAssessableValue_IN::findInventTransId(this.InventTransId);
        #        if (customsImportAssessableValue.RecId != 0)
        #        {
        #            ttsbegin;
        #            customsImportAssessableValue.selectForUpdate(true);
        #            customsImportAssessableValue.Amount = this.LineAmount;
        #            customsImportAssessableValue.Value  = CustomsImportAssessableValue_IN::getMarkupValue(this.TableId, this.RecId, this.InventTransId);
        #            customsImportAssessableValue.update();
        #            ttscommit;
        #            purchLine_IN.AssessableValue_IN = CustomsImportAssessableValue_IN::findInventTransId(this.InventTransId).invoiceAssessableValue();
        #        }
        #        else
        #        {
        #            value                   = CustomsImportAssessableValue_IN::getMarkupValue(this.TableId, this.RecId, this.InventTransId);
        #            landingCharges          = (this.LineAmount + value) * VendParameters::find().CustomsLandingChargesPct_IN/100;
        #            purchLine_IN.AssessableValue_IN = this.LineAmount + value + landingCharges;
        #        }
        #    }
        #
        #    this.packPurchLine_IN(purchLine_IN);
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #copyDimension
        #/// <summary>
        #/// Retrieves a dimension set that can be applied to the <c>defaultDimension</c> field on this table.
        #/// </summary>
        #/// <param name="_defaultDimension">
        #/// A dimension set to apply to the <c>defaultDimension</c> field on this table.
        #/// </param>
        #/// <param name="_dimensionCopy">
        #/// A <c>dimensionCopy</c> object that was instantiated with the current buffer; optional.
        #/// </param>
        #/// <returns>
        #/// A dimension set that can be applied to the <c>defaultDimension</c> field on this table.
        #/// </returns>
        #/// <remarks>
        #/// This method makes sure that potential linked dimensions are not overwritten.
        #/// </remarks>
        #
        #public DimensionDefault copyDimension(
        #    DimensionDefault _defaultDimension,
        #    DimensionCopy    _dimensionCopy = DimensionCopy::newFromTable(this,
        #                                                                  this.companyInfo().RecId
        #                                                                  )
        #    )
        #{
        #    return _dimensionCopy.copy(_defaultDimension);
        #}
      ENDSOURCE
      SOURCE #copyFromPurchLineHistory
        #/// <summary>
        #/// Copies data from a <c>PurchLineHistory</c> record.
        #/// </summary>
        #/// <param name="_purchLineHistory">
        #/// A <c>PurchLineHistory</c> record to copy data from.
        #/// </param>
        #/// <param name="_copyPrecisely">
        #/// A Boolean value that indicates whether precise copy should be made.
        #/// </param>
        #/// <param name="_copyPriceDisc">
        #/// A Boolean value that indicates whether price and discount information should be copied.
        #/// </param>
        #/// <param name="_copyQty">
        #/// A Boolean value that indicates whether quantity should be copied.
        #/// </param>
        #/// <param name="_qty">
        #/// A quantity value to be used on the copied line.
        #/// </param>
        #/// <param name="_cwQty">
        #/// The CW quantity value to be used on the copied line.
        #/// </param>
        #server void  copyFromPurchLineHistory(PurchLineHistory       _purchLineHistory,
        #                                      boolean                _copyPrecisely = true,
        #                                      boolean                _copyPriceDisc = true,
        #                                      boolean                _copyQty       = true,
        #                                      Qty                    _qty           = _purchLineHistory.PurchQty
        #                                      , PdsCWInventQty       _cwQty         = _purchLineHistory.PdsCWQty
        #                                      )
        #{
        #    InventDim   inventDim;
        #
        #    this.initFromItemOrCategory(_purchLineHistory.ItemId, _purchLineHistory.ProcurementCategory, _purchLineHistory.Name);
        #
        #    if (_copyQty)
        #    {
        #        this.setInventDimId(_purchLineHistory.InventDimId);
        #        this.PurchQty           = _qty;
        #        this.PdsCWQty           = _cwQty;
        #        this.PurchUnit          = _purchLineHistory.PurchUnit;
        #        this.QtyOrdered         = this.calcQtyOrdered();
        #    }
        #    else
        #    {
        #        if (this.isCategoryBased())
        #        {
        #            this.setInventDimId(_purchLineHistory.InventDimId);
        #        }
        #        else
        #        {
        #            inventDim               = this.inventDim();
        #            EcoResProductDimGroupSetup::copyProductDimensionsForItem(this.ItemId, _purchLineHistory.inventDim(), inventDim);
        #            this.setInventDimIdFromInventDim(inventDim);
        #        }
        #    }
        #
        #    if (_copyPriceDisc)
        #    {
        #        this.PurchPrice         = _purchLineHistory.PurchPrice;
        #        this.PriceUnit          = _purchLineHistory.PriceUnit;
        #        this.LinePercent        = _purchLineHistory.LinePercent;
        #        this.LineDisc           = _purchLineHistory.LineDisc;
        #        this.MultiLnDisc        = _purchLineHistory.MultiLnDisc;
        #        this.MultiLnPercent     = _purchLineHistory.MultiLnPercent;
        #        this.PurchMarkup        = _purchLineHistory.PurchMarkup;
        #        this.LineAmount         = _purchLineHistory.LineAmount;
        #        this.DiscAmount         = _purchLineHistory.DiscAmount;
        #        this.DiscPercent        = _purchLineHistory.DiscPercent;
        #    }
        #
        #    if (_copyPrecisely)
        #    {
        #        this.Name               = _purchLineHistory.Name;
        #        this.ExternalItemId     = _purchLineHistory.ExternalItemId;
        #        this.TaxGroup           = _purchLineHistory.TaxGroup;
        #        this.TaxItemGroup       = _purchLineHistory.TaxItemGroup;
        #        this.DefaultDimension   = _purchLineHistory.DefaultDimension;
        #        this.AccountingDistributionTemplate = _purchLineHistory.AccountingDistributionTemplate;
        #    }
        #    this.setAddressFromInventDim(this.inventDim());
        #}
      ENDSOURCE
      SOURCE #corItemName
        #/// <summary>
        #/// Returns the item name considering if the item is category based or not
        #/// </summary>
        #/// <returns>
        #/// Item name
        #/// </returns>
        #display public PurchLineShowItemName corItemName()
        #{
        #    PurchLineShowItemName itemName;
        #
        #    if (this.isCategoryBased())
        #    {
        #        itemName = this.Name;
        #    }
        #    else
        #    {
        #        itemName = this.itemName();
        #    }
        #    return itemName;
        #}
        #
      ENDSOURCE
      SOURCE #createAgreementLine
        #/// <summary>
        #/// Creates an agreement line
        #/// </summary>
        #/// <param name="_agreementLine">
        #/// A existing <c>AgreementLine</c> record
        #/// </param>
        #public void createAgreementLine(AgreementLine _agreementLine)
        #{
        #    PurchLine       agreementPurchLine;
        #
        #    agreementPurchLine.data(this);
        #    if (_agreementLine)
        #    {
        #        agreementPurchLine.initFromAgreementLine(_agreementLine);
        #        if (!_agreementLine.isLinkValid(agreementPurchLine, false))
        #        {
        #            _agreementLine = null;
        #        }
        #    }
        #
        #    ttsbegin;
        #
        #    if (!_agreementLine)
        #    {
        #        _agreementLine = AgreementLine::findLineForAutoMatch(agreementPurchLine, this.purchTable().MatchingAgreement, true);
        #        if (_agreementLine)
        #        {
        #            agreementPurchLine.initFromAgreementLine(_agreementLine);
        #        }
        #    }
        #
        #    if (_agreementLine)
        #    {
        #        agreementPurchLine.update();
        #        this.data(agreementPurchLine);
        #    }
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #createFromTmpFrmVirtual
        #void createFromTmpFrmVirtual(PurchTable _purchTable, TmpFrmVirtual tmpFrmVirtual)
        #{
        #    boolean doSearchForAgreementLine = (_purchTable.MatchingAgreement != 0);
        #    while select tmpFrmVirtual
        #            where tmpFrmVirtual.Qty
        #    {
        #        try
        #        {
        #            this.clear();
        #            this.PurchId                = _purchTable.PurchId;
        #            this.ItemId                 = tmpFrmVirtual.ItemId;
        #            this.PurchQty               = tmpFrmVirtual.Qty;
        #            this.setInventDimId(tmpFrmVirtual.InventDimId);
        #
        #            if (pdsIsCWItem(this.ItemId))
        #            {
        #                this.PdsCWQty = tmpFrmVirtual.PdsCWQty;
        #            }
        #
        #            this.createLine(true,  //  validation
        #                            true,  //  initFromPurchTable
        #                            true,  //  initFromInventTableModule
        #                            true,  //  calcInventQty
        #                            true,  //  searchMarkup
        #                            true,  //  searchPrice
        #                            true,  //  ignorePurchTableInventDim
        #                            doSearchForAgreementLine    //  searchAgreementLine
        #                            );
        #
        #            tmpFrmVirtual.delete();
        #        }
        #
        #        catch (Exception::Error)
        #        {
        #            checkFailed("@SYS18447");
        #        }
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #createLine
        #server public void createLine(
        #    boolean _validation                  = false,
        #    boolean _initFromPurchTable          = false,
        #    boolean _initFromItemOrCategory      = false,
        #    boolean _calcInventQty               = false,
        #    boolean _searchMarkup                = true,
        #    boolean _searchPrice                 = false,
        #    boolean _ignorePurchTableInventDim   = false,
        #    boolean _searchAgreementLine         = false,
        #    boolean _setRemain                   = true,
        #    boolean _skipPurchTableUpdate        = false,
        #    boolean _skipInterCompanyCalcDisc    = false)
        #{
        #    PurchTable          purchTable;
        #    InventTable         inventTable;
        #    AgreementLine       agreementLine;
        #
        #    boolean             dropInvent = false;
        #
        #    // <GIN>
        #    #ISOCountryRegionCodes
        #    // </GIN>
        #    if (_initFromPurchTable)
        #    {
        #        purchTable= this.purchTable();
        #        this.initFromPurchTable(purchTable, _ignorePurchTableInventDim);
        #    }
        #
        #    if (_initFromItemOrCategory)
        #    {
        #        if (this.ItemId)
        #        {
        #            inventTable= this.inventTable();
        #
        #            if (! this.checkInitFromInventTable(inventTable))
        #            {
        #                throw error("@SYS18447");
        #            }
        #        }
        #
        #        this.initFromItemOrCategory(this.ItemId, this.ProcurementCategory, this.Name);
        #    }
        #
        #    this.initFromVendTable(this.vendTable_OrderAccount());
        #
        #    if (_calcInventQty)
        #    {
        #        this.QtyOrdered = this.calcQtyOrdered();
        #    }
        #
        #    this.RemainPurchPhysical            = this.PurchQty;
        #    this.RemainPurchFinancial           = 0;
        #    this.RemainInventPhysical           = this.QtyOrdered;
        #    // 1877
        #    this.RemainInventFinancial = 0;
        #    // 1877
        #
        #    if (_setRemain && pdsIsCWItem(this.ItemId))
        #    {
        #        this.PdsCWRemainInventPhysical = this.PdsCWQty;
        #        this.PdsCWRemainInventFinancial = 0;
        #    }
        #    this.type().initReturn();
        #
        #    if (_searchPrice)
        #    {
        #        this.setPriceDisc(this.inventDim());
        #    }
        #
        #    if (_searchAgreementLine && this.canAgreementBeLinked())
        #    {
        #        if (!purchTable.RecId)
        #        {
        #            purchTable= this.purchTable();
        #        }
        #
        #        if (purchTable.MatchingAgreement)
        #        {
        #            agreementLine = AgreementLine::findLineForAutoMatch(this, purchTable.MatchingAgreement, true);
        #            if (agreementLine)
        #            {
        #                this.initFromAgreementLine(agreementLine);
        #            }
        #        }
        #    }
        #
        #    if (_validation)
        #        if (!this.validateWrite())
        #        {
        #            throw error("@SYS18447");
        #        }
        #
        #    // <GIN>
        #    if (TaxParameters::checkParameterForPosting_IN(TaxType_IN::Customs) &&
        #        PurchTable::find(this.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::Yes &&
        #        CustomsVendBOETrans_IN::findPurchLineRecId(PurchLine::findInventTransId(this.InventRefTransId).RecId).RecId != 0 &&
        #        this.PurchId == this.InventRefId)
        #    {
        #        checkFailed("@GLS5764");
        #    }
        #    else
        #    {
        #    // </GIN>
        #        this.insert(dropInvent,_searchMarkup,true, _skipPurchTableUpdate,_skipInterCompanyCalcDisc);
        #    // <GIN>
        #    }
        #    // </GIN>
        #
        #}
        #
        #
      ENDSOURCE
      SOURCE #createMarkupTrans
        #/// <summary>
        #///     Creates markup transactions for the purchase line.
        #/// </summary>
        #/// <param name="purchTable">
        #///     A buffer of the <c>PurchTable</c> table.
        #/// </param>
        #/// <param name="_deleteExistingMarkupTrans">
        #///     A Boolean value that specifies whether to delete existing markup transactions; optional.
        #/// </param>
        #/// <param name="_markupGroupId">
        #///     A <c>MarkupGroupId</c> type specifing the markup group ID; optional.
        #/// </param>
        #server void  createMarkupTrans(
        #    PurchTable      purchTable,
        #    boolean         _deleteExistingMarkupTrans  = true,
        #    MarkupGroupId   _markupGroupId              = InventTableModule::find(this.ItemId,ModuleInventPurchSales::Purch).MarkupGroupId
        #
        #)
        #{
        #    Markup::insertMarkupTrans(HeadingLine::Linie,
        #                              MarkupModuleType::Vend,
        #                              this,
        #                              purchTable.OrderAccount,
        #                              purchTable.MarkupGroup,
        #                              purchTable.CurrencyCode,
        #                              purchTable.LanguageId,
        #                              this.ItemId,
        #                              _markupGroupId,
        #                             (this.LineAmount < 0), // invert sign on creditnotes
        #                              _deleteExistingMarkupTrans);
        #}
      ENDSOURCE
      SOURCE #creditNoteLine
        #boolean  creditNoteLine(PurchTable _purchTable = this.purchTable())
        #{
        #    return this.type(_purchTable).creditNoteLine();
        #}
      ENDSOURCE
      SOURCE #DefaultCostPriceAsSalesPrice
        #private boolean DefaultCostPriceAsSalesPrice()
        #{
        #    return ProjParameters::find().DefaultCostPriceAsSalesPrice && !this.ItemId;
        #}
      ENDSOURCE
      SOURCE #defaultingTax1099Amount
        #public void defaultingTax1099Amount()
        #{
        #    #ISOCountryRegionCodes
        #    if ((this.orig().LineAmount != this.LineAmount) && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoUS]))
        #    {
        #        if (this.purchTable().vendTable_InvoiceAccount().Tax1099Reports)
        #        {
        #            if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #            {
        #                if (this.Tax1099Fields)
        #                {
        #                    this.Tax1099Amount = this.LineAmount;
        #                }
        #                else
        #                {
        #                    this.Tax1099Amount = 0;
        #                }
        #            }
        #            else
        #            {
        #                this.Tax1099Amount = this.LineAmount;
        #            }
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #delete
        #public void  delete(boolean _showInfoDelReserv = true, boolean deletePBA = true, boolean updateOrderLineOfDeliverySchedule = true)
        #{
        #    PurchLineType purchLineType;
        #
        #    if (this.isTmp())
        #    {
        #        this.doDelete();
        #        return;
        #    }
        #
        #    purchLineType = this.type();
        #    purchLineType.delete(_showInfoDelReserv, deletePBA, updateOrderLineOfDeliverySchedule);
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #    {
        #        PurchTotalsSummaryController::onDelete(this);
        #    }
        #
        #    // <GEEPL>
        #    PlSADPurchTable::puchLineRemoved(this);
        #    // </GEEPL>
        #}
      ENDSOURCE
      SOURCE #deleteInventTrans_BR
        #/// <summary>
        #///     Delete the <c>inventTrans</c> related to the current <c>purchLine</c> if order operation is configured to do not create inventory transactions.
        #/// </summary>
        #public void deleteInventTrans_BR()
        #{
        #    if (!this.purchTable().createInventTrans_BR())
        #    {
        #        InventUpd_DeleteMovement::newMovement(InventMovement::construct(this, InventMovSubType::None, this)).updateNow();
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #deliveryAddress
        #//BP Deviation Documented
        #LogisticsPostalAddress deliveryAddress()
        #{
        #    return LogisticsPostalAddress::findRecId(this.DeliveryPostalAddress ? this.DeliveryPostalAddress : this.purchTable().DeliveryPostalAddress);
        #}
      ENDSOURCE
      SOURCE #deliveryCNPJCPFNUM_BR
        #/// <summary>
        #/// Returns the delivery CNPJ or CPF for the current record.
        #/// </summary>
        #/// <returns>
        #/// Returns the CNPJ or CPF of the customer if the adddress is a primary address.
        #/// Returns the CNPJ or CPF related to delivery <c>logisticsPostalAddress</c> if the adddress is not a primary address.
        #/// </returns>
        #public display CNPJCPFNum_BR deliveryCNPJCPFNUM_BR()
        #{
        #    DirPartyLocation dirPartyLocation;
        #
        #    if (!BrazilParameters::isEnabled())
        #        return '';
        #
        #    dirPartyLocation = DirPartyLocation::findByPartyLocation(VendTable::find(this.VendAccount).Party, this.deliveryLocation());
        #
        #    if (!dirPartyLocation.IsPrimary)
        #    {
        #        return (select cnpjcpfNum_BR from logisticsLocationExt
        #            where logisticsLocationExt.Location == this.deliveryLocation()).cnpjcpfNum_BR;
        #    }
        #
        #    return VendTable::find(this.VendAccount).cnpjcpfNum_BR;
        #}
      ENDSOURCE
      SOURCE #deliveryDate
        #public PurchLineDlvDate deliveryDate(PurchLineDlvDate _blankDate = systemDateGet())
        #{
        #    if (this.ConfirmedDlv)
        #    {
        #        return this.ConfirmedDlv;
        #    }
        #
        #    if (this.DeliveryDate)
        #    {
        #        return this.DeliveryDate;
        #    }
        #
        #    if (this.purchTable().DeliveryDate)
        #    {
        #        return this.purchTable().DeliveryDate;
        #    }
        #
        #    return _blankDate;
        #}
      ENDSOURCE
      SOURCE #deliveryIENum_BR
        #/// <summary>
        #/// Returns the delivery IE for the current record.
        #/// </summary>
        #/// <returns>
        #/// Returns the IE of the customer if the adddress is a primary address.
        #/// Returns the IE related to delivery <c>logisticsPostalAddress</c> if the adddress is not a primary address.
        #/// </returns>
        #public display IENum_BR deliveryIENum_BR()
        #{
        #    DirPartyLocation dirPartyLocation;
        #
        #    if (!BrazilParameters::isEnabled())
        #        return '';
        #
        #    dirPartyLocation = DirPartyLocation::findByPartyLocation(VendTable::find(this.VendAccount).Party, this.deliveryLocation());
        #
        #    if (!dirPartyLocation.IsPrimary)
        #    {
        #        return (select ieNum_BR from logisticsLocationExt
        #            where logisticsLocationExt.Location == this.deliveryLocation()).ieNum_BR;
        #    }
        #
        #    return VendTable::find(this.VendAccount).ieNum_BR;
        #}
      ENDSOURCE
      SOURCE #deliveryLocation
        #/// <summary>
        #/// Returns the <c>RecId</c> value of the <c>LogisticsLocation</c> record that is associated with
        #/// selected <c>DeliveryPostalAddress</c> record.
        #/// </summary>
        #/// <returns>
        #/// The <c>RecId</c> value of the <c>LogisticsLocation</c> record that is associated with selected
        #/// <c>DeliveryPostalAddress</c> record.
        #/// </returns>
        #public LogisticsLocationRecId deliveryLocation()
        #{
        #    return LogisticsPostalAddress::getLocation(this.DeliveryPostalAddress);
        #}
      ENDSOURCE
      SOURCE #deliveryStatusImage
        #//BP Deviation Documented
        #display ImageRes deliveryStatusImage()
        #{
        #    #resAppl
        #
        #    if (!this.RecId)
        #    {
        #        return 0;
        #    }
        #
        #    if (this.receivedInTotal())
        #    {
        #        if (this.RemainPurchPhysical > 0)
        #        {
        #            return #ImageNew;
        #        }
        #        return #ImageOverlayYes;
        #    }
        #
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #deliveryStatusTxt
        #str deliveryStatusTxt()
        #{
        #    if (!this.RecId)
        #    {
        #        return '';
        #    }
        #
        #    if (this.receivedInTotal())
        #    {
        #        if (this.RemainPurchPhysical > 0)
        #        {
        #            return "@SYS89798";
        #        }
        #        return "@SYS89797";
        #    }
        #
        #    return "@SYS99500";
        #}
      ENDSOURCE
      SOURCE #deliveryTerm
        #DlvTermId  deliveryTerm()
        #{
        #    return this.purchTable().DlvTerm;
        #}
      ENDSOURCE
      SOURCE #discAmount
        #DiscAmount  discAmount()
        #{
        #    return PriceDisc::discAmount(PurchParameters::find().Disc, this.LineDisc, this.MultiLnDisc);
        #}
      ENDSOURCE
      SOURCE #discPercent
        #DiscPct   discPercent()
        #{
        #    return PriceDisc::discPercent(PurchParameters::find().Disc, this.LinePercent, this.MultiLnPercent);
        #}
      ENDSOURCE
      SOURCE #displayBudgetCheckResult
        #/// <summary>
        #/// Gets the image position that displays the <c>BudgetCheckResult</c> value for the <c>PurchLine</c>
        #/// record in the image list of the <c>BudgetCheckResult</c> values.
        #/// </summary>
        #/// <returns>
        #/// A <c>ImageBudgetCheckResult</c> value to indicate the image position in the image list of the
        #/// <c>BudgetCheckResult</c> values.
        #/// </returns>
        #// BP Deviation Documented
        #public display ImageBudgetCheckResult displayBudgetCheckResult()
        #{
        #    return BudgetControlResult::getBudgetCheckResultImagePos(this.getBudgetCheckResult());
        #}
      ENDSOURCE
      SOURCE #doDistributionsExist
        #/// <summary>
        #///    Performs a check whether any distributions exist for a line
        #/// </summary>
        #/// <returns>
        #///    True, if the line has at least one distribution; otherwise false.
        #/// </returns>
        #public client server boolean doDistributionsExist()
        #{
        #    return SourceDocumentLineProvider::isLineDistributed(this.sourceDocumentLine(), this);
        #}
      ENDSOURCE
      SOURCE #doReCalcPricesFromBasePrompt
        #/// <summary>
        #/// Prompts the user to specify whether to recalculate prices based on trade agreements.
        #/// </summary>
        #/// <returns>
        #/// true if the prices should be recalculated; otherwise, false.
        #/// </returns>
        #public boolean doReCalcPricesFromBasePrompt()
        #{
        #    // Run the price discount policy dialog in order to let the user determine which agreement values to recalulate.
        #    return this.runPriceDiscPolicyDialog(true);
        #}
      ENDSOURCE
      SOURCE #editableInWorkflow
        #/// <summary>
        #/// Indicates whether the user can modify the record when an active workflow is running.
        #/// </summary>
        #/// <returns>
        #/// A Boolean value that indicates whether the user has rights to modify the record.
        #/// </returns>
        #public boolean  editableInWorkflow()
        #{
        #    return ((this.EditableInWorkflow
        #            || this.WorkflowState == TradeWorkflowState::Returned
        #            || this.WorkflowState == TradeWorkflowState::ChangeRequest)
        #            && this.isUserWorkItemOwner());
        #}
      ENDSOURCE
      SOURCE #editProductDimensionsAllowed
        #/// <summary>
        #/// Determines whether the product dimensions on the line can be edited.
        #/// </summary>
        #/// <returns>
        #///     true for order lines without delivery lines; otherwise, false.
        #/// </returns>
        #boolean editProductDimensionsAllowed()
        #{
        #    return this.SalesPurchLine::editProductDimensionsAllowed();
        #}
      ENDSOURCE
      SOURCE #endDisc
        #boolean  endDisc()
        #{
        #    if (this.isCategoryBased())
        #    {
        #        return true;
        #    }
        #    return this.SalesPurchLine::endDisc();
        #}
      ENDSOURCE
      SOURCE #exceptionCode_BR
        #/// <summary>
        #/// Displays the exception code of the item in the current purchase order line.
        #/// </summary>
        #/// <returns>
        #/// The exception code of the item.
        #/// </returns>
        #//BP Deviation Documented
        #display ExceptionCode_BR exceptionCode_BR()
        #{
        #    return this.inventTable().ExceptionCode_BR;
        #}
      ENDSOURCE
      SOURCE #existInvoice
        #/// <summary>
        #/// Determines whether saved unposted invoices exist for the current record.
        #/// </summary>
        #/// <returns>
        #/// true if a saved pending invoice exists for this purchase order line; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// The current record includes unposted invoices saved in batches or in the process of being edited.
        #/// Additionally it includes those invoices that are actually saved as pending.
        #/// </remarks>
        #public boolean existInvoice()
        #{
        #    VendInvoiceInfoLine     vendInvoiceInfoLine;
        #
        #    if (this.purchTable().PurchStatus == PurchStatus::Backorder || this.purchTable().PurchStatus == PurchStatus::Received)
        #    {
        #        select firstonly RecId from vendInvoiceInfoLine
        #                where vendInvoiceInfoLine.InventTransId == this.InventTransId &&
        #                vendInvoiceInfoLine.ParmId == '';
        #
        #        if (vendInvoiceInfoLine.RecId != 0)
        #        {
        #            return true;
        #        }
        #    }
        #    return false;
        #}
      ENDSOURCE
      SOURCE #existInvoice_RU
        #/// <summary>
        #/// Determines if invoice line exist for the current record.
        #/// </summary>
        #/// <returns>
        #/// true if invoice line exists for this purchase order line, otherwise, false.
        #/// </returns>
        #public boolean existInvoice_RU()
        #{
        #    VendInvoiceInfoLine     vendInvoiceInfoLine;
        #
        #    if (this.PurchStatus == PurchStatus::Backorder || this.PurchStatus == PurchStatus::Received)
        #    {
        #        select firstonly RecId from vendInvoiceInfoLine
        #            where vendInvoiceInfoLine.InventTransId == this.InventTransId;
        #
        #        if (vendInvoiceInfoLine.RecId != 0)
        #        {
        #            return true;
        #        }
        #    }
        #    return false;
        #}
      ENDSOURCE
      SOURCE #expandBOM
        #server void  expandBOM(TmpFrmVirtual  _tmpFrmVirtual, BOM tmpBOM)
        #{
        #    PurchTable              purchTable;
        #    PurchLine               purchLine;
        #    BOMCalcData             bomCalcData;
        #    InventTable             inventTable;
        #    RouteId                 routeNum;
        #    TradeLineNumberManager  lineNumberManager;
        #    Counter                 x = 1;
        #
        #    ttsbegin;
        #    purchTable          = this.purchTable();
        #    inventTable         = this.inventTable();
        #    bomCalcData         = BOMCalcData::newInventTable(this.QtyOrdered,inventTable);
        #    routeNum            = inventTable.routeId(purchTable.DeliveryDate, this.QtyOrdered, this.inventDim());
        #    lineNumberManager   = TradeLineNumberManager::newLine(this);
        #    lineNumberManager.moveLineToLast(false);
        #
        #    startLengthyOperation();
        #    while select _tmpFrmVirtual
        #    {
        #        this.resetInvent();
        #        break;
        #    }
        #
        #    while select _tmpFrmVirtual
        #    {
        #        purchLine.clear();
        #        select tmpBOM where tmpBOM.RecId == _tmpFrmVirtual.RecordNo;
        #        purchLine.initFromPurchTable(purchTable);
        #        purchLine.initFromBOM(tmpBOM, this);
        #        purchLine.setAddressFromPurchLine(this);
        #
        #        purchLine.QtyOrdered    = UnitOfMeasureConverter::convert(BOMCalcConsumption::construct(tmpBOM.Formula,bomCalcData).calcConsumption(
        #                                                                                                              tmpBOM,
        #                                                                                                              Route::accError(routeNum,
        #                                                                                                                              tmpBOM.OprNum)),
        #                                                   UnitOfMeasure::unitOfMeasureIdBySymbol(tmpBOM.UnitId),
        #                                                   UnitOfMeasure::unitOfMeasureIdBySymbol(purchLine.inventTable().inventUnitId()),
        #                                                   NoYes::Yes,
        #                                                   InventTable::itemProduct(tmpBOM.ItemId));
        #
        #        purchLine.PurchQty      = UnitOfMeasureConverter::convert(purchLine.QtyOrdered,
        #                                                   UnitOfMeasure::unitOfMeasureIdBySymbol(purchLine.inventTable().inventUnitId()),
        #                                                   UnitOfMeasure::unitOfMeasureIdBySymbol(purchLine.PurchUnit),
        #                                                   NoYes::Yes,
        #                                                   InventTable::itemProduct(tmpBOM.ItemId));
        #
        #        lineNumberManager.setLine(purchLine);
        #        lineNumberManager.preUpdateLineNumber(false);
        #        purchLine.createLine(true,false,false,false,true,true, false, true);
        #        purchLine.LineHeader    = strFmt("@SYS25825", this.inventTable().defaultProductName());
        #        purchLine.write();
        #        lineNumberManager.postUpdateLineNumber();
        #        x++;
        #    }
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #fieldChanged
        #boolean  fieldChanged(FieldId  fieldId)
        #{
        #    boolean  ok = false;
        #
        #    if (!this.RecId)
        #    {
        #        ok = true;
        #    }
        #
        #    if (this.orig().(fieldId) != this.(fieldId))
        #    {
        #        ok = true;
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #findAgreementLine
        #/// <summary>
        #/// Checks if an agreement line exists
        #/// </summary>
        #/// <returns>
        #/// An <c>AgreementLine</c> record.
        #/// </returns>
        #public AgreementLine findAgreementLine()
        #{
        #    PurchTable      purchTable = this.purchTable();
        #    AgreementLine   agreementLine;
        #
        #    if (this.MatchingAgreementLine && purchTable.OrderAccount == this.VendAccount )
        #    {
        #        agreementLine = AgreementLine::find(this.MatchingAgreementLine);
        #        if (agreementLine.Agreement != purchTable.MatchingAgreement || agreementLine.IsDeleted)
        #        {
        #            agreementLine = null;
        #        }
        #    }
        #
        #    return agreementLine;
        #}
      ENDSOURCE
      SOURCE #findApproved
        #/// <summary>
        #/// Finds the original purchase line.
        #/// </summary>
        #/// <returns>
        #/// A <c>PurchLine</c> record.
        #/// </returns>
        #/// <remarks>
        #/// If the purchase order has change request enabled, then the approved record is fetched from the
        #/// <c>PurchLineHistory</c> table, otherwise the orig record would be returned.
        #/// </remarks>
        #public PurchLine findApproved()
        #{
        #    PurchLineHistory    purchLineHistory;
        #    PurchLine           purchLineApproved;
        #
        #    if (!this.RecId)
        #    {
        #        return null;
        #    }
        #
        #    if (this.type().isChangeRequestRequired() && !this.isLatestPOVersionNotArchived())
        #    {
        #        purchLineHistory = PurchLineHistory::find(this);
        #        if (!purchLineHistory)
        #        {
        #            return null;
        #        }
        #
        #        //BP Deviation Documented
        #        purchLineApproved.setTmp();
        #        purchLineApproved.data(this.data());
        #        purchLineApproved.doInsert();
        #
        #        purchLineApproved.initFromPurchLineHistory(purchLineHistory);
        #
        #        return purchLineApproved;
        #    }
        #
        #    return(this.orig());
        #}
      ENDSOURCE
      SOURCE #fshCrossDocking
        #/// <summary>
        #///   Returns the total transfer order quantity for the given purchase order line.
        #/// </summary>
        #/// <param name="_tPurchLine">
        #///   A <c>PurchLine</c> record.
        #/// </param>
        #/// <returns>
        #///   A purchase quantity.
        #/// </returns>
        #//BP deviation documented
        #display PurchQty fshCrossDocking(PurchLine _tPurchLine)
        #{
        #    real                rQty;
        #
        #    InventTransferLine      tInventTransferLine;
        #    InventLocation          tInventLocation;
        #
        #    while select * from tInventLocation
        #        index InventLocationIdx
        #        where tInventLocation.fshStore == NoYes::Yes
        #    {
        #        tInventTransferLine = RetailReplenishmentTransferOrder::findTransferOrderLine(tableNum(PurchLine), _tPurchLine.RecId, tInventLocation.InventLocationId, false);
        #
        #        if (tInventTransferLine)
        #        {
        #            rQty += tInventTransferLine.QtyTransfer;
        #        }
        #    }
        #
        #    return rQty;
        #}
      ENDSOURCE
      SOURCE #getBudgetCheckResult
        #/// <summary>
        #/// Calculates the <c>BudgetCheckResult</c> value for the <c>PurchLine</c> record.
        #/// </summary>
        #/// <returns>
        #/// A <c>BudgetCheckResult</c> value which is calculated by the query.
        #/// </returns>
        #public BudgetCheckResult getBudgetCheckResult()
        #{
        #    return BudgetSourceSourceDocumentLine::findBudgetCheckResult(this.SourceDocumentLine);
        #}
      ENDSOURCE
      SOURCE #getDebitCredit
        #DebitCredit getDebitCredit()
        #{
        #    DebitCredit debitCredit;
        #
        #    if (this.LineAmount < 0 || this.QtyOrdered < 0 || this.PurchQty < 0)
        #    {
        #        debitCredit = DebitCredit::Credit;
        #    }
        #    else
        #    {
        #        debitCredit = DebitCredit::Debit;
        #    }
        #
        #    return debitCredit;
        #}
      ENDSOURCE
      SOURCE #getDeliveryEntityRecord
        #/// <summary>
        #///     Gets the delivery entity record based on the postal address.
        #/// </summary>
        #/// <returns>
        #///    A <c>CompanyInfo</c>, <c>InventLocation</c> or <c>InventSite</c> record.
        #/// </returns>
        #public Common getDeliveryEntityRecord()
        #{
        #    return this.TradePostalAddress::getDeliveryEntityRecord();
        #}
      ENDSOURCE
      SOURCE #getEffectiveLinePrice
        #/// <summary>
        #///     Gets the effective price for the purchase order line.
        #/// </summary>
        #/// <returns>
        #///     The effective price for the purchase order line.
        #/// </returns>
        #/// <remarks>
        #///     For a line that uses advanced pricing, this will be the adjusted unit price, otherwise it is the
        #///     standard unit price value on the line.
        #/// </remarks>
        #public PurchPrice getEffectiveLinePrice()
        #{
        #    PurchPrice              purchPrice;
        #    PDSAdvancedPriceInfo    advancedPriceInfo = this.pdsAdvancedPriceInfo();
        #
        #    if (advancedPriceInfo && advancedPriceInfo.CalculatedUnitPrice)
        #    {
        #        purchPrice = advancedPriceInfo.CalculatedUnitPrice;
        #    }
        #    else
        #    {
        #        purchPrice = this.PurchPrice;
        #    }
        #
        #    return purchPrice;
        #}
      ENDSOURCE
      SOURCE #getGrossVolumePerItem
        #/// <summary>
        #/// Calculates the gross volume per item for the given <c>PurchLine</c> record.
        #/// </summary>
        #/// <returns>
        #/// A <c>Volume</c> value, which is the gross volume per item on the line.
        #/// </returns>
        #public Volume getGrossVolumePerItem()
        #{
        #    InventTable         inventTable;
        #    InventTableModule   inventTableModule;
        #    Volume              grossVolume;
        #
        #    if (this.isStocked())
        #    {
        #        grossVolume = this.inventTable(this.ItemId).grossVolume();
        #
        #    }
        #    else
        #    {
        #        if (!this.isCategoryBased())
        #        {
        #            //Volume of non-stocked item is derived from the volume defined on InventTable,
        #            //by converting the UnitOfMeasure defined on Purchase Line to the UnitOfMeasure defined on InventTable
        #            inventTable         = this.inventTable(this.ItemId);
        #            inventTableModule   = inventTable.inventTableModulePurch();
        #
        #            grossVolume = inventTable.grossVolume();
        #            if (this.PurchUnit && inventTableModule.UnitId && this.PurchUnit != inventTableModule.UnitId)
        #            {
        #                grossVolume = grossVolume * this.unitConvertPurch2Invent(1);
        #            }
        #        }
        #    }
        #    return grossVolume;
        #}
      ENDSOURCE
      SOURCE #getGrossWeightPerItem
        #/// <summary>
        #/// Calculates the gross weight per item for the given <c>PurchLine</c> record.
        #/// </summary>
        #/// <returns>
        #/// A <c>Weight</c> value, which is the gross weight per item on the line.
        #/// </returns>
        #public Weight getGrossWeightPerItem()
        #{
        #    InventTable         inventTable;
        #    InventTableModule   inventTableModule;
        #    Weight              grossWeight;
        #
        #    if (this.isStocked())
        #    {
        #        grossWeight = this.inventTable(this.ItemId).grossWeight();
        #
        #    }
        #    else
        #    {
        #        if (this.isCategoryBased())
        #        {
        #            grossWeight = PurchLineForeignTradeCategory::findpurchLine(this).UnitWeight;
        #        }
        #        else
        #        {
        #            //Weight of non-stocked item is derived from the weight defined on InventTable,
        #            //by converting the UnitOfMeasure defined on Purchase Line to the UnitOfMeasure defined on InventTable
        #            inventTable         = this.inventTable(this.ItemId);
        #            inventTableModule   = inventTable.inventTableModulePurch();
        #
        #            grossWeight = inventTable.grossWeight();
        #            if (this.PurchUnit && inventTableModule.UnitId && this.PurchUnit != inventTableModule.UnitId)
        #            {
        #                grossWeight = grossWeight * this.unitConvertPurch2Invent(1);
        #            }
        #        }
        #    }
        #    return grossWeight;
        #}
      ENDSOURCE
      SOURCE #getItemType
        #/// <summary>
        #/// Displays the <c>ItemType</c> value for the item.
        #/// </summary>
        #/// <returns>
        #/// The <c>ItemType</c> value for the item.
        #/// </returns>
        #//BP Deviation Documented
        #display ItemType getItemType()
        #{
        #    return InventTable::find(this.ItemId).ItemType;
        #}
      ENDSOURCE
      SOURCE #getMiscChargesAmount_IN
        #/// <summary>
        #/// This method is used to get the amount.
        #/// </summary>
        #/// <returns>
        #/// Returns the amount.
        #/// </returns>
        #// <GIN>
        #public Amount getMiscChargesAmount_IN()
        #{
        #    return this.purchLineView_IN().SalesPurchJournalLine_IN::getMiscChargesAmountPlusLineAmount(this.TableId, this.RecId);
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #getProjCreditNoteSource
        #/// <summary>
        #/// Finds the original purchase line.
        #/// </summary>
        #/// <param name="update">
        #///    A Boolean value that determines whether the record should be selected for update; optional.
        #/// </param>
        #/// <returns>
        #///    A <c>PurchLine</c> record.
        #/// </returns>
        #PurchLine getProjCreditNoteSource(boolean  update = false)
        #{
        #    PurchLine               sourcePurchLine;
        #    RefRecId                projCreditNoteSourceRefRecId;
        #    ProjCreditNoteSource    projCreditNoteSource;
        #
        #    projCreditNoteSourceRefRecId = SysTransactionScopeCache::get(classStr(PurchCopying), identifierStr(projCreditNoteSourceRefRecId));
        #    if (projCreditNoteSourceRefRecId)
        #    {
        #        sourcePurchLine = PurchLine::findRecId(projCreditNoteSourceRefRecId, update);
        #    }
        #    else
        #    {
        #        projCreditNoteSource = ProjCreditNoteSource::find(this.RecId);
        #        if (projCreditNoteSource)
        #        {
        #            sourcePurchLine = PurchLine::findRecId(projCreditNoteSource.ProjCreditNoteSource, update);
        #        }
        #    }
        #
        #    return sourcePurchLine;
        #}
      ENDSOURCE
      SOURCE #getPurchCommitmentLine_PSN
        #/// <summary>
        #/// Retrieves the commitment line record that the current <c>PurchLine</c> record is associated with.
        #/// </summary>
        #/// <param name="_forupdate">
        #/// true if the commitment line record should be selected for update; otherwise, false.
        #/// </param>
        #/// <returns>
        #/// The commitment line record that the current <c>PurchLine</c> record is associated with.
        #/// </returns>
        #public PurchCommitmentLine_PSN getPurchCommitmentLine_PSN(boolean _forupdate = false)
        #{
        #    PurchCommitmentLine_PSN purchCommitmentLine;
        #
        #    if (_forupdate)
        #    {
        #        select firstonly forupdate purchCommitmentLine
        #            where purchCommitmentLine.RecId == this.PurchCommitmentLine_PSN;
        #    }
        #    else
        #    {
        #        select firstonly purchCommitmentLine
        #            where purchCommitmentLine.RecId == this.PurchCommitmentLine_PSN;
        #    }
        #
        #    return purchCommitmentLine;
        #}
      ENDSOURCE
      SOURCE #hasAssetAssociated
        #/// <summary>
        #/// Checks whether the line has an associated asset.
        #/// </summary>
        #/// <returns>
        #/// true if the line has asset information set; otherwise, false.
        #/// </returns>
        #boolean hasAssetAssociated()
        #{
        #    return (this.AssetId != '' || this.CreateFixedAsset);
        #}
      ENDSOURCE
      SOURCE #hasOnlyLineAmount
        #boolean hasOnlyLineAmount()
        #{
        #    return this.PriceDiscLine::hasOnlyLineAmount();
        #}
      ENDSOURCE
      SOURCE #hasRetentionTerms
        #/// <summary>
        #/// Checks to see if the Purchase Order Line item has retention terms.
        #/// </summary>
        #/// <returns>
        #/// true if the line has retention terms; otherwise, false.
        #/// </returns>
        #public boolean hasRetentionTerms()
        #{
        #    return (this.psaRetainScheduleId != "");
        #}
      ENDSOURCE
      SOURCE #inclTax
        #boolean inclTax()
        #{
        #    return this.SalesPurchLine::inclTax();
        #}
      ENDSOURCE
      SOURCE #initBarcode
        #server void initBarcode(InventDim _inventDim = this.inventDim())
        #{
        #    InventItemBarcode   inventItemBarcode = InventItemBarcode::findPurchBarcodeDimension(this.ItemId, _inventDim);
        #
        #    this.BarCode        = inventItemBarcode.ItemBarCode;
        #    this.BarCodeType    = inventItemBarcode.BarcodeSetupId;
        #}
      ENDSOURCE
      SOURCE #initFromAgreementLine
        #/// <summary>
        #/// Creates a <c>PurchLine</c> table record with the values from the <c>AgreementLine</c> table record.
        #/// </summary>
        #/// <param name="_agreementLine">
        #/// A record of the <c>AgreementLine</c> table.
        #/// </param>
        #public void initFromAgreementLine(AgreementLine _agreementLine)
        #{
        #    this.type().initFromAgreementLine(_agreementLine);
        #}
      ENDSOURCE
      SOURCE #initFromBOM
        #void initFromBOM(BOM        bom,
        #                 PurchLine  parentLine)
        #{
        #    InventDim                       inventDim;
        #    // <GEERU>
        #    PurchTable_RU                   purchTable_RU;
        #    // </GEERU>
        #
        #    if (this.InventDimId)
        #    {
        #        inventDim = this.inventDim();
        #    }
        #
        #    this.ItemId             = bom.ItemId;
        #    EcoResProductDimGroupSetup::copyProductDimensionsForItem(this.ItemId, bom.inventDim(), inventDim);
        #
        #    // <GEERU>
        #    if (EcoResDimensionGroupSetup::isInventoryDimensionActiveForItem(this.ItemId, fieldNum(InventDim, InventProfileId_RU)) &&
        #        ! inventDim.InventProfileId_RU)
        #    {
        #        if (! inventDim.InventProfileId_RU)
        #        {
        #            inventDim.InventProfileId_RU = bom.inventDim().InventProfileId_RU;
        #        }
        #
        #        if (! inventDim.InventProfileId_RU)
        #        {
        #            inventDim.InventProfileId_RU = BOMParameters::find().InventProfileId_RU;
        #        }
        #
        #        purchTable_RU = parentLine.purchTable().purchTable_RU();
        #        if (purchTable_RU.InventProfileType_RU &&
        #            purchTable_RU.InventProfileType_RU != inventDim.inventProfile_RU().InventProfileType)
        #        {
        #            throw error(strFmt("@GLS113739",
        #                                this.ItemId,
        #                                inventDim.InventProfileId_RU,
        #                                purchTable_RU.InventProfileType_RU));
        #        }
        #    }
        #    // </GEERU>
        #    inventDim.InventLocationId  = bom.inventDim().InventLocationId;
        #    inventDim.initFromInventLocation(inventDim.inventLocation());
        #    this.setInventDimIdFromInventDim(inventDim);
        #
        #    this.initFromInventTable(this.inventTable());
        #}
      ENDSOURCE
      SOURCE #initFromCORPurchLine
        #/// <summary>
        #///    Initializes a <c>purchLine</c> table buffer based on a <c>purchLine</c> table buffer used for unconfirmed product receipts.
        #/// </summary>
        #/// <param name="_purchLine">
        #///    The <c>purchLine</c> table buffer that is to be copied.
        #/// </param>
        #void  initFromCORPurchLine(PurchLine _purchLine)
        #{
        #    this.Requester          = _purchLine.Requester;
        #
        #    this.AssetGroup         = _purchLine.AssetGroup;
        #}
      ENDSOURCE
      SOURCE #initFromInventExternalForProcessing_PL
        #public void initFromInventExternalForProcessing_PL(PlInventExternalForProcessing _inventExternalForProcessing)
        #{
        #    this.ItemId      = _inventExternalForProcessing.ItemId;
        #    this.InventDimId = _inventExternalForProcessing.InventDimId;
        #    this.PurchQty    = _inventExternalForProcessing.InventQty;
        #    this.PurchPrice  = _inventExternalForProcessing.PurchPrice;
        #}
      ENDSOURCE
      SOURCE #initFromInventTable
        #/// <summary>
        #/// Updates the <c>PurchLine</c> based on the given item.
        #/// </summary>
        #/// <param name="_inventTable">
        #///     The <c>InventTable</c> buffer to initialize from.
        #/// </param>
        #public server void initFromInventTable(InventTable _inventTable)
        #{
        #    container               purchLineContainer;
        #    XppILExecutePermission  xppILExecutePermission;
        #
        #    xppILExecutePermission = new XppILExecutePermission();
        #    xppILExecutePermission.assert();
        #    if (PurchLine::hasExensionTableEnabled())
        #    {
        #        this.SysExtensionSerializerMap::packAll();
        #    }
        #    purchLineContainer = runTableMethodIL(tableStr(PurchLine),
        #                        tableStaticMethodStr(PurchLine, initFromInventTableIL),
        #                        [buf2Con(this, true), buf2Con(_inventTable, true)]);
        #    CodeAccessPermission::revertAssert();
        #
        #    this.con2buf(purchLineContainer);
        #    if (PurchLine::hasExensionTableEnabled())
        #    {
        #        this.SysExtensionSerializerMap::unpackAll();
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromItemOrCategory
        #/// <summary>
        #///     Initiates a <c>PurchLine</c> table buffer from an based on a item or catagory.
        #/// </summary>
        #/// <param name="_itemId">
        #///     A <c>ItemId</c> type.
        #/// </param>
        #/// <param name="_procurementCategory">
        #///     A <c>PurchCategory</c> type.
        #/// </param>
        #/// <param name="_name">
        #///     The name of the catagory item.
        #/// </param>
        #/// <param name="_searchPrice">
        #///     A Boolean that specifies whether prices and discounts should be initiated; optional.
        #/// </param>
        #/// <param name="_setAddressFromInventDim">
        #///     A Boolean that specifies whether the address should be initiated from the inventory dimension; optinal.
        #/// </param>
        #public void initFromItemOrCategory(
        #    ItemId          _itemId,
        #    PurchCategory   _procurementCategory,
        #    ItemFreeTxt     _name,
        #    boolean         _searchPrice                = true,
        #    boolean         _setAddressFromInventDim    = true)
        #{
        #    this.type().initFromItemOrCategory(_itemId, _procurementCategory, _name, _searchPrice, _setAddressFromInventDim);
        #}
      ENDSOURCE
      SOURCE #initFromOrderLineWithMultipleDeliveries
        #/// <summary>
        #/// Initializes a delivery line based on its order line.
        #/// </summary>
        #/// <param name="_purchLine">
        #/// The order line based on which to initialize.
        #/// </param>
        #/// <param name="_onlyCommercialAttributes">
        #/// A Boolean value that indicates whether to initialize only the commercial attributes; optional.
        #/// </param>
        #/// <remarks>
        #/// When the <paramref name="_onlyCommercialAttributes" /> parameter is true it can be used to reset
        #/// commercial attributes on an existing delivery line.When the <paramref
        #/// name="_onlyCommercialAttributes" /> parameter is false it can be used to initialize new delivery
        #/// lines.
        #/// </remarks>
        #void initFromOrderLineWithMultipleDeliveries(PurchLine _purchLine, boolean _onlyCommercialAttributes = false)
        #{
        #    if (!_onlyCommercialAttributes)
        #    {
        #        this.initFromPurchTable(_purchLine.purchTable());
        #        this.initFromPurchLine(_purchLine, true, false, false, false);
        #
        #        this.PurchUnit               = _purchLine.PurchUnit;
        #        this.DeliveryDate            = _purchLine.DeliveryDate;
        #        this.ConfirmedDlv            = _purchLine.ConfirmedDlv;
        #        this.MatchingAgreementLine   = _purchLine.MatchingAgreementLine;
        #        this.PurchReqId              = _purchLine.PurchReqId;
        #
        #        this.LineDeliveryType        = LineDeliveryType::DeliveryLine;
        #    }
        #
        #    this.PurchPrice         = _purchLine.PurchPrice;
        #    this.PriceUnit          = _purchLine.PriceUnit;
        #    this.LinePercent        = _purchLine.LinePercent;
        #    this.LineDisc           = _purchLine.LineDisc;
        #    this.MultiLnDisc        = _purchLine.MultiLnDisc;
        #    this.MultiLnPercent     = _purchLine.MultiLnPercent;
        #    this.DiscAmount         = _purchLine.DiscAmount;
        #    this.DiscPercent        = _purchLine.DiscPercent;
        #    this.PurchMarkup        = _purchLine.PurchMarkup;
        #    this.LineAmount         = this.calcLineAmountForced();
        #}
      ENDSOURCE
      SOURCE #initFromPriceDisc
        #void initFromPriceDisc(PriceDisc_Price _priceDisc, PriceDiscPolicyCheckPolicy _checkPolicy = null, boolean _initDateFields = true)
        #{
        #    SchedDate           schedDate;
        #    WorkCalendarSched   workCalendarSched;
        #    // <GIN>
        #    PurchLine_IN        purchLine_IN;
        #    // </GIN>
        #
        #    // <GIN>
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        purchLine_IN = this.purchLine_IN();
        #        purchLine_IN.MaximumRetailPrice_IN = _priceDisc.maxRetailPrice_IN();
        #        this.packPurchLine_IN(purchLine_IN);
        #    }
        #    // </GIN>
        #    this.SalesPurchLine::setPriceDiscPriceUnitMarkup(_priceDisc, _checkPolicy);
        #
        #    if (this.SkipUpdate == InterCompanySkipUpdate::No
        #        && this.LineDeliveryType == LineDeliveryType::OrderLine)
        #    {
        #        if (!this.DeliveryDate)
        #        {
        #            this.DeliveryDate       = this.purchTable().DeliveryDate;
        #        }
        #
        #        if (_priceDisc.deliveryDays())
        #        {
        #            workCalendarSched = new WorkCalendarSched();
        #            schedDate = workCalendarSched.schedDate(SchedDirection::Forward,
        #                                                    systemDateGet(),                                // FromDate
        #                                                    _priceDisc.deliveryDays(),                       // LeadTime
        #                                                    _priceDisc.calendarDays(),
        #                                                    this.vendTable_OrderAccount().PurchCalendarId,
        #                                                    this.type().internalCalendarId());
        #
        #            this.DeliveryDate = max(schedDate, this.DeliveryDate);
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromProdBOM
        #/// <summary>
        #///    Initializes the <c>PurchLine</c> record from the <c>ProdBOM</c> record.
        #/// </summary>
        #/// <param name="_prodBOM">
        #///    The <c>ProdBOM</c> record from which to initialize the <c>PurchLine</c> record.
        #/// </param>
        #void  initFromProdBOM(ProdBOM   _prodBOM)
        #{
        #    InventDim       inventDim;
        #
        #    this.ItemId                 = _prodBOM.ItemId;
        #    this.ProcurementCategory    = EcoResProductCategory::findByItemIdCategoryHierarchyRole(
        #                                        _prodBOM.ItemId,
        #                                        EcoResCategoryNamedHierarchyRole::Procurement).Category;
        #    this.QtyOrdered             = _prodBOM.QtyInventCalc;
        #    this.RemainInventPhysical   = _prodBOM.QtyInventCalc;
        #
        #    if (this.InventDimId)
        #    {
        #        inventDim = this.inventDim();
        #    }
        #
        #    inventDim.mergeUsedDim(InventDimGroupSetup::newItemId(this.ItemId), _prodBOM.inventDim());
        #
        #    this.setAddressFromInventDim(inventDim);
        #
        #    this.setInventDimIdFromInventDim(inventDim);
        #
        #    this.ReqPlanIdSched         = _prodBOM.ReqPlanIdSched;
        #    this.ReqPOId                = _prodBOM.ReqPOId;
        #
        #    this.DeliveryDate           = max(this.DeliveryDate,_prodBOM.RawMaterialDate);
        #    this.InventRefId            = _prodBOM.ProdId;
        #    this.InventRefTransId       = _prodBOM.InventTransId;
        #    this.ItemRefType            = InventRefType::ProdLine;
        #
        #    this.initName();
        #    this.initFromVendExternalItemDescription();
        #}
      ENDSOURCE
      SOURCE #initFromProductDimensions
        #server void initFromProductDimensions(InventDim _inventDim = this.inventDim())
        #{
        #    this.initName();
        #    this.initFromVendExternalItemDescription(_inventDim);
        #    this.initBarcode(_inventDim);
        #}
      ENDSOURCE
      SOURCE #initFromProjActivity
        #public void initFromProjActivity(ProjActivity _projActivity)
        #{
        #    if (!_projActivity || !_projActivity.CategoryDefault)
        #    {
        #        return;
        #    }
        #
        #    this.ProjCategoryId = _projActivity.CategoryDefault;
        #}
      ENDSOURCE
      SOURCE #initFromProjTable
        #void initFromProjTable(ProjTable projTable, boolean updateSalesPriceOnly = false)
        #{
        #    PriceMarkup     markUpDummy;
        #    PriceUnit       salesUnitDummy;
        #
        #    if (!updateSalesPriceOnly)
        #    {
        #        this.ProjSalesCurrencyId    = projTable.currencyId();
        #        this.ProjLinePropertyId     = ProjLinePropertySetup::findLinePropertyId(this.ProjId,this.ProjCategoryId);
        #        this.ProjTaxGroupId         = ProjParameters::taxGroupInvoice(this.ProjId);
        #        this.ProjTaxItemGroupId     = ProjParameters::taxItemGroupItem(this.ProjCategoryId,this.ItemId);
        #    }
        #
        #    if (projTable.Type == ProjType::Internal)
        #    {
        #        this.ProjSalesPrice     = 0;
        #    }
        #    else
        #    {
        #        [this.ProjSalesPrice,
        #         salesUnitDummy,
        #         markUpDummy]   = this.inventTable().salesPriceAgreement(
        #                                (this.ConfirmedDlv ? this.ConfirmedDlv : this.DeliveryDate),
        #                                this.inventDim(),
        #                                this.PurchQty,
        #                                this.inventTable().inventUnitId(),
        #                                projTable.CustAccount,
        #                                this.ProjSalesCurrencyId ? this.ProjSalesCurrencyId : projTable.currencyId(),
        #                                ProjTable::findPriceGroup(projTable.ProjId));
        #    }
        #
        #    this.Scrap                  = NoYes::Yes;
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)))
        #    {
        #        this.IsPwp                  = this.psaGetPWPSetting();
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromPurchLine
        #/// <summary>
        #///    Initializes a <c>PurchLine</c> table buffer based on another <c>PurchLine</c> table buffer.
        #/// </summary>
        #/// <param name="_purchLine">
        #///    The <c>PurchLine</c> table buffer that is to be copied.
        #/// </param>
        #/// <param name="_copyPrecisely">
        #///    A Boolean value that specifies whether to precisely copy all the account and tax details; optional.
        #/// </param>
        #/// <param name="_copyPriceDisc">
        #///    A Boolean value that specifies whether to copy the price discount fields; optional.
        #/// </param>
        #/// <param name="_copyQty">
        #///    A Boolean value that specifies whether to copy the quantify information; optional.
        #/// </param>
        #/// <param name="_copyProject">
        #///    A Boolean value that specifies whether to copy the project information; optional.
        #/// </param>
        #/// <param name="_qty">
        #///    A <c>quantity</c> object that sets the <c>PurchQty</c> field value of the new <c>PurchLine</c>
        #///    table buffer to be different than value of the other table buffer; optional.
        #/// </param>
        #/// <param name="_cwQty">
        #///    A catch weight quantity object that sets the <c>PdsCWQtyy</c> field value of the new <c>purchLine</c>
        #///    table buffer to be different than value of the other table buffer; optional.
        #/// </param>
        #/// <param name="_setAddressFromInventDim">
        #///     Boolean value that specifies whether to retrieve the address from the inventory dimension; optional.
        #/// </param>
        #void  initFromPurchLine(
        #    PurchLine       _purchLine,
        #    boolean         _copyPrecisely              = true,
        #    boolean         _copyPriceDisc              = true,
        #    boolean         _copyQty                    = true,
        #    boolean         _copyProject                = false,
        #    Qty             _qty                        = _purchLine.PurchQty,
        #    PdsCWInventQty  _cwQty                      = _purchLine.PdsCWQty,
        #    boolean         _setAddressFromInventDim    = true)
        #{
        #    #ISOCountryRegionCodes
        #    InventDim   inventDim;
        #    // <GEERU>
        #    PurchLine_W     toPurchLine_W;
        #    PurchLine_W     fromPurchLine_W;
        #    // </GEERU>
        #
        #    this.initFromItemOrCategory(_purchLine.ItemId, _purchLine.ProcurementCategory, _purchLine.Name, !_copyPriceDisc, false);
        #
        #    this.CreateFixedAsset     = _purchLine.CreateFixedAsset;
        #    this.AssetGroup           = _purchLine.AssetGroup;
        #    this.AssetId              = _purchLine.AssetId;
        #    this.AssetBookId          = _purchLine.AssetBookId;
        #    this.AssetTransTypePurch  = _purchLine.AssetTransTypePurch;
        #
        #    if (_copyQty)
        #    {
        #        this.setInventDimId(_purchLine.InventDimId);
        #        this.PurchQty           = _qty;
        #        this.PurchUnit          = _purchLine.PurchUnit;
        #        this.QtyOrdered         = _purchLine.PurchQty == _qty ? _purchLine.QtyOrdered : this.calcQtyOrdered();
        #
        #        this.PdsCWQty           = _cwQty;
        #    }
        #    else
        #    {
        #        if (this.isCategoryBased())
        #        {
        #            this.setInventDimId(_purchLine.InventDimId);
        #            this.PurchUnit          = _purchLine.PurchUnit;
        #        }
        #        else
        #        {
        #            inventDim               = this.inventDim();
        #            EcoResProductDimGroupSetup::copyProductDimensionsForItem(this.ItemId, _purchLine.inventDim(), inventDim);
        #            this.setInventDimIdFromInventDim(inventDim);
        #        }
        #    }
        #
        #    if (_copyPriceDisc)
        #    {
        #        this.PurchPrice         = _purchLine.PurchPrice;
        #        this.PriceUnit          = _purchLine.PriceUnit;
        #        this.LinePercent        = _purchLine.LinePercent;
        #        this.LineDisc           = _purchLine.LineDisc;
        #        this.MultiLnDisc        = _purchLine.MultiLnDisc;
        #        this.MultiLnPercent     = _purchLine.MultiLnPercent;
        #        this.PurchMarkup        = _purchLine.PurchMarkup;
        #        this.LineAmount         = _purchLine.LineAmount;
        #        this.DiscAmount         = _purchLine.DiscAmount;
        #        this.DiscPercent        = _purchLine.DiscPercent;
        #
        #        this.pdsCalculationId   = _purchLine.pdsCalculationId;
        #    }
        #
        #    if (_copyPrecisely)
        #    {
        #        this.setInventDimId(_purchLine.InventDimId);
        #        this.Name               = _purchLine.Name;
        #        this.ExternalItemId     = _purchLine.ExternalItemId;
        #        this.LedgerDimension    = _purchLine.LedgerDimension;
        #        this.Blocked            = _purchLine.Blocked;
        #        this.Complete           = _purchLine.Complete;
        #        this.TaxGroup           = _purchLine.TaxGroup;
        #        this.TaxItemGroup       = _purchLine.TaxItemGroup;
        #        this.DefaultDimension   = _purchLine.DefaultDimension;
        #        this.OverDeliveryPct    = _purchLine.OverDeliveryPct;
        #        this.UnderDeliveryPct   = _purchLine.UnderDeliveryPct;
        #        this.Transport          = _purchLine.Transport;
        #        this.Port               = _purchLine.Port;
        #        this.StatProcId         = _purchLine.StatProcId;
        #        this.AccountingDistributionTemplate = _purchLine.AccountingDistributionTemplate;
        #        // <GEERU>
        #        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #        {
        #            fromPurchLine_W = _purchLine.purchLine_W();
        #            toPurchLine_W   = this.purchLine_W();
        #            toPurchLine_W.PostingProfile_RU     = fromPurchLine_W.PostingProfile_RU;
        #            toPurchLine_W.MarkupCode_RU         = fromPurchLine_W.MarkupCode_RU;
        #            this.packPurchLine_W(toPurchLine_W);
        #        }
        #        // </GEERU>
        #
        #        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoUS]) && this.purchTable().vendTable_InvoiceAccount().Tax1099Reports)
        #        {
        #            this.Tax1099Fields      = _purchLine.Tax1099Fields;
        #            this.Tax1099Amount      = _purchLine.Tax1099Amount;
        #            this.Tax1099State       = _purchLine.Tax1099State;
        #            this.Tax1099StateAmount = _purchLine.Tax1099StateAmount;
        #        }
        #
        #        this.setAddressFromPurchLine(_purchLine);
        #
        #        // <GBR>
        #        if (BrazilParameters::isEnabled())
        #        {
        #            this.cfopTable_BR        = _purchLine.cfopTable_BR;
        #            this.type().updateFiscalDocumentText_BR(FiscalDocumentTextType_BR::CFOP);
        #        }
        #        // </GBR>
        #
        #    }
        #    else
        #    {
        #        if (_setAddressFromInventDim)
        #        {
        #            this.setAddressFromInventDim(this.inventDim());
        #        }
        #    }
        #
        #    if (_copyProject)
        #    {
        #        this.ProjId             = _purchLine.ProjId;
        #        this.ActivityNumber     = _purchLine.ActivityNumber;
        #        this.ProjCategoryId     = _purchLine.ProjCategoryId;
        #        this.ProjLinePropertyId = _purchLine.ProjLinePropertyId;
        #        this.ProjSalesCurrencyId= _purchLine.ProjSalesCurrencyId;
        #        this.ProjSalesUnitId    = _purchLine.ProjSalesUnitId;
        #        this.ProjSalesPrice     = _purchLine.ProjSalesPrice;
        #        this.ProjTaxGroupId     = _purchLine.ProjTaxGroupId;
        #        this.ProjTaxItemGroupId = _purchLine.ProjTaxItemGroupId;
        #    }
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        #    {
        #        this.VariantId             = _purchLine.VariantId;
        #    }
        #
        #    // <GIN>
        #    if (TaxParameters::checkTaxParameters_IN() || TaxWithholdParameters_IN::checkTaxParameters())
        #    {
        #        this.initFromPurchLine_IN(_purchLine);
        #    }
        #    // </GIN>
        #}
      ENDSOURCE
      SOURCE #initFromPurchLine_IN
        #/// <summary>
        #/// Initializes the fields of <c> PurchLine </c> from given <c> PurchLine </c> buffer.
        #/// </summary>
        #/// <param name="_purchLine">
        #/// Buffer of <c> PurchLine </c>.
        #/// </param>
        #// <GIN>
        #public void initFromPurchLine_IN(PurchLine _purchLine)
        #{
        #    PurchLine_IN    purchLineFrom_IN    = _purchLine.purchLine_IN();
        #    PurchLine_IN    purchLineTo_IN      = this.purchLine_IN();
        #
        #    purchLineTo_IN.CompanyLocation_IN   = purchLineFrom_IN.CompanyLocation_IN;
        #    purchLineTo_IN.TaxInformation_IN    = purchLineFrom_IN.TaxInformation_IN;
        #    purchLineTo_IN.VendorLocation_IN    = purchLineFrom_IN.VendorLocation_IN;
        #
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        purchLineTo_IN.AssessableValue_IN         = purchLineFrom_IN.AssessableValue_IN;
        #        purchLineTo_IN.MaximumRetailPrice_IN      = purchLineFrom_IN.MaximumRetailPrice_IN;
        #        purchLineTo_IN.vatGoodsType_IN            = purchLineFrom_IN.vatGoodsType_IN;
        #        purchLineTo_IN.NonRecoverablePercent_IN   = purchLineFrom_IN.NonRecoverablePercent_IN;
        #        purchLineTo_IN.ExciseTariffCodes_IN       = purchLineFrom_IN.ExciseTariffCodes_IN;
        #        purchLineTo_IN.CustomsTariffCodeTable_IN  = purchLineFrom_IN.CustomsTariffCodeTable_IN;
        #        purchLineTo_IN.ServiceCodeTable_IN        = purchLineFrom_IN.ServiceCodeTable_IN;
        #        purchLineTo_IN.ExciseRecordType_IN        = purchLineFrom_IN.ExciseRecordType_IN;
        #        purchLineTo_IN.ExciseType_IN              = purchLineFrom_IN.ExciseType_IN;
        #        purchLineTo_IN.gtaServiceCategory_IN      = purchLineFrom_IN.gtaServiceCategory_IN;
        #
        #        if (TaxParameters::checkParameterForPosting_IN(TaxType_IN::Customs) &&
        #            _purchLine.purchTable().purchTable_W().CustomsImportOrder_IN &&
        #            this.purchTable().purchTable_W().CustomsImportOrder_IN)
        #        {
        #            purchLineTo_IN.CustomsMaxRetailPrice_IN   = purchLineFrom_IN.CustomsMaxRetailPrice_IN;
        #            purchLineTo_IN.MaximumRetailPrice_IN      = Currency::customsCurAmount_IN(purchLineFrom_IN.CustomsMaxRetailPrice_IN,
        #                                                                            _purchLine.CurrencyCode,
        #                                                                            Direction_IN::Import);
        #        }
        #        purchLineTo_IN.IsRecoverableServiceTax_IN     = purchLineFrom_IN.IsRecoverableServiceTax_IN;
        #        purchLineTo_IN.SalesTaxFormTypes_IN  = purchLineFrom_IN.SalesTaxFormTypes_IN;
        #    }
        #    if (TaxWithholdParameters_IN::checkTaxParameters())
        #    {
        #        purchLineTo_IN.tdsGroup_IN                    = purchLineFrom_IN.tdsGroup_IN;
        #        purchLineTo_IN.tcsGroup_IN                    = purchLineFrom_IN.tcsGroup_IN;
        #    }
        #
        #    this.packPurchLine_IN(purchLineTo_IN);
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #initFromPurchLineHistory
        #/// <summary>
        #/// Initializes the history record that is based on a <c>PurchLineHistory</c> record.
        #/// </summary>
        #/// <param name="_purchLineHistory">
        #/// A <c>PurchLineHistory</c> record on which to base initialization.
        #/// </param>
        #public void initFromPurchLineHistory(PurchLineHistory _purchLineHistory)
        #{
        #    PurchLineMap purchLineMap;
        #    PurchLineMap_W          purchLineMap_W;
        #    PurchLine_W             purchLine_W;
        #    // <GIN>
        #    PurchLineMap_IN         purchLineMap_IN;
        #    PurchLine_IN            purchLine_IN;
        #    // </GIN>
        #
        #    purchLineMap.data(_purchLineHistory.data());
        #    this.data(purchLineMap.data());
        #
        #    // <GIN>
        #    if (PurchLine_IN::isExtensionEnabled())
        #    {
        #        purchLineMap_IN.data(_purchLineHistory.purchLineHistory_IN());
        #        purchLine_IN.data(purchLineMap_IN.data());
        #        this.SysExtensionSerializerMap::packExtensionTable(purchLine_IN);
        #    }
        #    // </GIN>
        #    if (PurchLine_W::isExtensionEnabled())
        #    {
        #        purchLineMap_W.data(_purchLineHistory.purchLineHistory_W());
        #        purchLine_W.data(purchLineMap_W.data());
        #        this.SysExtensionSerializerMap::packExtensionTable(purchLine_W);
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromPurchParmLine_Asset
        #/// <summary>
        #/// Sets the asset-related field values of the <c>PurchLine</c> table.
        #/// </summary>
        #/// <param name="_parmLine_Asset">
        #/// A <c>PurchParmLine_Asset</c> or <c>VendInvoiceInfoLine_Asset</c> table buffer which will be used to
        #/// set the asset-related field values of the <c>PurchLine</c> table.
        #/// </param>
        #client server void initFromPurchParmLine_Asset(VendDocumentLineAssetMap _parmLine_Asset)
        #{
        #    if  (_parmLine_Asset.CreateFixedAsset == NoYes::Yes)
        #    {
        #        if (AssetParameters::find().AssetAllowCreate)
        #        {
        #            this.CreateFixedAsset    = _parmLine_Asset.CreateFixedAsset;
        #            this.AssetGroup          = _parmLine_Asset.AssetGroup;
        #        }
        #        else
        #        {
        #            this.CreateFixedAsset =  NoYes::No;
        #            this.AssetGroup       = '';
        #        }
        #    }
        #    else
        #    {
        #        this.AssetGroup          = '';
        #        this.CreateFixedAsset    = _parmLine_Asset.CreateFixedAsset;
        #    }
        #
        #    this.AssetId             = _parmLine_Asset.AssetId;
        #    this.AssetBookId         = _parmLine_Asset.AssetBookId;
        #    this.AssetTransTypePurch = _parmLine_Asset.AssetTransTypePurch;
        #}
      ENDSOURCE
      SOURCE #initFromPurchRFQLine
        #/// <summary>
        #///    Initializes the <c>PurchLine</c> record from the <c>PurchRFQLine</c> record.
        #/// </summary>
        #/// <param name="_purchRFQLine">
        #///    The <c>PurchRFQLine</c> record from which to initialize the <c>PurchLine</c> record.
        #/// </param>
        #void initFromPurchRFQLine(PurchRFQLine _purchRFQLine)
        #{
        #    // <GIN>
        #    PurchLine_IN        purchLine_IN;
        #    // </GIN>
        #
        #    this.ItemId                     = _purchRFQLine.ItemId;
        #    this.ProcurementCategory        = EcoResProductCategory::findByItemIdCategoryHierarchyRole(
        #                                            _purchRFQLine.ItemId,
        #                                            EcoResCategoryNamedHierarchyRole::Procurement).Category;
        #    this.DeliveryDate               = _purchRFQLine.DeliveryDate;
        #    this.QtyOrdered                 = _purchRFQLine.QtyOrdered;
        #    this.PurchUnit                  = _purchRFQLine.PurchUnit;
        #    this.LineDisc                   = _purchRFQLine.LineDisc;
        #    this.LinePercent                = _purchRFQLine.LinePercent;
        #    this.LineAmount                 = _purchRFQLine.LineAmount;
        #    this.setInventDimId(_purchRFQLine.InventDimId);
        #    this.Name                       = _purchRFQLine.Name;
        #    this.ExternalItemId             = _purchRFQLine.ExternalItemId;
        #    this.DeliveryPostalAddress      = _purchRFQLine.DeliveryPostalAddress;
        #    this.AddressRefTableId          = _purchRFQLine.AddressRefTableId;
        #    this.AddressRefRecId            = _purchRFQLine.AddressRefRecId;
        #    this.DeliveryName               = _purchRFQLine.DeliveryName;
        #    this.MultiLnDisc                = _purchRFQLine.MultiLnDisc;
        #    this.MultiLnPercent             = _purchRFQLine.MultiLnPercent;
        #    this.PurchMarkup                = _purchRFQLine.PurchMarkup;
        #    this.ReqPOId                    = _purchRFQLine.ReqPOId;
        #    this.ReqPlanIdSched             = _purchRFQLine.ReqPlanIdSched;
        #    this.AssetId                    = _purchRFQLine.AssetId;
        #    this.AssetBookId                = _purchRFQLine.AssetBookId;
        #    this.AssetTransTypePurch        = _purchRFQLine.AssetTransTypePurch;
        #    this.PurchPrice                 = _purchRFQLine.PurchPrice;
        #    this.PurchQty                   = _purchRFQLine.PurchQty;
        #    this.DefaultDimension           = _purchRFQLine.DefaultDimension;
        #    this.TaxGroup                   = _purchRFQLine.TaxGroup;
        #    this.AddressRefRecId            = _purchRFQLine.AddressRefRecId;
        #    this.AddressRefTableId          = _purchRFQLine.AddressRefTableId;
        #    this.ConfirmedDlv               = _purchRFQLine.ConfirmedDlv;
        #    this.InventRefTransId           = _purchRFQLine.InventRefTransId;
        #    this.InventRefId                = _purchRFQLine.InventRefId;
        #    this.TaxItemGroup               = _purchRFQLine.TaxItemGroup;
        #
        #    this.PdsCWQty                   = _purchRFQLine.PdsCWQty;
        #    this.DiscAmount                 = this.discAmount();
        #    this.DiscPercent                = this.discPercent();
        #
        #    if (_purchRFQLine.ProjId)
        #    {
        #        this.ProjId                 = _purchRFQLine.ProjId;
        #        this.ActivityNumber         = _purchRFQLine.ActivityNumber;
        #        this.ProjCategoryId         = _purchRFQLine.ProjCategoryId;
        #        this.ProjLinePropertyId     = _purchRFQLine.ProjLinePropertyId;
        #        this.ProjSalesCurrencyId    = _purchRFQLine.ProjSalesCurrencyId;
        #        this.ProjSalesUnitId        = _purchRFQLine.ProjSalesUnitId;
        #        this.ProjSalesPrice         = _purchRFQLine.ProjSalesPrice;
        #        this.ProjTaxGroupId         = _purchRFQLine.ProjTaxGroupId;
        #        this.ProjTaxItemGroupId     = _purchRFQLine.ProjTaxItemGroupId;
        #        this.ProjTransId            = _purchRFQLine.ProjTransId;
        #    }
        #
        #    // <GBR>
        #    if (BrazilParameters::isEnabled())
        #    {
        #        this.cfopTable_BR           = _purchRFQLine.cfopTable_BR;
        #        this.TaxServiceCode_BR      = _purchRFQLine.TaxServiceCode_BR;
        #        this.type().updateFiscalDocumentText_BR(FiscalDocumentTextType_BR::CFOP);
        #    }
        #    // </GBR>
        #
        #    // <GIN>
        #    if(TaxParameters::checkTaxParameters_IN())
        #    {
        #        purchLine_IN = this.purchLine_IN();
        #        purchLine_IN.CompanyLocation_IN         = _purchRFQLine.CompanyLocation_IN;
        #        purchLine_IN.TaxInformation_IN          = PurchRFQLineTaxExtensionIN::findBypurchRFQLine(_purchRFQLine.RecId).TaxInformation_IN;
        #        purchLine_IN.CustomsTariffCodeTable_IN  = _purchRFQLine.CustomsTariffCodeTable_IN;
        #        purchLine_IN.ServiceCodeTable_IN        = _purchRFQLine.ServiceCodeTable_IN;
        #        purchLine_IN.gtaServiceCategory_IN      = _purchRFQLine.gtaServiceCategory_IN;
        #        purchLine_IN.ExciseTariffCodes_IN       = _purchRFQLine.ExciseTariffCodes_IN;
        #        purchLine_IN.ExciseRecordType_IN        = _purchRFQLine.ExciseRecordType_IN;
        #        purchLine_IN.ExciseType_IN              = _purchRFQLine.ExciseType_IN;
        #        purchLine_IN.SalesTaxFormTypes_IN       = _purchRFQLine.SalesTaxFormTypes_IN;
        #        purchLine_IN.vatGoodsType_IN            = _purchRFQLine.vatGoodsType_IN;
        #        purchLine_IN.dsa_in                     = _purchRFQLine.dsa_in;
        #        purchLine_IN.VendorLocation_IN          = PurchLine::getVendorLocationId_IN(_purchRFQLine.purchRFQTable().vendTable().Party);
        #
        #        this.packPurchLine_IN(purchLine_IN);
        #    }
        #    // </GIN>
        #}
      ENDSOURCE
      SOURCE #initFromPurchRFQReplyLine
        #void initFromPurchRFQReplyLine(PurchRFQReplyLine _purchRFQReplyLine)
        #{
        #    CompanyInfo             companyInfo;
        #    WorkCalendarSched       workCalendar;
        #    InventItemPurchSetup    itemPurchSetup;
        #    int                     leadTime;
        #    CalendarDays            calDays;
        #    // <GIN>
        #    PurchLine_IN            purchLine_IN;
        #    // </GIN>
        #
        #    this.DeliveryDate   = _purchRFQReplyLine.DeliveryDate;
        #    if (!this.DeliveryDate)
        #    {
        #        if (_purchRFQReplyLine.LeadTime > 0)
        #        {
        #            leadTime = _purchRFQReplyLine.LeadTime;
        #            calDays  = _purchRFQReplyLine.CalendarDays;
        #        }
        #        else
        #        {
        #            itemPurchSetup  = InventItemPurchSetup::find(PurchRFQLine::findRecId(_purchRFQReplyLine.rfqLineRecId).ItemId, this.InventDimId);
        #            leadTime        = itemPurchSetup.getLeadTime();
        #            calDays         = itemPurchSetup.calendarDays();
        #        }
        #
        #        if (leadTime > 0)
        #        {
        #            companyInfo       = CompanyInfo::find();
        #            workCalendar      = new WorkCalendarSched();
        #            this.DeliveryDate = workCalendar.schedDate(SchedDirection::Forward, systemDateGet(),
        #                                                leadTime, calDays, companyInfo.ShippingCalendarId);
        #        }
        #    }
        #    this.ConfirmedDlv   = _purchRFQReplyLine.DeliveryDate;
        #    this.PurchQty       = _purchRFQReplyLine.PurchQty;
        #    this.PurchUnit      = _purchRFQReplyLine.PurchUnit;
        #    this.PurchPrice     = _purchRFQReplyLine.PurchPrice;
        #    this.PriceUnit      = _purchRFQReplyLine.PriceUnit;
        #    this.LineDisc       = _purchRFQReplyLine.LineDisc;
        #    this.LinePercent    = _purchRFQReplyLine.LinePercent;
        #    this.LineAmount     = _purchRFQReplyLine.LineAmount;
        #    this.ExternalItemId = _purchRFQReplyLine.ExternalItemId;
        #    this.MultiLnDisc    = _purchRFQReplyLine.MultiLnDisc;
        #    this.MultiLnPercent = _purchRFQReplyLine.MultiLnPercent;
        #    this.PurchMarkup    = _purchRFQReplyLine.PurchMarkup;
        #    this.Name           = _purchRFQReplyLine.Name;
        #
        #    this.PdsCWQty       = _purchRFQReplyLine.PdsCWQty;
        #    this.DiscAmount     = this.discAmount();
        #    this.DiscPercent    = this.discPercent();
        #    // <GIN>
        #    if(TaxParameters::checkTaxParameters_IN())
        #    {
        #        purchLine_IN = this.purchLine_IN();
        #        purchLine_IN.MaximumRetailPrice_IN = _purchRFQReplyLine.MaximumRetailPrice_IN;
        #        this.packPurchLine_IN(purchLine_IN);
        #    }
        #    // </GIN>
        #}
      ENDSOURCE
      SOURCE #initFromPurchTable
        #server void  initFromPurchTable(PurchTable _purchTable, boolean _ignoreInventDim = false)
        #{
        #    this.PurchaseType = _purchTable.PurchaseType;
        #
        #    this.type(_purchTable).initFromPurchTable(_purchTable, _ignoreInventDim);
        #}
      ENDSOURCE
      SOURCE #initFromReqPO
        #/// <summary>
        #///     Initializes the <c>PurchLine</c> record from the <c>ReqPO</c> record.
        #/// </summary>
        #/// <param name="_reqPO">
        #///    The <c>ReqPO</c> record from which to initialize the <c>PurchLine</c> record.
        #/// </param>
        #void  initFromReqPO(ReqPO  _reqPO)
        #{
        #    this.ItemId                 = _reqPO.ItemId;
        #    this.ProcurementCategory    = EcoResProductCategory::findByItemIdCategoryHierarchyRole(
        #                                        _reqPO.ItemId,
        #                                        EcoResCategoryNamedHierarchyRole::Procurement).Category;
        #
        #    this.setInventDimId(_reqPO.CovInventDimId);
        #
        #    this.ReqPOId                = _reqPO.RefId;
        #    this.ReqPlanIdSched         = ReqPlanVersion::find(_reqPO.PlanVersion).ReqPlanId;
        #
        #    this.PurchQty               = _reqPO.PurchQty;
        #
        #    if (pdsIsCWItem(this.ItemId))
        #    {
        #        this.PdsCWQty                  = _reqPO.PdsCWReqQty;
        #        this.PdsCWRemainInventPhysical = _reqPO.PdsCWReqQty;
        #    }
        #
        #    this.RemainPurchPhysical    = _reqPO.PurchQty;
        #    this.PurchUnit              = _reqPO.PurchUnit;
        #
        #    this.QtyOrdered             = this.calcQtyOrdered();
        #    this.RemainInventPhysical   = this.QtyOrdered;
        #
        #    this.initName();
        #    this.initFromVendExternalItemDescription();
        #}
        #
      ENDSOURCE
      SOURCE #initFromSalesLine
        #/// <summary>
        #///    Initializes the <c>PurchLine</c> record from the <c>SalesLine</c> record.
        #/// </summary>
        #/// <param name="_salesLine">
        #///    The <c>SalesLine</c> record from which to initialize the <c>PurchLine</c> record.
        #/// </param>
        #void  initFromSalesLine(SalesLine _salesLine)
        #{
        #    SalesTable      salesTable;
        #    InventDim       inventDim = this.inventDim();
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)))
        #    {
        #        this.ActivityNumber = _salesLine.ActivityNumber;
        #    }
        #
        #    this.ItemId = _salesLine.ItemId;
        #    // SalesCategory cannot be used for purch so we look it up from the item
        #    this.ProcurementCategory = EcoResProductCategory::findByItemIdCategoryHierarchyRole(
        #                                    _salesLine.ItemId,
        #                                    EcoResCategoryNamedHierarchyRole::Procurement).Category;
        #    this.setStockedProduct();
        #    this.Name = _salesLine.Name;
        #
        #    inventDim.mergeUsedDim(InventDimGroupSetup::newItemId(this.ItemId), _salesLine.inventDim());
        #
        #    this.setAddressFromInventDim(inventDim);
        #
        #    this.setInventDimIdFromInventDim(inventDim);
        #
        #    this.InventRefId                = _salesLine.SalesId;
        #    this.InventRefTransId           = _salesLine.InventTransId;
        #    this.ItemRefType                = InventRefType::Sales;
        #
        #    if (this.isDropShipment())
        #    {
        #        salesTable = _salesLine.salesTable();
        #        this.CustomerRef                = salesTable.CustomerRef;
        #        this.CustPurchaseOrderFormNum   = salesTable.PurchOrderFormNum;
        #    }
        #
        #    this.ProjId = _salesLine.ProjId;
        #    this.ProjCategoryId = _salesLine.ProjCategoryId;
        #    if (this.ProjId && !_salesLine.ProjId)
        #    {
        #        this.Scrap = NoYes::No;
        #    }
        #
        #    // If no itemid, then keep the name from sales.
        #    if (this.ItemId)
        #    {
        #        this.initName();
        #        this.initFromVendExternalItemDescription();
        #    }
        #    // <GIN>
        #    if (TaxParameters::checkTaxParameters_IN() || TaxWithholdParameters_IN::checkTaxParameters())
        #    {
        #        this.initFromSalesLine_IN(_salesLine);
        #    }
        #    // </GIN>
        #}
      ENDSOURCE
      SOURCE #initFromSalesLine_IN
        #// <GIN>
        #void initFromSalesLine_IN(SalesLine _salesLine)
        #{
        #    PurchLine_IN    purchLine_IN = this.purchLine_IN();
        #    SalesLine_IN    salesLine_IN = _salesLine.salesLine_IN();
        #
        #    purchLine_IN.CompanyLocation_IN         = salesLine_IN.CompanyLocation_IN;
        #    purchLine_IN.TaxInformation_IN          = salesLine_IN.TaxInformation;
        #    purchLine_IN.ExciseTariffCodes_IN       = salesLine_IN.ExciseTariffCodes_IN;
        #    purchLine_IN.CustomsTariffCodeTable_IN  = salesLine_IN.CustomsTariffCodeTable_IN;
        #    purchLine_IN.ServiceCodeTable_IN        = salesLine_IN.ServiceCodeTable_IN;
        #    purchLine_IN.ExciseType_IN              = salesLine_IN.ExciseType_IN;
        #    purchLine_IN.ExciseRecordType_IN        = salesLine_IN.ExciseRecordType_IN;
        #
        #    this.packPurchLine_IN(purchLine_IN);
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #initFromTmpPurchLine
        #/// <summary>
        #///    Initiates a <c>PurchLine</c> record with values based on <c>TmpPurchLine</c> record.
        #/// </summary>
        #/// <param name="_tmpPurchLine">
        #///    A record of the table <c>TmpPurchLine</c>.
        #/// </param>
        #public void initFromTmpPurchLine(TmpPurchLine _tmpPurchLine)
        #{
        #    this.type().initFromTmpPurchLine(_tmpPurchLine);
        #}
        #
      ENDSOURCE
      SOURCE #initFromTmpPurchLinePrice
        #void initFromTmpPurchLinePrice(TmpPurchLinePrice _tmpPurchLinePrice)
        #{
        #    this.LineAmount     = _tmpPurchLinePrice.LineAmount;
        #    this.PurchPrice     = _tmpPurchLinePrice.Price;
        #
        #    this.LineDisc       = _tmpPurchLinePrice.LineDisc;
        #    this.LinePercent    = _tmpPurchLinePrice.LinePercent;
        #
        #    this.MultiLnDisc    = _tmpPurchLinePrice.MultiLineDisc;
        #    this.MultiLnPercent = _tmpPurchLinePrice.MultiLinePercent;
        #
        #    this.DiscAmount     = this.discAmount();
        #    this.DiscPercent    = this.discPercent();
        #
        #    this.PurchMarkup    = _tmpPurchLinePrice.Markup;
        #}
      ENDSOURCE
      SOURCE #initFromTmpSuppItem
        #void  initFromTmpSuppItem(TmpSuppItem _tmpSuppItem)
        #{
        #    InventDim               inventDim;
        #    this.ItemId             = _tmpSuppItem.ItemId;
        #    inventDim               = this.inventDim();
        #    inventDim.mergeUsedDim(InventDimGroupSetup::newItemId(this.ItemId), InventDim::find(_tmpSuppItem.InventDimId));
        #    this.setInventDimIdFromInventDim(inventDim);
        #
        #    this.initFromInventTable(this.inventTable());
        #    this.initFromVendExternalItemDescription();
        #
        #    this.PurchQty           = _tmpSuppItem.Qty;
        #    this.QtyOrdered         = this.calcQtyOrdered();
        #
        #    if (_tmpSuppItem.SuppItemFree)
        #    {
        #        this.PurchPrice     = 0.0;
        #        this.LinePercent    = 0.0;
        #        this.LineDisc       = 0.0;
        #        this.MultiLnDisc    = 0.0;
        #        this.MultiLnPercent = 0.0;
        #        this.PurchMarkup    = 0.0;
        #        this.DiscAmount     = 0.0;
        #        this.DiscPercent    = 0.0;
        #    }
        #
        #    this.LineAmount         = this.calcLineAmountForced();
        #}
      ENDSOURCE
      SOURCE #initFromVendExternalItemDescription
        #server void initFromVendExternalItemDescription(InventDim _inventDim = this.inventDim())
        #{
        #    VendExternalItemDescription vendExternalItemDescription = new VendExternalItemDescription(this.ItemId, _inventDim, this.purchTable().OrderAccount);
        #
        #    if (vendExternalItemDescription.findExternalDescription())
        #    {
        #        this.ExternalItemId = vendExternalItemDescription.externalItemId();
        #        if (vendExternalItemDescription.externalItemFreeTxt())
        #        {
        #            if (VendFormletterParameters::find().ExternalItemOverwriteAppend == OverwriteAppend::Overwrite)
        #            {
        #                this.Name =  vendExternalItemDescription.externalItemFreeTxt();
        #            }
        #            else
        #            {
        #                this.initName(this.inventTable());
        #                if (this.Name)
        #                {
        #                    this.Name += '\n';
        #                }
        #                this.Name += vendExternalItemDescription.externalItemFreeTxt();
        #            }
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromVendInvoice4PaymTrans_RU
        #public server void initFromVendInvoice4PaymTrans_RU(VendInvoice4PaymTrans_RU _vendInvoice4PaymTrans,
        #                                                    boolean                  _copyPrecisely = true,
        #                                                    boolean                  _copyPriceDisc = true,
        #                                                    boolean                  _copyQty       = true,
        #                                                    Qty                      _qty           = _vendInvoice4PaymTrans.Qty
        #                                                    , PdsCWInventQty         _pdsCWQty      = pdsIsCWItem(_vendInvoice4PaymTrans.ItemId) ? _vendInvoice4PaymTrans.PdsCWQty : 0
        #                                                    )
        #{
        #    InventDim inventDim;
        #
        #    this.initFromItemOrCategory(_vendInvoice4PaymTrans.ItemId, _vendInvoice4PaymTrans.Category, _vendInvoice4PaymTrans.Name);
        #
        #    if (_copyQty)
        #    {
        #        this.InventDimId    = _vendInvoice4PaymTrans.InventDimId;
        #        this.PurchQty       = _qty;
        #        this.PurchUnit      = _vendInvoice4PaymTrans.PurchUnit;
        #        this.PdsCWQty       = _pdsCWQty;
        #        this.QtyOrdered     = this.calcQtyOrdered();
        #    }
        #    else
        #    {
        #        inventDim           = this.inventDim();
        #        EcoResProductDimGroupSetup::copyProductDimensionsForItem(this.ItemId, _vendInvoice4PaymTrans.inventDim(), inventDim);
        #
        #        this.InventDimId    = InventDim::findOrCreate(inventDim).InventDimId;
        #    }
        #
        #    if (_copyPriceDisc)
        #    {
        #        this.PurchPrice     = _vendInvoice4PaymTrans.PurchPrice;
        #        this.PriceUnit      = _vendInvoice4PaymTrans.PriceUnit;
        #        this.LinePercent    = _vendInvoice4PaymTrans.LinePercent;
        #        this.LineDisc       = _vendInvoice4PaymTrans.LineDisc;
        #        this.MultiLnDisc    = _vendInvoice4PaymTrans.MultiLnDisc;
        #        this.MultiLnPercent = _vendInvoice4PaymTrans.MultiLnPercent;
        #        this.PurchMarkup    = _vendInvoice4PaymTrans.PurchMarkup;
        #        this.LineAmount     = _vendInvoice4PaymTrans.LineAmount;
        #    }
        #
        #    if (_copyPrecisely)
        #    {
        #        this.InventDimId      = _vendInvoice4PaymTrans.InventDimId;
        #        this.Name             = _vendInvoice4PaymTrans.Name;
        #        this.ExternalItemId   = _vendInvoice4PaymTrans.ExternalItemId;
        #        this.TaxGroup         = _vendInvoice4PaymTrans.TaxGroup;
        #        this.TaxItemGroup     = _vendInvoice4PaymTrans.TaxItemGroup;
        #        this.DefaultDimension = _vendInvoice4PaymTrans.DefaultDimension;
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromVendInvoiceTrans
        #/// <summary>
        #///    Initializes a <c>PurchLine</c> table buffer based on a packing invoice line.
        #/// </summary>
        #/// <param name="_vendInvoiceTrans">
        #///    The <c>VendInvoiceTrans</c> buffer to initialize from.
        #/// </param>
        #/// <param name="_copyPrecisely">
        #///    A Boolean value that specifies whether to precisely copy all details; optional.
        #/// </param>
        #/// <param name="_copyPriceDisc">
        #///    A Boolean value that specifies whether to copy the price discount fields; optional.
        #/// </param>
        #/// <param name="_copyQty">
        #///    A Boolean value that specifies whether to copy the quantity information; optional.
        #/// </param>
        #/// <param name="_qty">
        #///    A quantity which overrides the <c>PurchQty</c> field value of the new <c>PurchLine</c>
        #///    buffer to be different than value of the other table buffer; optional.
        #/// </param>
        #/// <param name="_pdsCWQty">
        #///    A catch weight quantity which overrides the <c>PdsCWQty</c> field value of the new <c>PurchLine</c>
        #///    buffer to be different than the value of the other table buffer; optional.
        #/// </param>
        #server void  initFromVendInvoiceTrans(VendInvoiceTrans  _vendInvoiceTrans,
        #                                      boolean           _copyPrecisely = true,
        #                                      boolean           _copyPriceDisc = true,
        #                                      boolean           _copyQty       = true,
        #                                      Qty               _qty           = _vendInvoiceTrans.Qty
        #                                      ,PdsCWInventQty   _pdsCWQty      = pdsIsCWItem(_vendInvoiceTrans.ItemId) ? _vendInvoiceTrans.PdsCWQty : 0
        #                                    )
        #{
        #    InventDim   inventDim;
        #
        #    // <GEERU>
        #    PurchLine_W     purchLine_W;
        #    #isoCountryRegionCodes
        #    // </GEERU>
        #
        #    this.initFromItemOrCategory(_vendInvoiceTrans.ItemId, _vendInvoiceTrans.ProcurementCategory, _vendInvoiceTrans.Name);
        #
        #    if (_copyQty)
        #    {
        #        this.setInventDimId(_vendInvoiceTrans.InventDimId);
        #        this.PurchQty           = _qty;
        #        this.PurchUnit          = _vendInvoiceTrans.PurchUnit;
        #        this.QtyOrdered         = _vendInvoiceTrans.Qty == _qty ? _vendInvoiceTrans.InventQty : this.calcQtyOrdered();
        #
        #        this.PdsCWQty           = _pdsCWQty;
        #    }
        #    else
        #    {
        #        if (this.isCategoryBased())
        #        {
        #            this.setInventDimId(_vendInvoiceTrans.InventDimId);
        #        }
        #        else
        #        {
        #            inventDim               = this.inventDim();
        #            EcoResProductDimGroupSetup::copyProductDimensionsForItem(this.ItemId, _vendInvoiceTrans.inventDim(), inventDim);
        #            this.setInventDimIdFromInventDim(inventDim);
        #        }
        #    }
        #
        #    if (_copyPriceDisc)
        #    {
        #        this.PurchPrice         = _vendInvoiceTrans.PurchPrice;
        #        this.PriceUnit          = _vendInvoiceTrans.PriceUnit;
        #        this.LinePercent        = _vendInvoiceTrans.LinePercent;
        #        this.LineDisc           = _vendInvoiceTrans.LineDisc;
        #        this.MultiLnDisc        = _vendInvoiceTrans.MultiLnDisc;
        #        this.MultiLnPercent     = _vendInvoiceTrans.MultiLnPercent;
        #        this.PurchMarkup        = _vendInvoiceTrans.PurchMarkup;
        #        this.LineAmount         = _vendInvoiceTrans.LineAmount;
        #        this.DiscAmount         = this.discAmount();
        #        this.DiscPercent        = this.discPercent();
        #    }
        #
        #    if (_copyPrecisely)
        #    {
        #        this.setInventDimId(_vendInvoiceTrans.InventDimId);
        #        this.Name               = _vendInvoiceTrans.Name;
        #        this.ExternalItemId     = _vendInvoiceTrans.ExternalItemId;
        #        this.LedgerDimension    = _vendInvoiceTrans.LedgerDimension;
        #        this.TaxGroup           = _vendInvoiceTrans.TaxGroup;
        #        this.TaxItemGroup       = _vendInvoiceTrans.TaxItemGroup;
        #        this.DefaultDimension   = _vendInvoiceTrans.DefaultDimension;
        #        this.StatProcId         = _vendInvoiceTrans.StatProcId;
        #        this.Transport          = _vendInvoiceTrans.Transport;
        #        this.Port               = _vendInvoiceTrans.Port;
        #        this.StatProcId         = _vendInvoiceTrans.StatProcId;
        #    }
        #
        #    // <GIN>
        #    if (TaxParameters::checkTaxParameters_IN() || TaxWithholdParameters_IN::checkTaxParameters())
        #    {
        #        this.initFromVendInvoiceTrans_IN(_vendInvoiceTrans, _qty);
        #    }
        #    // </GIN>
        #
        #
        #    this.setAddressFromInventDim(this.inventDim()
        #    , !_copyPrecisely
        #    );
        #    // <GEERU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        purchLine_W = this.purchLine_W();
        #        purchLine_W.MarkupCode_RU          = _vendInvoiceTrans.MarkupCode_RU;
        #        this.packPurchLine_W(purchLine_W);
        #    }
        #    // </GEERU>
        #}
      ENDSOURCE
      SOURCE #initFromVendInvoiceTrans_IN
        #/// <summary>
        #/// Reads the table buffer and initialize the field of current table.
        #/// </summary>
        #/// <param name="_vendInvoiceTrans">
        #/// The table buffer is used to find the record.
        #/// </param>
        #/// <param name="_qty">
        #/// The value is set.
        #/// </param>
        #// <GIN>
        #private void initFromVendInvoiceTrans_IN(VendInvoiceTrans  _vendInvoiceTrans, Qty _qty)
        #{
        #    PurchLine       purchLineLoc;
        #    VendInvoiceJour vendInvoiceJourLoc;
        #    RealBase        factor;
        #    PurchLine_IN    purchLine_IN = this.purchLine_IN();
        #
        #    purchLine_IN.tdsGroup_IN                = _vendInvoiceTrans.tdsGroup_IN;
        #    purchLine_IN.tcsGroup_IN                = _vendInvoiceTrans.tcsGroup_IN;
        #    purchLine_IN.CreditNoteDate_IN          = _vendInvoiceTrans.InvoiceDate;
        #    purchLine_IN.CompanyLocation_IN         = _vendInvoiceTrans.CompanyLocation_IN;
        #    purchLine_IN.TaxInformation_IN          = VendInvoiceTransTaxExtensionIN::findByVendInvoiceTrans(_vendInvoiceTrans.RecId).TaxInformation_IN;
        #    purchLine_IN.TaxWithholdLineNum_IN      = _vendInvoiceTrans.LineNum;
        #    purchLine_IN.gtaServiceCategory_IN      = _vendInvoiceTrans.gtaServiceCategory_IN;
        #    purchLine_IN.ExciseRecordType_IN        = _vendInvoiceTrans.ExciseRecordType_IN;
        #    purchLine_IN.ExciseType_IN              = _vendInvoiceTrans.ExciseType_IN;
        #    purchLine_IN.ExciseTariffCodes_IN       = _vendInvoiceTrans.ExciseTariffCodes_IN;
        #    purchLine_IN.CustomsTariffCodeTable_IN  = _vendInvoiceTrans.CustomsTariffCodeTable_IN;
        #    purchLine_IN.VendorLocation_IN          = _vendInvoiceTrans.VendorLocation_IN;
        #    purchLine_IN.AssessableValue_IN         = _vendInvoiceTrans.AssessableValue_IN;
        #    purchLine_IN.MaximumRetailPrice_IN      = _vendInvoiceTrans.MaximumRetailPrice_IN;
        #    purchLine_IN.vatGoodsType_IN            = _vendInvoiceTrans.vatGoodsType_IN;
        #    purchLine_IN.NonRecoverablePercent_IN   = _vendInvoiceTrans.NonRecoverablePercent_IN;
        #    purchLine_IN.SalesTaxFormTypes_IN       = _vendInvoiceTrans.SalesTaxFormTypes_IN;
        #    purchLine_IN.dsa_in                     = _vendInvoiceTrans.dsa_in;
        #
        #    vendInvoiceJourLoc = _vendInvoiceTrans.vendInvoiceJour();
        #
        #    if (vendInvoiceJourLoc)
        #    {
        #        purchLine_IN.TaxWithholdVoucher_IN = vendInvoiceJourLoc.LedgerVoucher;
        #    }
        #
        #    purchLineLoc = PurchLine::findInventTransId(_vendInvoiceTrans.InventTransId);
        #
        #    if (TaxParameters::checkParameterForPosting_IN(TaxType_IN::Customs) &&
        #        purchLineLoc.purchTable().purchTable_W().CustomsImportOrder_IN &&
        #        this.purchTable().purchTable_W().CustomsImportOrder_IN)
        #    {
        #        purchLine_IN.CustomsMaxRetailPrice_IN   = purchLineLoc.purchLine_IN().CustomsMaxRetailPrice_IN;
        #        purchLine_IN.MaximumRetailPrice_IN      = Currency::customsCurAmount_IN(purchLine_IN.CustomsMaxRetailPrice_IN, purchLineLoc.CurrencyCode, Direction_IN::Import);
        #    }
        #
        #    if (_vendInvoiceTrans.Qty != _qty)
        #    {
        #        factor = _vendInvoiceTrans.AssessableValue_IN / _vendInvoiceTrans.Qty;
        #        purchLine_IN.AssessableValue_IN = factor * _qty;
        #    }
        #    else
        #    {
        #        purchLine_IN.AssessableValue_IN = _vendInvoiceTrans.AssessableValue_IN;
        #    }
        #
        #    this.packPurchLine_IN(purchLine_IN);
        #}
        #// </GIN>
        #
      ENDSOURCE
      SOURCE #initFromVendPackingSlipTrans
        #/// <summary>
        #///    Initializes a <c>PurchLine</c> table buffer based on a packing slip line.
        #/// </summary>
        #/// <param name="_vendPackingSlipTrans">
        #///    The <c>VendPackingSlipTrans</c> buffer to initialize from.
        #/// </param>
        #/// <param name="_copyPrecisely">
        #///    A Boolean value that specifies whether to precisely copy all details.
        #/// </param>
        #/// <param name="_copyPriceDisc">
        #///    A Boolean value that specifies whether to copy the price discount fields.
        #/// </param>
        #/// <param name="_copyQty">
        #///    A Boolean value that specifies whether to copy the quantity information.
        #/// </param>
        #/// <param name="_qty">
        #///    A quantity which overrides the <c>PurchQty</c> field value of the new <c>PurchLine</c>
        #///    buffer to be different than value of the other table buffer.
        #/// </param>
        #/// <param name="_cwQty">
        #///    A catch weight quantity which is used to set the value of the <c>PurchLine</c> catch weight quantity field.
        #/// </param>
        #server void  initFromVendPackingSlipTrans(VendPackingSlipTrans          _vendPackingSlipTrans,
        #                                          boolean                       _copyPrecisely,
        #                                          boolean                       _copyPriceDisc,
        #                                          boolean                       _copyQty,
        #                                          Qty                           _qty
        #                                          , PdsCWInventQty              _cwQty  = #PdsCatchWeightEnabled ? _vendPackingSlipTrans.PdsCWQty: 0
        #                                          )
        #{
        #    InventDim                   inventDim;
        #
        #    this.initFromItemOrCategory(_vendPackingSlipTrans.ItemId, _vendPackingSlipTrans.ProcurementCategory, _vendPackingSlipTrans.Name);
        #
        #    if (_copyQty)
        #    {
        #        this.setInventDimId(_vendPackingSlipTrans.InventDimId);
        #        this.PurchQty           = _qty;
        #        this.PurchUnit          = _vendPackingSlipTrans.PurchUnit;
        #        this.QtyOrdered         = _vendPackingSlipTrans.Qty == _qty ? _vendPackingSlipTrans.InventQty : this.calcQtyOrdered();
        #
        #        this.PdsCWQty           = _cwQty;
        #
        #    }
        #    else
        #    {
        #        if (this.isCategoryBased())
        #        {
        #            this.setInventDimId(_vendPackingSlipTrans.InventDimId);
        #        }
        #        else
        #        {
        #            inventDim               = this.inventDim();
        #            EcoResProductDimGroupSetup::copyProductDimensionsForItem(this.ItemId, _vendPackingSlipTrans.inventDim(), inventDim);
        #            this.setInventDimIdFromInventDim(inventDim);
        #        }
        #    }
        #
        #    if (_copyPrecisely)
        #    {
        #        this.Name               = _vendPackingSlipTrans.Name;
        #        this.ExternalItemId     = _vendPackingSlipTrans.ExternalItemId;
        #        this.DefaultDimension   = _vendPackingSlipTrans.DefaultDimension;
        #        this.Transport          = _vendPackingSlipTrans.Transport;
        #        this.Port               = _vendPackingSlipTrans.Port;
        #        this.StatProcId         = _vendPackingSlipTrans.StatProcId;
        #        this.AccountingDistributionTemplate = _vendPackingSlipTrans.purchLine().AccountingDistributionTemplate;
        #    }
        #    this.setAddressFromInventDim(this.inventDim());
        #}
        #
      ENDSOURCE
      SOURCE #initFromVendTable
        #/// <summary>
        #///    Initializes the <c>PurchLine</c> record from the <c>VendTable</c> record.
        #/// </summary>
        #/// <param name="_vendTable">
        #///    The <c>VendTable</c> record from which to initialize the <c>PurchLine</c> record; optional.
        #/// </param>
        #void initFromVendTable (VendTable _vendTable = VendTable::find(this.VendAccount))
        #{
        #    // <GIN>
        #    DirPartyLocation        dirPartyLocation;
        #    PurchLine_IN            purchLine_IN;
        #
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        select firstonly Location from dirPartyLocation
        #            where dirPartyLocation.Party == _vendTable.Party;
        #
        #        purchLine_IN = this.purchLine_IN();
        #        purchLine_IN.VendorLocation_IN    = LogisticsLocation::find(dirPartyLocation.Location).RecId;
        #        this.packPurchLine_IN(purchLine_IN);
        #    }
        #    // </GIN>
        #    #ISOCountryRegionCodes
        #
        #    this.Tax1099Fields = _vendTable.Tax1099Fields;
        #    if (_vendTable
        #        && _vendTable.TaxWithholdCalculate == NoYes::Yes
        #        && (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoTH, #isoSA, #isoGB, #isoIE]) || BrazilParameters::isEnabled()))
        #    {
        #        this.TaxWithholdGroup_TH = _vendTable.TaxWithholdGroup;
        #    }
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
        #    {
        #        this.OperationType_MX = _vendTable.OperationType_MX;
        #    }
        #}
      ENDSOURCE
      SOURCE #initName
        #void initName(InventTable inventTable = this.inventTable(), EcoResCategoryId _procurementCategory = this.ProcurementCategory)
        #{
        #    this.Name = PurchParameters::nameAndOrDescription(inventTable, this.purchTable().LanguageId, this.InventDimId, EcoResCategory::find(_procurementCategory));
        #}
      ENDSOURCE
      SOURCE #initPurchQty
        #void  initPurchQty()
        #{
        #    PurchLineType  purchLineType;
        #
        #    purchLineType = this.type();
        #    purchLineType.initPurchQty();
        #}
      ENDSOURCE
      SOURCE #initValue
        #public void initValue(PurchaseType _purchaseType = this.PurchaseType)
        #{
        #    // <GIN>
        #    PurchLineView_IN    purchLineView_IN;
        #    // </GIN>
        #
        #    this.PurchaseType   = _purchaseType;
        #    this.WorkflowState  = TradeWorkflowState::NotSubmitted;
        #
        #    super();
        #
        #    this.type().initValue();
        #
        #    // <GIN>
        #    if (TaxParameters::checkTaxParameters_IN() || TaxWithholdParameters_IN::checkTaxParameters())
        #    {
        #        purchLineView_IN = this.purchLineView_IN();
        #        purchLineView_IN.SalesPurchJournalLine_IN::initFromCompanyInformation();
        #        purchLineView_IN.SalesPurchJournalLine_IN::initFromVendorInformation(this.VendAccount);
        #        purchLineView_IN.saveToPurchLine(this);
        #    }
        #    // </GIN>
        #}
      ENDSOURCE
      SOURCE #insert
        #public void  insert(
        #    boolean     dropInvent                      = false,
        #    boolean     findMarkup                      = true,
        #    boolean     updatePurchTableDistributions   = true,
        #    boolean     _skipPurchTableUpdate           = false,
        #    boolean     _skipInterCompanyCalcDisc       = false)
        #{
        #    PurchLineType purchLineType;
        #    WAXPurchLine  waxPurchLine;     // Warehousing for AX - Blue Horseshoe Solutions, Inc
        #
        #    purchLineType = this.type(this.purchTable(true));
        #    purchLineType.insert(dropInvent, findMarkup, updatePurchTableDistributions, _skipPurchTableUpdate, _skipInterCompanyCalcDisc);
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #    {
        #        this.Tax1099RecId = Tax1099BoxDetail::deleteOrClear1099Detail(Tax1099Fields::find(this.Tax1099Fields).Tax1099Box, this.Tax1099RecId);
        #        PurchTotalsSummaryController::onInsert(this);
        #    }
        #
        #    // Warehousing for AX - Blue Horseshoe Solutions, Inc
        #    // Begin Mod
        #    waxPurchLine.PurchId = this.PurchId;
        #    waxPurchLine.InventTransId = this.InventTransId;
        #    waxPurchLine.WAXQtyLeftToLoad = abs(this.PurchQty);
        #    waxPurchLine.insert();
        #
        #    if (this.PurchQty > 0 && ((WAXParameters::find().WAXAutoCreateLoadPO            &&
        #        WAXInventLocation::find(this.inventDim().InventLocationId).WAXWhseUsesWAX)  ||
        #        TRXParameters::find().TRXAutoCreateLoadPO))
        #    {
        #        WAXLoadLine::createLoad(this);
        #    }
        #    // End Mod
        #    // <GEEPL>
        #    PlSADPurchTable::puchLineAdded(this);
        #    // </GEEPL>
        #}
      ENDSOURCE
      SOURCE #interCompanyIsBeingUpdated
        #public boolean interCompanyIsBeingUpdated(boolean _showWarning = true)
        #{
        #    SalesLine           salesLine;
        #    InventTransOrigin   inventTransOrigin;
        #    InventTrans         inventTrans;
        #    PurchTable          purchTable = this.purchTable();
        #    boolean             ret = false;
        #
        #    if (this.RecId
        #    &&  purchTable.InterCompanyOrder
        #    &&  purchTable.InterCompanyCompanyId)
        #    {
        #        if (this.isStocked())
        #        {
        #            inventTransOrigin = null;
        #            select firstonly RecId from inventTransOrigin
        #                where inventTransOrigin.InventTransId == this.InventTransId
        #                exists join inventTrans
        #                   where inventTrans.InventTransOrigin   == inventTransOrigin.RecId
        #                   &&   (inventTrans.StatusReceipt       == StatusReceipt::Received
        #                     ||  inventTrans.StatusReceipt       == StatusReceipt::Registered
        #                     ||  inventTrans.StatusReceipt       == StatusReceipt::Arrived
        #                     ||  inventTrans.StatusIssue         == StatusIssue::Deducted
        #                     ||  inventTrans.StatusIssue         == StatusIssue::Picked
        #                     ||  inventTrans.TransChildType      != InventTransChildType::None);
        #
        #            if (inventTransOrigin.RecId)
        #            {
        #                ret = true;
        #                if (_showWarning)
        #                {
        #                    setPrefix(strFmt("@SYS93821",TradeInterCompany::curCompanyName()));
        #                    setPrefix(#PreFixField(purchTable, PurchId));
        #                    checkFailed("@SYS93839");
        #                }
        #            }
        #            else
        #            {
        #                if (this.PurchStatus != PurchStatus::Invoiced)
        #                {
        #                    select TableId from inventTransOrigin
        #                        where inventTransOrigin.InventTransId == this.InventTransId
        #                        join sum(Qty) from inventTrans
        #                            where inventTrans.InventTransOrigin == inventTransOrigin.RecId
        #                            &&   (inventTrans.StatusReceipt     == StatusReceipt::Purchased
        #                               || inventTrans.StatusIssue       == StatusIssue::Sold);
        #
        #                    if (inventTrans.Qty != 0)
        #                    {
        #                        ret = true;
        #                        if (_showWarning)
        #                        {
        #                            setPrefix(strFmt("@SYS93821",TradeInterCompany::curCompanyName()));
        #                            setPrefix(#PreFixField(purchTable, PurchId));
        #                            checkFailed("@SYS93839");
        #                        }
        #                    }
        #                }
        #            }
        #        }
        #        else
        #        {
        #            ret = this.interCompanyIsBeingUpdatedNonInventoried(_showWarning);
        #        }
        #
        #        if (!ret
        #        &&  this.InterCompanyInventTransId)
        #        {
        #            changecompany(purchTable.InterCompanyCompanyId)
        #            {
        #                setPrefix(strFmt("@SYS93821",TradeInterCompany::curCompanyName()));
        #
        #                salesLine = SalesLine::findInventTransId(this.InterCompanyInventTransId);
        #                if (salesLine)
        #                {
        #                    ret = salesLine.interCompanyIsBeingUpdated(_showWarning);
        #                }
        #            }
        #        }
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #interCompanyIsBeingUpdatedNonInventoried
        #/// <summary>
        #/// Checks whether the non stocked intercompany order line is being updated.
        #/// </summary>
        #/// <param name="_showWarning">
        #/// A Boolean value that specifies whether to show warnings for failed checks; optional.
        #/// </param>
        #/// <returns>
        #/// true if the non stocked intercompany order line is being updated; otherwise, false.
        #/// </returns>
        #public boolean interCompanyIsBeingUpdatedNonInventoried(boolean _showWarning = true)
        #{
        #    PurchTable          purchTable = this.purchTable();
        #    boolean             ret = false;
        #
        #    if (this.RecId
        #    &&  purchTable.InterCompanyOrder
        #    &&  purchTable.InterCompanyCompanyId)
        #    {
        #        if (this.registered() || this.receivedInTotal())
        #        {
        #            ret = true;
        #            if (_showWarning)
        #            {
        #                setPrefix(strFmt("@SYS93821",TradeInterCompany::curCompanyName()));
        #                setPrefix(#PreFixField(purchTable, PurchId));
        #                checkFailed("@SYS93839");
        #            }
        #        }
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #interCompanyLineAmount
        #AmountCur interCompanyLineAmount(PurchQty      _purchQty    = this.PurchQty,
        #                                 InvoiceDate   _invoiceDate = this.DeliveryDate,
        #                                 Tax           _tax         = null)
        #{
        #    AmountCur       lineAmount;
        #    SalesLine       salesLine;
        #
        #    lineAmount = 0;
        #    if (this.InventRefTransId)
        #    {
        #        salesLine = SalesLine::findInventTransId(this.InventRefTransId);
        #        if (salesLine.RecId)
        #        {
        #            lineAmount = Currency::curAmount2CurAmount(salesLine.calcLineAmountExclTax(_purchQty, _invoiceDate, _tax),salesLine.CurrencyCode,this.CurrencyCode,_invoiceDate);
        #        }
        #        else
        #        {
        #            lineAmount = this.calcLineAmountExclTax(_purchQty, _invoiceDate, _tax);
        #        }
        #    }
        #    else
        #    {
        #        lineAmount = this.calcLineAmountExclTax(_purchQty, _invoiceDate, _tax);
        #    }
        #    return lineAmount;
        #}
      ENDSOURCE
      SOURCE #interCompanyOriginDisplay
        #//BP Deviation Documented
        #display InterCompanyOriginDisplay interCompanyOriginDisplay()
        #{
        #    InterCompanyOriginDisplay   interCompanyOriginDisplay;
        #    DictEnum                    dictEnum = new DictEnum(enumNum(InterCompanyOrigin));
        #
        #    if (this.InterCompanyInventTransId)
        #    {
        #        interCompanyOriginDisplay = dictEnum.value2Name(this.InterCompanyOrigin);
        #    }
        #    return interCompanyOriginDisplay;
        #}
      ENDSOURCE
      SOURCE #interCompanyPurchaseLeadDate
        #server TransDate interCompanyPurchaseLeadDate(TransDate _deliveryDate)
        #{
        #    LeadTime                leadTime;
        #    CalendarDays            calendarDays;
        #    ReqItemTable            reqItemTable            = ReqItemTable::find(this.ItemId,this.InventDimId);
        #    PriceDisc               priceDisc;
        #    InventItemPurchSetup    inventItemPurchSetup    = InventItemPurchSetup::find(this.ItemId,this.InventDimId);
        #    TransDate               leadTimeDate;
        #    WorkCalendarSched       workCalendarSched;
        #
        #    if (reqItemTable.LeadTimePurchaseActive)
        #    {
        #        leadTime     = reqItemTable.LeadTimePurchase;
        #        calendarDays = reqItemTable.CalendarDaysPurchase;
        #    }
        #    else
        #    {
        #        priceDisc = PriceDisc::newFromSalesPurchLine(this, this.inventDim());
        #        priceDisc.findPrice(this.priceGroupId());
        #        if (priceDisc.deliveryDays())
        #        {
        #            leadTime     = priceDisc.deliveryDays();
        #            calendarDays = priceDisc.calendarDays();
        #        }
        #        else
        #        {
        #            leadTime     = inventItemPurchSetup.getLeadTime();
        #            calendarDays = inventItemPurchSetup.calendarDays();
        #        }
        #    }
        #
        #    workCalendarSched = new WorkCalendarSched();
        #    leadTimeDate = workCalendarSched.schedDate(SchedDirection::Backward,
        #                                               _deliveryDate,
        #                                               leadTime,
        #                                               calendarDays,
        #                                               this.vendTable_OrderAccount().PurchCalendarId,
        #                                               this.type().internalCalendarId());
        #
        #
        #    return leadTimeDate;
        #}
      ENDSOURCE
      SOURCE #interCompanyPurchLineExist
        #boolean interCompanyPurchLineExist()
        #{
        #    return SalesLine::findInventTransId(this.InventRefTransId).InterCompanyInventTransId ? true : false;
        #}
      ENDSOURCE
      SOURCE #interCompanyRevertMarkupTrans
        #server void interCompanyRevertMarkupTrans()
        #{
        #    SalesLine           salesLine;
        #    CustInvoiceTrans    custInvoiceTrans;
        #    VendInvoiceTrans    vendInvoiceTrans;
        #
        #    if (this.purchTable().isInterCompanyOrder()
        #    &&  this.ItemRefType == InventRefType::Sales
        #    &&  this.InventRefTransId)
        #    {
        #        salesLine = SalesLine::findInventTransId(this.InventRefTransId);
        #        if (salesLine.InventTransIdReturn)
        #        {
        #            select firstonly InventRefType, InventRefTransId from custInvoiceTrans
        #                   where custInvoiceTrans.InventTransId ==  salesLine.InventTransIdReturn
        #                   &&    custInvoiceTrans.Qty           == -salesLine.SalesQty;
        #            if (custInvoiceTrans.InventRefType == InventRefType::Purch
        #            &&  custInvoiceTrans.InventRefTransId)
        #            {
        #                select firstonly vendInvoiceTrans
        #                       where vendInvoiceTrans.InventTransId ==  custInvoiceTrans.InventRefTransId
        #                       &&    vendInvoiceTrans.Qty           == -salesLine.SalesQty;
        #                if (vendInvoiceTrans)
        #                {
        #                    Markup::copy(true,vendInvoiceTrans,this);
        #                }
        #            }
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #interCompanySalesLine
        #SalesLine  interCompanySalesLine(boolean  _forUpdate = false)
        #{
        #    SalesLine   salesLine = null;
        #
        #    if (this.InterCompanyInventTransId)
        #    {
        #        changecompany(this.purchTable().InterCompanyCompanyId)
        #        {
        #            salesLine = SalesLine::findInventTransId(this.InterCompanyInventTransId,_forUpdate);
        #        }
        #
        #    }
        #    return salesLine;
        #}
      ENDSOURCE
      SOURCE #interCompanySalesLineOriginal
        #SalesLine interCompanySalesLineOriginal(boolean  _forUpdate = false)
        #{
        #    SalesLine   salesLine = null;
        #
        #    if (this.ItemRefType == InventRefType::Sales
        #    &&  this.InventRefTransId)
        #    {
        #        changecompany(
        #                      this.company()
        #                      )
        #        {
        #            salesLine = SalesLine::findInventTransId(this.InventRefTransId,_forUpdate);
        #        }
        #    }
        #    return salesLine;
        #}
      ENDSOURCE
      SOURCE #interCompanyUpdateNow
        #boolean  interCompanyUpdateNow()
        #{
        #    boolean  ok;
        #    // <GIN>
        #    PurchLine_IN    purchLine_IN;
        #    boolean         taxParameterEnabled_IN = TaxParameters::checkTaxParameters_IN();
        #    // </GIN>
        #
        #    if (!this.RecId)
        #    {
        #        ok = true;
        #    }
        #
        #    // <GIN>
        #    if (taxParameterEnabled_IN)
        #    {
        #        purchLine_IN = this.purchLine_IN();
        #    }
        #    // </GIN>
        #
        #    if (this.orig().ItemId                      != this.ItemId
        #    ||  this.orig().InventDimId                 != this.InventDimId
        #    ||  this.orig().DeliveryDate                != this.DeliveryDate
        #    ||  this.orig().ConfirmedDlv                != this.ConfirmedDlv
        #    ||  this.orig().ShippingDateRequested       != this.ShippingDateRequested
        #    ||  this.orig().ShippingDateConfirmed       != this.ShippingDateConfirmed
        #    ||  this.orig().LineNumber                  != this.LineNumber
        #    ||  this.orig().InventTransId               != this.InventTransId
        #    ||  this.orig().PurchQty                    != this.PurchQty
        #    ||  this.orig().PurchUnit                   != this.PurchUnit
        #    ||  this.orig().OverDeliveryPct             != this.OverDeliveryPct
        #    ||  this.orig().UnderDeliveryPct            != this.UnderDeliveryPct
        #    ||  this.orig().DeliveryPostalAddress       != this.DeliveryPostalAddress
        #    ||  this.orig().DeliveryName                != this.DeliveryName
        #    ||  this.orig().DefaultDimension            != this.DefaultDimension
        #    ||  this.orig().PurchPrice                  != this.PurchPrice
        #    ||  this.orig().PriceUnit                   != this.PriceUnit
        #    ||  this.orig().LineAmount                  != this.LineAmount
        #    ||  this.orig().PurchMarkup                 != this.PurchMarkup
        #    ||  this.orig().LineDisc                    != this.LineDisc
        #    ||  this.orig().LinePercent                 != this.LinePercent
        #    ||  this.orig().MultiLnDisc                 != this.MultiLnDisc
        #    ||  this.orig().MultiLnPercent              != this.MultiLnPercent
        #    ||  this.orig().Complete                    != this.Complete
        #    ||  this.orig().Blocked                     != this.Blocked
        #    ||  this.orig().ReturnDispositionCodeId     != this.ReturnDispositionCodeId
        #    ||  this.orig().ReturnStatus                != this.ReturnStatus
        #    ||  this.orig().MatchingAgreementLine       != this.MatchingAgreementLine
        #    // <GIN>
        #    ||  (taxParameterEnabled_IN
        #        &&  (purchLine_IN.orig().AssessableValue_IN              != purchLine_IN.AssessableValue_IN
        #             ||  purchLine_IN.orig().CompanyLocation_IN          != purchLine_IN.CompanyLocation_IN
        #             ||  purchLine_IN.orig().MaximumRetailPrice_IN       != purchLine_IN.MaximumRetailPrice_IN))
        #    // </GIN>
        #        )
        #    {
        #        ok = true;
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #inventDim
        #InventDim inventDim(boolean  update = false)
        #{
        #    return InventDim::find(this.InventDimId, update);
        #}
      ENDSOURCE
      SOURCE #inventDimProfileRAsset_RU
        #InventDim inventDimProfileRAsset_RU(InventDim _inventDim)
        #{
        #    RAssetParameters            rAssetParameters;
        #    InventTable                 inventTable;
        #    ;
        #
        #    if (! this.ItemId)
        #        return _inventDim;
        #
        #    rAssetParameters = RAssetParameters::find();
        #    if (! rAssetParameters.LowCostAssetInventProfileId)
        #        return _inventDim;
        #
        #    inventTable      = this.inventTable();
        #    if (! inventTable.AssetGroupId_RU)
        #        return _inventDim;
        #
        #    if (EcoResDimensionGroupSetup::isInventoryDimensionActiveForItem(this.ItemId, fieldNum(InventDim, InventProfileId_RU)) &&
        #        RAssetMainGroup::find(inventTable.AssetGroupId_RU).GroupType == RAssetGroupTypes::LowCostAssets)
        #    {
        #        if (RAssetTable::acquisitionPriceFromPurchLine(this) <= rAssetParameters.LowCostAmountLimit)
        #        {
        #            _inventDim.InventProfileId_RU = rAssetParameters.LowCostAssetInventProfileId;
        #        }
        #    }
        #
        #    return _inventDim;
        #}
      ENDSOURCE
      SOURCE #inventProfileType_RU
        #InventProfileType_RU inventProfileType_RU(boolean _forceGeneral = true)
        #{
        #    InventProfileType_RU inventProfileType = this.inventDim().inventProfile_RU().InventProfileType;
        #
        #    if (inventProfileType == InventProfileType_RU::NotSpecified && _forceGeneral)
        #    {
        #        inventProfileType = InventProfileType_RU::General;
        #    }
        #
        #    return inventProfileType;
        #}
      ENDSOURCE
      SOURCE #inventSiteChanged_BR
        #/// <summary>
        #///     Method called wherever the InventsiteId is changed.
        #/// </summary>
        #
        #public void inventSiteChanged_BR()
        #{
        #    if (this.PurchaseType == PurchaseType::ReturnItem)
        #        this.setAddressFromPurchTable();
        #
        #    this.setCFOP_BR();
        #}
      ENDSOURCE
      SOURCE #inventTable
        #InventTable inventTable(ItemId     itemId = this.ItemId,
        #                        boolean    update = false)
        #{
        #    return InventTable::find(itemId, update);
        #}
      ENDSOURCE
      SOURCE #inventTableModule
        #InventTableModule  inventTableModule(ItemId     itemId = this.ItemId)
        #{
        #    return InventTableModule::find(itemId, this.moduleType());
        #}
      ENDSOURCE
      SOURCE #invoiceAccount
        #VendInvoiceAccount  invoiceAccount()
        #{
        #    return this.purchTable().InvoiceAccount;
        #}
      ENDSOURCE
      SOURCE #invoicedInTotal
        #//BP Deviation Documented
        #display PurchQty   invoicedInTotal()
        #{
        #    if (!this.InventTransId)
        #    {
        #        return 0;
        #    }
        #    return this.invoicedInTotalServer();
        #}
      ENDSOURCE
      SOURCE #invoicedInTotalServer
        #server PurchQty invoicedInTotalServer()
        #{
        #    return this.type().invoicedInTotal();
        #}
      ENDSOURCE
      SOURCE #invoicedInventInTotal
        #//BP Deviation Documented
        #display InventQty    invoicedInventInTotal()
        #{
        #    InventTransIdSum    inventTransIdSum;
        #    InventQty           inventQty = 0;
        #
        #    if (this.InventTransId && this.isStocked())
        #    {
        #        inventTransIdSum = InventTransIdSum::newTransOriginId(InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId));
        #
        #        inventQty = inventTransIdSum.financial();
        #    }
        #
        #    return inventQty;
        #}
      ENDSOURCE
      SOURCE #invoicedOnPackingSlipInTotal
        #/// <summary>
        #/// Retrieves the quantity invoiced on packing slips.
        #/// </summary>
        #/// <returns>
        #/// The quantity invoiced on packing slips.
        #/// </returns>
        #public PurchQty invoicedOnPackingSlipInTotal()
        #{
        #    VendInvoiceTrans                    vendInvoiceTrans;
        #    VendInvoicePackingSlipQuantityMatch vendInvoicePackingSlipQuantityMatch;
        #    VendPackingSlipTrans                vendPackingSlipTrans;
        #
        #    select sum(Qty) from vendInvoiceTrans
        #        where vendInvoiceTrans.InventTransId == this.InventTransId
        #        exists join vendInvoicePackingSlipQuantityMatch
        #            where vendInvoicePackingSlipQuantityMatch.InvoiceSourceDocumentLIne == vendInvoiceTrans.SourceDocumentLine
        #        exists join vendPackingSlipTrans
        #            where vendPackingSlipTrans.SourceDocumentLine == vendInvoicePackingSlipQuantityMatch.PackingSlipSourceDocumentLine;
        #
        #    return vendInvoiceTrans.Qty;
        #}
      ENDSOURCE
      SOURCE #isAgreementLinkValid
        #/// <summary>
        #/// Checks whether the link between the agreement line and the purchase line is valid.
        #/// </summary>
        #/// <param name="_showInfolog">
        #/// A Boolean value that indicates whether to print the errors in the Infolog; optional.
        #/// </param>
        #/// <returns>
        #/// true if the link between the purchase order line and agreement line is valid; otherwise, false.
        #/// </returns>
        #public boolean isAgreementLinkValid(boolean _showInfolog = false)
        #{
        #    if (this.isLinkedToAgreement())
        #    {
        #        return AgreementLine::find(this.MatchingAgreementLine).isLinkValid(this,_showInfolog);
        #    }
        #    return true;
        #}
      ENDSOURCE
      SOURCE #isCategoryBased
        #/// <summary>
        #/// Specifies whether the order line is category based.
        #/// </summary>
        #/// <returns>
        #/// true if the order line is category based; otherwise, false.
        #/// </returns>
        #boolean isCategoryBased()
        #{
        #    return this.SalesPurchLine::isCategoryBased();
        #}
      ENDSOURCE
      SOURCE #isDropShipment
        #/// <summary>
        #///    Checks whether the order line is part of a drop shipment.
        #/// </summary>
        #/// <returns>
        #///    true if the order line is part of a drop shipment; otherwise, false.
        #/// </returns>
        #public boolean isDropShipment()
        #{
        #    return this.SalesPurchLine::isDropShipment();
        #}
      ENDSOURCE
      SOURCE #isFullyDistributed
        #/// <summary>
        #///    Performs a check whether line is fully distributed.
        #/// </summary>
        #/// <param name="_sourceDocumentLine">
        #///    A <c>SourceDocumentLine</c> record; optional.
        #/// </param>
        #/// <returns>
        #///    True, if the line is full distributed; otherwise false.
        #/// </returns>
        #/// <exception cref="M:exception::Warning">
        #///    This action can only be completed after the line number %1 is fully distributed.
        #/// </exception>
        #public client server boolean isFullyDistributed(SourceDocumentLine _sourceDocumentLine = this.sourceDocumentLine())
        #{
        #    if (!SourceDocumentLineProvider::isLineFullyDistributed(_sourceDocumentLine, this))
        #    {
        #        //This action can only be completed after the line number %1 is fully distributed
        #        return checkFailed(strFmt("@SYS341833", this.LineNumber));
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #isInterCompanyOrder
        #boolean  isInterCompanyOrder()
        #{
        #    boolean  ok = false;
        #
        #    if (this.InterCompanyInventTransId  &&  this.purchTable().isInterCompanyOrder())
        #    {
        #        ok = true;
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #isInvoiceMatched
        #/// <summary>
        #/// Returns true if line was partially or fully invoiced.
        #/// </summary>
        #/// <returns>
        #/// true if line was partially or fully invoiced; otherwise, false.
        #/// </returns>
        #public boolean isInvoiceMatched()
        #{
        #    return this.IsInvoiceMatched;
        #}
      ENDSOURCE
      SOURCE #isLatestPOVersionNotArchived
        #/// <summary>
        #/// Checks if the last version of the purchase order that this line belongs to was not yet archived to the history tables.
        #/// </summary>
        #/// <returns>
        #/// true if the last version has not yet been archived to the history tables; otherwise, false.
        #/// </returns>
        #public boolean isLatestPOVersionNotArchived()
        #{
        #    PurchTableVersion purchTableVersion = PurchTableVersion::findLatest(this.PurchId, this.DataAreaId);
        #    return purchTableVersion && (purchTableVersion.IsArchived == NoYes::No);
        #}
      ENDSOURCE
      SOURCE #isLinkedToAgreement
        #/// <summary>
        #/// Indicates whether the purchase line is linked to an agreement line.
        #/// </summary>
        #/// <returns>
        #/// true if the purchase line is linked to an agreement line; otherwise, false.
        #/// </returns>
        #public boolean isLinkedToAgreement()
        #{
        #    return this.MatchingAgreementLine != 0;
        #}
      ENDSOURCE
      SOURCE #isMarkupCodeEnabled_RU
        #/// <summary>
        #///  The field MarkupCode_RU is enabled
        #/// </summary>
        #/// <returns>
        #///  true if enabled, otherwize - false
        #/// </returns>
        #public boolean isMarkupCodeEnabled_RU()
        #{
        #    return ! this.ItemId || this.inventTable().isMarkupCodeEnabled_RU();
        #}
      ENDSOURCE
      SOURCE #isPackingSlipOrInvoiceUpdated
        #/// <summary>
        #/// Specifies whether the line has been packing slip or invoice updated.
        #/// </summary>
        #/// <returns>
        #/// true if the line has been packing slip or invoice updated; otherwise, false.
        #/// </returns>
        #public boolean isPackingSlipOrInvoiceUpdated()
        #{
        #    PurchLine purchOrig = this.orig();
        #
        #    return this.RecId                                       // Saved?
        #        && (this.PurchStatus == PurchStatus::Received       // Fully received?
        #            || this.RemainPurchFinancial != 0               // Partially received?
        #            || this.PurchStatus == PurchStatus::Invoiced    // Fully invoiced?
        #            || (this.RemainPurchPhysical != this.PurchQty    // Partially invoiced/received?
        #                && !(this.RemainPurchPhysical == purchOrig.RemainPurchPhysical && this.PurchQty != purchOrig.PurchQty))  //The'and' part excludes lines which are being checked during an update before remainPurchPhysical was calculated.
        #            );
        #}
      ENDSOURCE
      SOURCE #isStocked
        #/// <summary>
        #///    Checks whether the order line is tracked in inventory.
        #/// </summary>
        #/// <returns>
        #///    true if the order line is tracked in inventory; otherwise, false.
        #/// </returns>
        #boolean isStocked()
        #{
        #    // <GBR>
        #    #isoCountryRegionCodes
        #    // </GBR>
        #
        #    return this.SalesPurchLine::isStocked()
        #        // <GBR>
        #        && !(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoBR])
        #            && this.purchTable().createInventTrans_BR() == false)
        #        // </GBR>
        #        ;
        #}
      ENDSOURCE
      SOURCE #isSubcontracted
        #/// <summary>
        #/// Determines if the purchase line is originating from a lean subcontracting activity.
        #/// </summary>
        #/// <returns>
        #/// true if it is linked to lean kanban jobs, otherwise false.
        #/// </returns>
        #public boolean isSubcontracted()
        #{
        #    return this.PlanReference != 0;
        #}
      ENDSOURCE
      SOURCE #isTangible
        #/// <summary>
        #/// Determines whether the item in the order line is tangible.
        #/// </summary>
        #/// <returns>
        #/// true if the line is tangible; otherwise, false.
        #/// </returns>
        #public boolean isTangible()
        #{
        #    //For non-stocked item based lines where the ItemType is service
        #    //or for description based lines where the procurementCategory is non-tangible, return false.
        #    if (!this.isStocked()
        #        && ((this.ItemId && this.inventTable().ItemType == ItemType::Service)
        #        || (!this.ItemId && !EcoResCategory::isTangible(this.ProcurementCategory))))
        #    {
        #        return false;
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #isUserWorkItemOwner
        #/// <summary>
        #/// Gets the work item status of the pending task for the current record.
        #/// </summary>
        #/// <param name="_user">
        #/// The user ID of the work item owner; optional.
        #/// </param>
        #/// <returns>
        #/// A Boolean value that indicates whether the user has a pending work item.
        #/// </returns>
        #server boolean  isUserWorkItemOwner(WorkflowUser  _user = curUserId())
        #{
        #    return Workflow::findWorkItemsForCurrentUser(this).empty() == false;
        #}
      ENDSOURCE
      SOURCE #isVersioned
        #/// <summary>
        #/// Determines whether the order line has been versioned, i.e. whether it has been confirmed or approved with change management enabled.
        #/// </summary>
        #/// <returns>true if the order line has been versioned; otherwise, false.</returns>
        #public boolean isVersioned()
        #{
        #    return this.RecId && (!this.IsModified
        #        || PurchLineHistory::exist(this)
        #        || this.isLatestPOVersionNotArchived());
        #}
      ENDSOURCE
      SOURCE #itemIdChanged
        #server void itemIdChanged(AgreementHeaderRecId _matchingAgreement = 0)
        #{
        #    PurchTable purchTable;
        #    // <GEERU>
        #    PurchLine_W     purchLine_W;
        #    #isoCountryRegionCodes
        #    // </GEERU>
        #
        #    this.initFromInventTable(this.inventTable());
        #
        #    if (#PmfEnabled)
        #    {
        #        InventMovement::setMinMaxQty(this);
        #    }
        #
        #    if (this.inventTable().modelGroup().InventModel == InventModel::StdCost)
        #    {
        #        this.CreateFixedAsset = NoYes::No;
        #        this.AssetGroup = '';
        #        this.AssetId = '';
        #        this.AssetGroup = '';
        #        this.AssetBookId = '';
        #    }
        #
        #    if (ReverseChargeParameters_UK::find().rcEnabled)
        #    {
        #        if (ReverseChargeItemGroup_UK::exist(InventTable::find(this.ItemId).itemGroupId()))
        #        {
        #            purchTable = this.purchTable();
        #            if (!purchTable.vatNum && ReverseCharge_invoice_UK::isPurchDomestic(purchTable))
        #            {
        #                warning("@SYS125406");
        #            }
        #        }
        #    }
        #
        #    this.SalesPurchLine::autoMatchAgreementLine(_matchingAgreement);
        #
        #    PurchLine::modifyPurchQty(this, this.inventDim(), !this.MatchingAgreementLine);
        #    // <GEERU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        purchLine_W = this.purchLine_W();
        #        if (purchLine_W.MarkupCode_RU && ! this.isMarkupCodeEnabled_RU())
        #        {
        #            purchLine_W.MarkupCode_RU = '';
        #            this.packPurchLine_W(purchLine_W);
        #        }
        #
        #        if (this.inventTable().isMarkupCodeEnabled_RU() && this.inventTable().MarkupCode_RU)
        #        {
        #            this.LedgerDimension = MarkupTable::find(MarkupModuleType::Vend, this.inventTable().MarkupCode_RU).CustomerLedgerDimension;
        #        }
        #    }
        #    // </GEERU>
        #}
      ENDSOURCE
      SOURCE #itemLineDisc
        #LineDiscCode itemLineDisc()
        #{
        #    return this.inventTable().purchLineDisc();
        #}
      ENDSOURCE
      SOURCE #itemName
        #//BP Deviation Documented
        #display PurchLineShowItemName itemName()
        #{
        #    return this.inventTable().itemName(this.inventDim());
        #}
      ENDSOURCE
      SOURCE #ledgerDimensionClearing
        #public LedgerDimensionDefaultAccount ledgerDimensionClearing()
        #{
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #    PurchLine_W     purchLine_W;
        #    // </GEERU>
        #    // <GEERU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        purchLine_W = this.purchLine_W();
        #        if (purchLine_W.PostingProfile_RU)
        #        {
        #            return VendLedgerAccounts::clearingLedgerDimension(this.purchTable().InvoiceAccount,
        #                                                       purchLine_W.PostingProfile_RU);
        #        }
        #    }
        #    // </GEERU>
        #    return VendLedgerAccounts::clearingLedgerDimension(this.purchTable().InvoiceAccount,
        #                                                       this.purchTable().PostingProfile);
        #}
      ENDSOURCE
      SOURCE #ledgerDimensionConsumption
        #/// <summary>
        #/// Changes the account that is returned when getting the ledger account so that all fixed asset
        #/// transactions will use the <c>PurchReceiptFA</c> account instead of the <c>PurchConsump</c> account.
        #/// </summary>
        #/// <returns>
        #/// The ledger account for the consumption transaction.
        #/// </returns>
        #
        #//BP Deviation Documented
        #display LedgerDimensionDefaultAccount ledgerDimensionConsumption()
        #{
        #    LedgerDimensionDefaultAccount   ledgerAccount;
        #
        #    if (this.isStocked())
        #    {
        #        ledgerAccount = this.ledgerDimensionItem(InventAccountType::PurchConsump);
        #    }
        #    else if ((this.AssetId) && (AssetParameters::canUserCreateAssetAcquisition()))
        #    {
        #        ledgerAccount = this.assetLedgerDimension();
        #    }
        #    else
        #    {
        #        ledgerAccount = this.ledgerDimensionItem(InventAccountType::PurchExpense);
        #    }
        #
        #    return ledgerAccount;
        #}
      ENDSOURCE
      SOURCE #ledgerDimensionDiscount
        #public server LedgerDimensionDefaultAccount ledgerDimensionDiscount()
        #{
        #    return this.ledgerDimensionItem(InventAccountType::PurchDisc);
        #}
      ENDSOURCE
      SOURCE #ledgerDimensionItem
        #/// <summary>
        #/// Retrieves a ledger dimension for the purchase order line.
        #/// </summary>
        #/// <param name="_inventAccountType">
        #/// The posting account type.
        #/// </param>
        #/// <returns>
        #/// The posting ledger dimension for the account type of the purchase order line.
        #/// </returns>
        #LedgerDimensionDefaultAccount ledgerDimensionItem(InventAccountType _inventAccountType)
        #{
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #    // </GEERU>
        #    // <GEERU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        return InventPosting::accountItemLedgerDimension(
        #            _inventAccountType,
        #            this.ItemId,
        #            InventTable::find(this.ItemId).itemGroupId(),
        #            this.ProcurementCategory,
        #            this.VendAccount,
        #            this.VendGroup,
        #            this.TaxGroup,
        #            this.inventDim());
        #    }
        #    // </GEERU>
        #    return InventPosting::accountItemLedgerDimension(
        #        _inventAccountType,
        #        this.ItemId,
        #        InventTable::find(this.ItemId).itemGroupId(),
        #        this.ProcurementCategory,
        #        this.VendAccount,
        #        this.VendGroup,
        #        this.TaxGroup);
        #}
      ENDSOURCE
      SOURCE #ledgerDimensionOffsetAccountPckSlp
        #//BP Deviation Documented
        #display LedgerDimensionDefaultAccount  ledgerDimensionOffsetAccountPckSlp()
        #{
        #    return this.ledgerDimensionItem(InventAccountType::PurchPackingSlipOffsetAccount);
        #}
      ENDSOURCE
      SOURCE #ledgerDimensionReceipt
        #/// <summary>
        #/// Changes the account that is returned when getting the ledger account so that all the fixed asset
        #/// transactions will use the <c>PurchReceiptFA</c> account instead of the <c>PurchReceipt</c> account.
        #/// </summary>
        #/// <returns>
        #/// A ledger account for the receipt transaction.
        #/// </returns>
        #
        #//BP Deviation Documented
        #display LedgerDimensionDefaultAccount ledgerDimensionReceipt()
        #{
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #    // </GEERU>
        #    LedgerDimensionDefaultAccount ledgerAccount;
        #
        #    if (this.LedgerDimension && InventMovement::construct(this).mustBeBookedBalanceSheet())
        #    {
        #        ledgerAccount  = this.LedgerDimension;
        #    }
        #    else
        #    {
        #        if (this.AssetId)
        #        {
        #            // <GEERU>
        #            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #            {
        #                ledgerAccount = InventPosting::accountItemWithBackupLedgerDimension(InventAccountType::PurchReceiptFixedAsset,
        #                                            InventAccountType::PurchReceipt,
        #                                            this.ItemId,
        #                                            this.inventTable().itemGroupId(),
        #                                            this.ProcurementCategory,
        #                                            this.VendAccount,
        #                                            this.VendGroup,
        #                                            this.TaxGroup,
        #                                            this.inventDim());
        #            }
        #            else
        #            // </GEERU>
        #            // <GCN>
        #            if (InventPostingExtendParm_CN::checkExtendParmEnabled())
        #            {
        #                ledgerAccount = InventPosting::accountItemExtendParmWithBackup_CN(
        #                                        InventAccountType::PurchReceiptFixedAsset,
        #                                        InventAccountType::PurchReceipt,
        #                                        InventPostingExtendParm_CN::constructInventDim(this.inventDim()),
        #                                        this.ItemId,
        #                                        this.inventTable().itemGroupId(),
        #                                        this.ProcurementCategory,
        #                                        this.VendAccount,
        #                                        this.VendGroup,
        #                                        this.TaxGroup);
        #            }
        #            else
        #            {
        #            // </GCN>
        #                    ledgerAccount = InventPosting::accountItemWithBackupLedgerDimension(InventAccountType::PurchReceiptFixedAsset,
        #                                                InventAccountType::PurchReceipt,
        #                                                this.ItemId,
        #                                                this.inventTable().itemGroupId(),
        #                                                this.ProcurementCategory,
        #                                                this.VendAccount,
        #                                                this.VendGroup,
        #                                                this.TaxGroup);
        #            // <GEERU><GCN>
        #            }
        #            // </GCN></GEERU>
        #        }
        #        else
        #        {
        #            // <GCN>
        #            if (InventPostingExtendParm_CN::checkExtendParmEnabled())
        #            {
        #                ledgerAccount = this.accountItemExtendParm_CN(InventAccountType::PurchReceipt);
        #            }
        #            else
        #            {
        #            // </GCN>
        #                ledgerAccount = this.ledgerDimensionItem(InventAccountType::PurchReceipt);
        #            // <GCN>
        #            }
        #            // </GCN>
        #        }
        #    }
        #    return ledgerAccount;
        #}
      ENDSOURCE
      SOURCE #ledgerDimensionVend_RU
        #/// <summary>
        #/// Returns ledger dimension value for posting
        #/// </summary>
        #/// <returns>
        #/// Ledger dimension value for posting
        #/// </returns>
        #LedgerDimensionDefaultAccount ledgerDimensionVend_RU()
        #{
        #    PurchLine_W     purchLine_W = this.purchLine_W();
        #    #ISOCountryRegionCodes
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU])
        #        && purchLine_W.PostingProfile_RU)
        #    {
        #        return VendLedgerAccounts::summaryLedgerDimension(this.purchTable().InvoiceAccount,
        #                                                          purchLine_W.PostingProfile_RU);
        #    }
        #    return VendLedgerAccounts::summaryLedgerDimension(this.purchTable().InvoiceAccount,
        #                                          this.purchTable().PostingProfile);
        #}
      ENDSOURCE
      SOURCE #lineAmountExclTax
        #//BP Deviation Documented
        #PurchLineAmount lineAmountExclTax(TransDate transDate = systemDateGet(), Tax _tax = null)
        #{
        #    return this.SalesPurchLine::lineAmountExclTax(this.taxDate(transDate), _tax);
        #}
      ENDSOURCE
      SOURCE #lineAmountModified
        #void lineAmountModified()
        #{
        #    this.PriceDiscLine::lineAmountModified();
        #}
      ENDSOURCE
      SOURCE #lineAmountMST
        #AmountMST lineAmountMST(TransDate               exchRateDate            = systemDateGet(),
        #                        ExchRate                exchRate                = 0,
        #                        ExchrateSecondary       exchrateSecondary       = 0,
        #                        ExchRatesTriangulation  exchRatesTriangulation  = UnknownNoYes::Unknown)
        #
        #{
        #    return this.SalesPurchLine::lineAmountMST(exchRateDate, exchRate, exchrateSecondary, exchRatesTriangulation);
        #}
      ENDSOURCE
      SOURCE #lineAmountMSTExclTax
        #AmountMST  lineAmountMSTExclTax(TransDate               exchRateDate            = systemDateGet(),
        #                                ExchRate                exchRate                = 0,
        #                                ExchrateSecondary       exchrateSecondary       = 0,
        #                                ExchRatesTriangulation  exchRatesTriangulation  = UnknownNoYes::Unknown,
        #                                Tax                     _tax                    = null)
        #
        #{
        #    return this.SalesPurchLine::lineAmountMSTExclTax(exchRateDate, exchRate, exchrateSecondary, exchRatesTriangulation, _tax);
        #}
      ENDSOURCE
      SOURCE #lineDeliveryImageRessNo
        #/// <summary>
        #///     Determines the delivery type of the line.
        #/// </summary>
        #/// <returns>
        #///     An image resource ID.
        #/// </returns>
        #public int lineDeliveryImageRessNo()
        #{
        #    #resAppl
        #
        #    switch (this.LineDeliveryType)
        #    {
        #        case LineDeliveryType::OrderLineWithMultipleDeliveries:
        #            return #ImageOrderLineMultipleDeliveries;
        #        case LineDeliveryType::DeliveryLine:
        #            return #ImageDeliveryLine;
        #        default:
        #            return #ImageOrderLines;
        #    }
        #}
      ENDSOURCE
      SOURCE #lineDisc
        #LineDiscCode  lineDisc()
        #{
        #    return this.purchTable().LineDisc;
        #}
      ENDSOURCE
      SOURCE #linkInventDim2Dimension
        #/// <summary>
        #///    Applies default <c>PurchLine.dimension</c> values, depending on the <c>InventDim</c> record buffer
        #///    values.
        #/// </summary>
        #/// <param name="_newInventDim">
        #///    The <c>InventDim</c> record buffer linked to the current <c>PurchLine</c> record buffer.
        #/// </param>
        #/// <param name="_oldInventDim">
        #///    The <c>InventDim</c> record buffer that was previously linked to the current <c>PurchLine</c>
        #///    record buffer.
        #/// </param>
        #public void linkInventDim2Dimension(InventDim _newInventDim, InventDim _oldInventDim)
        #{
        #    _newInventDim.setInventSiteFromParentIfModified(this, _oldInventDim);
        #}
      ENDSOURCE
      SOURCE #markupAllowed
        #public boolean markupAllowed()
        #{
        #    return this.type().markupAllowed();
        #}
      ENDSOURCE
      SOURCE #matchingAgreementLine
        #/// <summary>
        #/// Returns the value of the <c>this.MatchingAgreementLine</c>.
        #/// </summary>
        #/// <returns>
        #/// A <c>RefRecId</c> type.
        #/// </returns>
        #public RefRecId matchingAgreementLine()
        #{
        #    return this.MatchingAgreementLine;
        #}
      ENDSOURCE
      SOURCE #mergeDimension
        #/// <summary>
        #/// Retrieves a dimension set that contains the merged combination of the current
        #/// <c>defaultDimension</c> field on this table and the provided dimension set.
        #/// </summary>
        #/// <param name="_primaryDefaultDimension">
        #/// A first dimension set to merge with the current <c>defaultDimension</c> field on this table.
        #/// </param>
        #/// <param name="_secondaryDefaultDimension">
        #/// A second dimension set to merge with the current <c>defaultDimension</c> field on this table;
        #/// optional.
        #/// </param>
        #/// <param name="_dimensionMerge">
        #/// A <c>dimensionMerge</c> object that was instantiated with the current buffer; optional.
        #/// </param>
        #/// <returns>
        #/// A dimension set that contains the merged combination of the current <c>defaultDimension</c> field
        #/// on this table and the specified dimension set.
        #/// </returns>
        #/// <remarks>
        #/// This method makes sure that potential linked dimensions are not overwritten when they are merged.
        #/// </remarks>
        #
        #public DimensionDefault mergeDimension(
        #    DimensionDefault _primaryDefaultDimension,
        #    DimensionDefault _secondaryDefaultDimension = 0,
        #    DimensionMerge   _dimensionMerge = DimensionMerge::newFromTable(this,
        #                                                                    this.companyInfo().RecId
        #                                                                    )
        #    )
        #{
        #    return _dimensionMerge.merge(_primaryDefaultDimension, _secondaryDefaultDimension);
        #}
      ENDSOURCE
      SOURCE #mms_cancelPurchLine
        #//MMS_733_PartlyCancel_M, malygin, 13.02.2015
        #public void mms_cancelPurchLine()
        #{
        #    PurchQty                    purchQty;
        #
        #    InventTrans                 inventTrans;
        #    InventTransOriginPurchLine  inventTransOriginPurchLine;
        #
        #    select sum (Qty) from inventTrans
        #        where inventTrans.StatusIssue == StatusIssue::None
        #           && inventTrans.StatusReceipt <= StatusReceipt::Registered
        #    join inventTransOriginPurchLine
        #        where inventTransOriginPurchLine.PurchLineInventTransId == this.InventTransId
        #           && inventTransOriginPurchLine.PurchLineDataAreaId == this.dataAreaId
        #           && inventTransOriginPurchLine.InventTransOrigin == inventTrans.InventTransOrigin;
        #
        #    purchQty = inventTrans.Qty;
        #
        #    this.RemainPurchPhysical  = purchQty;
        #    this.RemainInventPhysical = purchQty;
        #
        #    this.update();
        #}
      ENDSOURCE
      SOURCE #modifiedField
        #/// <summary>
        #/// Performs specific actions when a field is modified.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field ID of the field that has been modified.
        #/// </param>
        #/// <remarks>
        #/// This is overridden to allow for specific actions when a field is modified.
        #/// </remarks>
        #public void modifiedField(FieldId _fieldId)
        #{
        #    InventDim inventDim;
        #    InventDimParm inventDimParm;
        #
        #    // <GIN>
        #    CompanyInfo                     companyInfoLoc = CompanyInfo::find();
        #    VendTable                       vendTable = VendTable::find(this.VendAccount);
        #    // </GIN>
        #    super(_fieldId);
        #
        #    switch (_fieldId)
        #    {
        #        case fieldNum(PurchLine, ProcurementCategory):
        #            // Clear all except site and location
        #            inventDim = this.inventDim();
        #            inventDimParm.setActiveSiteAndWarehouseDimensions();
        #            inventDim.clearNotSelectedDim(inventDimParm);
        #            this.setInventDimIdFromInventDim(inventDim);
        #            this.initFromItemOrCategory(this.ItemId, this.ProcurementCategory, this.Name);
        #            this.initName();
        #
        #            if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #            {
        #                this.setAgreementLine();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, PurchReceivedNow):
        #            this.setInventReceivedNow();
        #            this.Tax1099Amount = 0;
        #            this.Tax1099StateAmount = 0;
        #            break;
        #
        #        case fieldNum(PurchLine, PriceUnit):
        #            this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, _fieldId);
        #            this.LineAmount = this.calcLineAmountInteraction(_fieldId);
        #            // <GIN>
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            // </GIN>
        #            break;
        #
        #        case fieldNum(PurchLine, PurchPrice):
        #            this.LineAmount = this.calcLineAmountForcedInteraction(_fieldId);
        #            this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, _fieldId);
        #            // <GIN>
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            // </GIN>
        #            if(this.DefaultCostPriceAsSalesPrice())
        #            {
        #                this.ProjSalesPrice = this.calcProjSalesPriceIfDefault();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, LinePercent):
        #            this.DiscPercent = this.discPercent();
        #            this.LineAmount = this.calcLineAmountForcedInteraction(_fieldId);
        #            this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, _fieldId);
        #            // <GIN>
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            // </GIN>
        #            if(this.DefaultCostPriceAsSalesPrice())
        #            {
        #                this.ProjSalesPrice = this.calcProjSalesPriceIfDefault();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, LineDisc):
        #            this.DiscAmount = this.discAmount();
        #            this.LineAmount = this.calcLineAmountForcedInteraction(_fieldId);
        #            this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, _fieldId);
        #            // <GIN>
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            // </GIN>
        #            if(this.DefaultCostPriceAsSalesPrice())
        #            {
        #                this.ProjSalesPrice = this.calcProjSalesPriceIfDefault();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, LineAmount):
        #            this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, _fieldId);
        #            this.lineAmountModified();
        #            this.LineAmount = this.calcLineAmountForcedInteraction(_fieldId, this.PurchQty, false);
        #            // <GIN>
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            // </GIN>
        #            if(this.DefaultCostPriceAsSalesPrice())
        #            {
        #                this.ProjSalesPrice = this.calcProjSalesPriceIfDefault();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, PurchUnit):
        #            this.purchUnitModified();
        #            // <GIN>
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            // </GIN>
        #            break;
        #
        #        case fieldNum(PurchLine, PurchMarkup):
        #            this.LineAmount = this.calcLineAmountForced();
        #            this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, _fieldId);
        #            // <GIN>
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            // </GIN>
        #            break;
        #
        #        case fieldNum(PurchLine, MultiLnDisc):
        #            this.DiscAmount = this.discAmount();
        #            this.LineAmount = this.calcLineAmountForced();
        #            this.type().setPriceDiscChangePolicyMultiLine();
        #            // <GIN>
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            // </GIN>
        #            break;
        #
        #        case fieldNum(PurchLine, MultiLnPercent):
        #            this.DiscPercent = this.discPercent();
        #            this.LineAmount = this.calcLineAmountForced();
        #            this.type().setPriceDiscChangePolicyMultiLine();
        #            // <GIN>
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            // </GIN>
        #            break;
        #
        #        case fieldNum(PurchLine, ProjCategoryId):
        #            this.ProjLinePropertyId    = ProjLinePropertySetup::findLinePropertyId(this.ProjId,this.ProjCategoryId);
        #            this.ProjTaxItemGroupId    = ProjParameters::taxItemGroupItem(this.ProjCategoryId,this.ItemId);
        #            break;
        #
        #        case fieldNum(PurchLine, ActivityNumber):
        #            this.initFromProjActivity(ProjActivity::find(this.ActivityNumber));
        #            this.ProjLinePropertyId    = ProjLinePropertySetup::findLinePropertyId(this.ProjId,this.ProjCategoryId);
        #            this.ProjTaxItemGroupId    = ProjParameters::taxItemGroupItem(this.ProjCategoryId,this.ItemId);
        #            break;
        #
        #        case fieldNum(PurchLine, AssetId):
        #            this.modifyAssetId();
        #            break;
        #
        #        case fieldNum(PurchLine, AssetBookId):
        #            if (this.AssetId && this.AssetBookId)
        #            {
        #                this.DefaultDimension = this.mergeDimension(AssetTable::find(this.AssetId).defaultDimension(this.AssetBookId));
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, DeliveryPostalAddress):
        #            LogisticsLocationSelectForm_PurchLine::construct(this).copyAddressToCaller(this.getDeliveryEntityRecord(),
        #                this.DeliveryPostalAddress);
        #            break;
        #
        #        case fieldNum(PurchLine, Requester):
        #            this.ReqAttention = HcmWorkerTitle::findByWorker(this.Requester).OfficeLocation;
        #            if (PurchCORPolicyTable::decentralized(this))
        #            {
        #                PurchCORPolicyTable::setLocation(this, true);
        #            }
        #            else if (PurchCORPolicyTable::decentralized(this.orig()))
        #            {
        #                PurchCORPolicyTable::setLocation(this, false);
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, ConfirmedDlv):
        #            if (this.ProjId)
        #            {
        #                this.initFromProjTable(this.projTable(),true);
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, DeliveryDate):
        #            this.unLinkAgreementDeliveryDates(_fieldId);
        #            if (this.ProjId && !this.ConfirmedDlv)
        #            {
        #                this.initFromProjTable(this.projTable(),true);
        #            }
        #            this.checkPriceDate(_fieldId);
        #            break;
        #
        #        case fieldNum(PurchLine, ProjSalesCurrencyId):
        #            if (this.ProjId)
        #            {
        #                this.initFromProjTable(this.projTable(),true);
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, ProjId):
        #            this.projIdModified();
        #            this.DefaultDimension = this.mergeDimension(this.DefaultDimension);
        #
        #            // Call the event handler to handle other modifications in higher layers...
        #            PurchLineTableHandler::modifiedField_ProjId(_fieldId, this);
        #
        #            break;
        #
        #        // <GIN>
        #        case fieldNum(PurchLine, ItemId):
        #            this.setExciseFields_IN();
        #            break;
        #        // </GIN>
        #        // Call the event handler to handle other cases that may be present in higher layers...
        #        default:
        #            PurchLineTableHandler::modifiedField_OtherFields(_fieldId, this);
        #            break;
        #    }
        #}
      ENDSOURCE
      SOURCE #modifiedFieldValue
        #/// <summary>
        #/// Modify a specified field.
        #/// </summary>
        #/// <param name="_fieldName">
        #/// The field Name of the field to modify.
        #/// </param>
        #/// <param name="_arrayIndex">
        #/// The array index of the field.
        #/// </param>
        #public void modifiedFieldValue(FieldName _fieldName, int _arrayIndex = 1)
        #{
        #    // <GIN>
        #    #isoCountryRegionCodes
        #    // </GIN>
        #
        #    super(_fieldName, _arrayIndex);
        #
        #
        #    switch (_fieldName)
        #    {
        #        // <GIN>
        #        case fieldStr(PurchLine, PurchQty):
        #            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        #            {
        #                if(TaxParameters::find().Customs_IN
        #                    && PurchTable::find(this.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::Yes
        #                    && CustomsInvoiceRegnTrans_IN::checkInvoiceRegnComplete(this.RecId)
        #                    && this.PurchQty < this.orig().PurchQty)
        #                {
        #                    this.PurchQty = this.orig().PurchQty;
        #                }
        #                this.setExciseFields_IN();
        #            }
        #            break;
        #
        #        // </GIN>
        #    }
        #
        #}
      ENDSOURCE
      SOURCE #modifyAssetId
        #/// <summary>
        #/// Modifies the related field values when the value of the <c>AssetId</c> field is changed.
        #/// </summary>
        #/// <remarks>
        #/// The value of the <c>AssetGroup</c> field and the <c>AssetBookId</c> field will be updated based on
        #/// the new value of the <c>AssetId</c> field.
        #/// </remarks>
        #public void modifyAssetId()
        #{
        #    AssetBook       assetBook;
        #    AssetBookTable  assetBookTable;
        #    AssetBookId     bookIdDefault;
        #    AssetTable      assetTable;
        #
        #    select AssetGroup from assetTable
        #        where assetTable.AssetId == this.AssetId;
        #    if (assetTable)
        #    {
        #        this.AssetGroup = assetTable.AssetGroup;
        #        this.ItemRefType = InventRefType::FixedAsset;
        #
        #        // If asset is assigned, need to clear "createFixedAsset" flag.
        #        this.CreateFixedAsset = false;
        #    }
        #    else
        #    {
        #        this.AssetGroup = '';
        #        this.ItemRefType = InventRefType::None;
        #    }
        #
        #    bookIdDefault = AssetParameters::find().BookIdDefault;
        #    assetBook = AssetBook::find(this.AssetId, bookIdDefault);
        #
        #    if (assetBook &&
        #       AssetBookTable::find(bookIdDefault).CurrentOperationsTax == CurrentOperationsTax::Current &&
        #       (assetBook.Status == AssetStatus::NoAcquisition ||
        #        assetBook.Status == AssetStatus::Open))
        #    {
        #        this.AssetBookId = bookIdDefault;
        #    }
        #    else
        #    {
        #        select firstonly assetBook
        #        where assetBook.AssetId == this.AssetId &&
        #              (assetBook.Status == AssetStatus::NoAcquisition ||
        #               assetBook.Status == AssetStatus::Open)
        #        join RecId from assetBookTable
        #        where assetBookTable.BookId               == assetBook.BookId &&
        #              assetBookTable.CurrentOperationsTax == CurrentOperationsTax::Current;
        #
        #        if (assetBook)
        #        {
        #            this.AssetBookId = assetBook.BookId;
        #        }
        #        else
        #        {
        #           this.AssetBookId = "";
        #        }
        #    }
        #    if (this.AssetId && this.AssetBookId)
        #    {
        #        this.DefaultDimension = this.mergeDimension(AssetTable::find(this.AssetId).defaultDimension(this.AssetBookId));
        #    }
        #}
      ENDSOURCE
      SOURCE #modifyCreateFixedAsset
        #/// <summary>
        #/// Modifies the related fields when the value of the <c>CreateFixedAsset</c> field is changed.
        #/// </summary>
        #/// <remarks>
        #/// If the <c>CreateFixedAsset</c> field is checked, the <c>AssetId</c> field will be cleared. It will
        #/// always clear the <c>AssetGroup</c> field and set the <c>AssetTransTypePurch</c> field to
        #/// <c>Acquisition</c>.
        #/// </remarks>
        #public void modifyCreateFixedAsset()
        #{
        #    if (this.CreateFixedAsset == NoYes::Yes)
        #    {
        #        this.AssetId = '';
        #        this.modifyAssetId();
        #        this.ItemRefType = InventRefType::FixedAsset;
        #    }
        #    else
        #    {
        #        this.ItemRefType = InventRefType::None;
        #    }
        #
        #    this.AssetGroup = '';
        #    this.AssetTransTypePurch = AssetTransTypePurch::Acquisition;
        #}
      ENDSOURCE
      SOURCE #modifyInventDim
        #void modifyInventDim(
        #    InventDim                           _inventDim,
        #    FieldId                             _dimFieldId,
        #    boolean                             _resetPrice = true)
        #{
        #    InventDimGroupSetup                 inventDimGroupSetup = InventDimGroupSetup::newItemId(this.ItemId);
        #    InventDimId oldInventDimId;
        #
        #    if (!this.ItemId)
        #    {
        #        return;
        #    }
        #
        #    // Remember the old value to check for changes
        #    oldInventDimId      = this.InventDimId;
        #    this.InventDimId    = InventDim::findOrCreate(_inventDim).InventDimId;
        #
        #    if (InventDim::isFieldIdProductDimension(_dimFieldId))
        #    {
        #        this.ExternalItemId = '';
        #        this.initFromProductDimensions(_inventDim);
        #    }
        #
        #    switch (_dimFieldId)
        #    {
        #        case fieldNum(InventDim,InventLocationId):
        #            this.modifyWMSLocation(_inventDim);
        #            //fall throough and possibly update dimension.
        #
        #        case fieldNum(InventDim,InventSiteId):
        #            // If a new InventDim is selected then default dimensions.
        #            if (this.InventDimId != oldInventDimId)
        #            {
        #                this.DefaultDimension = this.copyDimension(this.DefaultDimension);
        #            }
        #            break;
        #    }
        #
        #    if (_resetPrice && InventDim::mustUseFieldPurchPriceDisc(_dimFieldId, inventDimGroupSetup)
        #        && this.LineDeliveryType != LineDeliveryType::DeliveryLine)
        #    {
        #        this.SalesPurchLine::resetPriceAgreement();
        #        this.setPriceDisc(_inventDim);
        #    }
        #}
      ENDSOURCE
      SOURCE #modifyWMSLocation
        #/// <summary>
        #/// Modifies an <c>InventDim</c> record with WMS values.
        #/// </summary>
        #/// <param name="_inventDim">
        #/// The <c>InventDim</c> record to modify.
        #/// </param>
        #/// <param name="_resetWMSLocationId">
        #/// A Boolean value that indicates whether the <c>wMSLocationId</c> field is to be reset even when the
        #/// <c>LocationId</c> field is unchanged.
        #/// </param>
        #/// <remarks>
        #/// When changing the warehouse on a purchase order line, the location is updated with default WMS
        #/// values for items where the attached dimension group has the location set to active.
        #/// </remarks>
        #public void modifyWMSLocation(
        #    InventDim           _inventDim,
        #    boolean             _resetWMSLocationId = true)
        #{
        #    this.type().modifyWMSLocation(_inventDim, _resetWMSLocationId);
        #}
      ENDSOURCE
      SOURCE #moduleType
        #ModuleInventPurchSales moduleType()
        #{
        #    return ModuleInventPurchSales::Purch;
        #}
      ENDSOURCE
      SOURCE #mustBeCovPlanned
        #boolean  mustBeCovPlanned()
        #{
        #    return (this.RemainPurchPhysical ||  this.RemainPurchFinancial);
        #}
      ENDSOURCE
      SOURCE #nextLineNum
        #LineNum nextLineNum()
        #{
        #    PurchLine purchLine;
        #
        #    return this.SalesPurchLine::nextLineNum(purchLine);
        #}
      ENDSOURCE
      SOURCE #onCFOPChange_BR
        #/// <summary>
        #/// Updates tax information and the fiscal document texts when the CFOP is changed.
        #/// </summary>
        #/// <param name="_modifiedField">
        #/// The ID of the field that was modified.
        #/// </param>
        #public void onCFOPChange_BR(FieldId _modifiedField = fieldNum(PurchLine, cfopTable_BR))
        #{
        #    if (this.cfopTable_BR)
        #    {
        #        this.setTaxGroupAndTaxItemGroupFields_BR();
        #        this.onTaxChange_BR(_modifiedField);
        #    }
        #
        #    this.type().updateFiscalDocumentText_BR(FiscalDocumentTextType_BR::CFOP);
        #}
      ENDSOURCE
      SOURCE #onDeliveryPostalAddressChange_BR
        #/// <summary>
        #/// Updates CFOP information when the delivery address is changed to a different state or country.
        #/// </summary>
        #public void onDeliveryPostalAddressChange_BR()
        #{
        #    CFOPValidation_BR       cfopValidation;
        #    LogisticsPostalAddress  currentAddress, originAddress;
        #
        #    currentAddress      = LogisticsPostalAddress::findRecId(this.DeliveryPostalAddress);
        #    originAddress       = LogisticsPostalAddress::findRecId(this.orig().DeliveryPostalAddress);
        #
        #    if (currentAddress.State != originAddress.State || currentAddress.CountryRegionId != originAddress.CountryRegionId)
        #    {
        #        cfopValidation      = CFOPValidation_BR::construct(this);
        #        this.cfopTable_BR   = cfopValidation.getDefaultCFOP();
        #
        #        this.onCFOPChange_BR(fieldNum(PurchLine, DeliveryPostalAddress));
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #onTaxChange_BR
        #/// <summary>
        #/// Updates the current purchase order line amount when tax is changed.
        #/// </summary>
        #/// <param name="_modifiedField">
        #/// The ID of the field that was modified.
        #/// </param>
        #public void onTaxChange_BR(FieldId _modifiedField)
        #{
        #    this.LineAmount = this.calcLineAmountForcedInteraction(fieldNum(PurchLine, DeliveryPostalAddress));
        #}
      ENDSOURCE
      SOURCE #orderAccount
        #CustVendAC  orderAccount()
        #{
        #    return this.VendAccount;
        #}
      ENDSOURCE
      SOURCE #ordered
        #//BP Deviation Documented
        #display InventQtyOrdered ordered()
        #{
        #    InventQtyOrdered qtyOrdered;
        #    InventTransIdSum inventTransIdSum;
        #
        #    if (!this.InventTransId && !this.isStocked())
        #    {
        #        return 0;
        #    }
        #
        #    if (this.purchTable().DocumentState == VersioningDocumentState::Draft)
        #    {
        #        inventTransIdSum = InventTransIdSum::newTransOriginId(InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId));
        #        qtyOrdered = this.RemainInventPhysical - (inventTransIdSum.arrived() + inventTransIdSum.registered());
        #    }
        #    else
        #    {
        #        qtyOrdered = InventTransIdSumSingleStatus::qtyOrdered(InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId));
        #    }
        #
        #    return qtyOrdered;
        #}
      ENDSOURCE
      SOURCE #orderedInPurchUnit
        #//BP Deviation Documented
        #display PurchQtyOrdered orderedInPurchUnit()
        #{
        #    InventQtyOrdered inventQtyOrdered;
        #    PurchQtyOrdered  purchQtyOrdered;
        #
        #    if (this.isStocked())
        #    {
        #        inventQtyOrdered = this.ordered();
        #        if (inventQtyOrdered)
        #        {
        #            purchQtyOrdered = this.unitConvertInvent2Purch(inventQtyOrdered);
        #        }
        #    }
        #    else
        #    {
        #        purchQtyOrdered = this.RemainPurchPhysical - this.registeredInPurchUnit();
        #    }
        #
        #    return purchQtyOrdered;
        #}
      ENDSOURCE
      SOURCE #overDeliveryPct
        #/// <summary>
        #/// Returns the allowed over-delivery percent.
        #/// </summary>
        #/// <returns>
        #/// The over-delivery percent that is defined on the purchase order line if over-delivery is allowed;
        #/// otherwise, 0.
        #/// </returns>
        #public Percent overDeliveryPct()
        #{
        #    if (!PurchParameters::find().OverDelivery)
        #    {
        #        return 0;
        #    }
        #
        #    return this.OverDeliveryPct;
        #}
      ENDSOURCE
      SOURCE #packExtensionTable
        #/// <summary>
        #/// Packs an extension table record to the container field <C>PackedExtensions</C>.
        #/// </summary>
        #/// <param name="_extensionTable">
        #/// The extension table record.
        #/// </param>
        #/// <returns>
        #/// true if success; otherwise false.
        #/// </returns>
        #public boolean packExtensionTable(SysExtensionSerializerExtensionMap _extensionTable)
        #{
        #    boolean ret = false;
        #
        #    if (_extensionTable.SysExtensionSerializerExtensionMap::baseTableId() == this.TableId)
        #    {
        #        ret = this.SysExtensionSerializerMap::packExtensionTable(_extensionTable);
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #packPurchLine_IN
        #/// <summary>
        #/// Packs an extension table record to the container field <C>PackedExtensions</C>.
        #/// </summary>
        #/// <param name="_purchLine_IN">
        #/// The extension table record.
        #/// </param>
        #// <GIN>
        #public void packPurchLine_IN(PurchLine_IN _purchLine_IN)
        #{
        #    _purchLine_IN.PurchLine = this.RecId;
        #    this.SysExtensionSerializerMap::packExtensionTable(_purchLine_IN);
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #packPurchLine_Intrastat
        #/// <summary>
        #/// Packs <c>PurchLine_Intrastat</c> extension table record.
        #/// </summary>
        #/// <param name="_purchLine_Intrastat">
        #/// The extension table record to pack.
        #/// </param>
        #public void packPurchLine_Intrastat(PurchLine_Intrastat _purchLine_Intrastat)
        #{
        #    this.SysExtensionSerializerMap::packExtensionTable(_purchLine_Intrastat);
        #}
        #
      ENDSOURCE
      SOURCE #packPurchLine_W
        #/// <summary>
        #/// Packs an extension table record to the container field <C>PackedExtensions</C>.
        #/// </summary>
        #/// <param name="_purchLine_W">
        #/// The extension table record.
        #/// </param>
        #public void packPurchLine_W(PurchLine_W _purchLine_W)
        #{
        #    _purchLine_W.PurchLine = this.RecId;
        #    this.SysExtensionSerializerMap::packExtensionTable(_purchLine_W);
        #}
      ENDSOURCE
      SOURCE #parmExchangeRateDate
        #public AccountingDate parmExchangeRateDate()
        #{
        #    return this.purchTable().parmExchangeRateDate();
        #}
      ENDSOURCE
      SOURCE #parmParentSourceDocumentLine
        #public SourceDocumentLine parmParentSourceDocumentLine()
        #{
        #    return this.PurchLineMap::parmParentSourceDocumentLine();
        #}
        #
      ENDSOURCE
      SOURCE #parmSourceDocLineTypeEnumName
        #public EnumName parmSourceDocLineTypeEnumName()
        #{
        #    return this.PurchLineMap::parmSourceDocLineTypeEnumName();
        #}
      ENDSOURCE
      SOURCE #parmSourceDocLineTypeEnumValue
        #public SourceDocumentTypeEnumValue parmSourceDocLineTypeEnumValue()
        #{
        #    return this.PurchLineMap::parmSourceDocLineTypeEnumValue();
        #}
      ENDSOURCE
      SOURCE #parmSourceDocumentHeader
        #public SourceDocumentHeader parmSourceDocumentHeader()
        #{
        #    return this.PurchLineMap::parmSourceDocumentHeader();
        #}
        #
      ENDSOURCE
      SOURCE #pdsAdvancedPriceInfo
        #/// <summary>
        #///     Gets the advanced pricing extension information record for this <c>PurchLine</c>.
        #/// </summary>
        #/// <param name="_forUpdate">
        #///     Determines whether to select the record for updating; optional.
        #/// </param>
        #/// <returns>
        #///     The <c>PDSAdvancedPriceInfo</c> related to this purchase order line.
        #/// </returns>
        #/// <remarks>
        #///     This will always return an empty buffer if the line does not have an advanced calculation ID.
        #///     Otherwise, if the <c>PDSAdvancedPriceInfo</c> record does not yet exist for the line and the
        #///     purchase order line has been written to the database (it has a <c>RecId</c>) then this will
        #///     create a new <c>PDSAdvancedPriceInfo</c> record automatically.
        #/// </remarks>
        #public PDSAdvancedPriceInfo pdsAdvancedPriceInfo(boolean _forUpdate = false)
        #{
        #    PDSAdvancedPriceInfo    advancedPriceInfo;
        #
        #    if (this.RecId && this.pdsCalculationId)
        #    {
        #        advancedPriceInfo = PDSAdvancedPriceInfo::findByPurchLineRecId(this.RecId, _forUpdate);
        #        if (!advancedPriceInfo)
        #        {
        #            ttsbegin;
        #            advancedPriceInfo.PurchLineRefRecId = this.RecId;
        #            advancedPriceInfo.insert();
        #            ttscommit;
        #
        #            if (_forUpdate)
        #            {
        #                advancedPriceInfo = PDSAdvancedPriceInfo::findByPurchLineRecId(this.RecId, _forUpdate);
        #            }
        #        }
        #    }
        #
        #    return advancedPriceInfo;
        #}
      ENDSOURCE
      SOURCE #pdsCancelRemainWeight
        #/// <summary>
        #/// Sets CW item RemainInvnetPhysical to zero if
        #/// PdsCWRemainInventPhysical is zero.
        #/// </summary>
        #/// <remarks>
        #/// This is meant to allow for variance in actual weight.
        #/// If CW qty is set to zero, and there is still some actual weight remaining,
        #/// this method will cancel it out.
        #/// <syntax>
        #/// public void pdsCancelRemainWeight()
        #/// </syntax>
        #/// </remarks>
        #public void pdsCancelRemainWeight()
        #{
        #    if (pdsIsCWItem(this.ItemId)
        #        && this.RemainInventPhysical != 0
        #        && this.PdsCWRemainInventPhysical == 0)
        #    {
        #        this.RemainInventPhysical = 0;
        #        this.RemainPurchPhysical = 0;
        #        this.update();
        #    }
        #}
      ENDSOURCE
      SOURCE #pdsCheckApprovedVendorList
        #/// <summary>
        #/// Method validates if the purchase line item has valid approved vendor
        #/// list entry if controlled by AVL functionality.
        #/// </summary>
        #/// <returns type="Enum">Returns True / false</returns>
        #/// <remarks>
        #/// <syntax>
        #/// private  boolean pdsCheckApprovedVendorList()
        #/// </syntax>
        #/// </remarks>
        #public boolean pdsCheckApprovedVendorList()
        #{
        #    PdsApprovedVendorListCheck avlCheck;
        #    boolean ret = true;
        #
        #    avlCheck = this.type().pdsApprovedVendorListCheck();
        #    ret = avlCheck.validateCheck();
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #pdsCWArrived
        #/// <summary>
        #///     Calculates and returns the CW qty arrived for the purchase order line.
        #/// </summary>
        #/// <returns>
        #///     The catch weight arrived quantity.
        #/// </returns>
        #//BP Deviation Documented
        #public display PdsCWArrived pdsCWArrived()
        #{
        #    if (this.InventTransId)
        #    {
        #        return InventTransIdSumSingleStatus::pdsCWQtyArrived(InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId));
        #    }
        #    else
        #    {
        #        return 0;
        #    }
        #}
      ENDSOURCE
      SOURCE #pdsCWCalcPendingMatchedQtyInvent
        #/// <summary>
        #///    Calculates a sum of the <c>PdsCWInventNow</c> quantity for invoice lines connected to this <c>PurchLine</c> table
        #///    record, which are matched to a packing slip.
        #/// </summary>
        #/// <param name="_pendingOnly">
        #///    A Boolean value which determines whether only pending invoice lines are considered connected. True,
        #///    if only pending invoice lines are considered connected; otherwise, false; optional.
        #/// </param>
        #/// <param name="_openEndedOnly">
        #///    A Boolean value which determines whether only sub lines without a relationship to a packing slip should be considered.
        #///    True, if only sub lines without a relationship to a packing slip are considered in the calculation; otherwise, false; optional.
        #/// </param>
        #/// <returns>
        #///    The calculated <c>PdsCWInventNow</c> quantity.
        #/// </returns>
        #/// <remarks>
        #///    Records from the <c>VendInvoiceInfoSubLine</c> table are used in the calculation.
        #/// </remarks>
        #public PdsCWInventQty pdsCWCalcPendingMatchedQtyInvent(
        #    boolean _pendingOnly = true,
        #    boolean _openEndedOnly = false)
        #{
        #    VendInvoiceInfoTable vendInvoiceInfoTable;
        #    VendInvoiceInfoLine vendInvoiceInfoLine, vendInvoiceInfoLineJoin;
        #    VendInvoiceInfoSubLine vendInvoiceInfoSubLine;
        #
        #    // sum for all saved invoice sub lines connected to this PO line
        #
        #    select sum(PdsCWInventNow) from vendInvoiceInfoSubLine
        #        exists join vendInvoiceInfoLine
        #            where
        #                vendInvoiceInfoLine.RecId == vendInvoiceInfoSubLine.LineRefRecId &&
        #                vendInvoiceInfoLine.InventTransId == this.InventTransId &&
        #                (!_openEndedOnly || vendInvoiceInfoSubLine.JournalRefRecId == 0)
        #        exists join vendInvoiceInfoTable
        #            where
        #                vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId &&
        #                vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId &&
        #                (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting ||
        #                    vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors) &&
        #                (!_pendingOnly || vendInvoiceInfoTable.VendInvoiceSaveStatus == VendInvoiceSaveStatus::Pending)
        #       notexists join vendInvoiceInfoLineJoin // exclude all lines for existing document
        #            where
        #                vendInvoiceInfoLineJoin.InventTransId == vendInvoiceInfoLine.InventTransId &&
        #                vendInvoiceInfoLineJoin.InvoiceInfoTableRefId == vendInvoiceInfoLine.TableRefId &&
        #                vendInvoiceInfoLineJoin.RecId != vendInvoiceInfoLine.RecId &&
        #                vendInvoiceInfoLineJoin.ParmId != '';
        #
        #    return vendInvoiceInfoSubLine.PdsCWInventNow;
        #}
      ENDSOURCE
      SOURCE #pdsCWCalcPendingQtyPurch
        #/// <summary>
        #/// Calculates a sum of ReceiveNow quantity for all pending invoice
        #/// lines connected to this <c>PurchLine</c> table record.
        #/// </summary>
        #/// <returns>
        #/// The calculated ReceiveNow quantity.
        #/// </returns>
        #/// <remarks>
        #/// Records from both the <c>PurchParmLine</c> and the
        #/// <c>VendInvoiceInfoLine</c> tables are used in the calculation.
        #/// </remarks>
        #public server PdsCWInventQty pdsCWCalcPendingQtyPurch()
        #{
        #    VendInvoiceInfoLine vendInvoiceInfoLine;
        #    VendInvoiceInfoLine vendInvoiceInfoLineJoin;
        #    VendInvoiceInfoTable vendInvoiceInfoTable;
        #
        #    // sum for all saved invoice lines connected to this PO line
        #    select sum(PdsCWReceiveNow) from vendInvoiceInfoLine
        #        where   vendInvoiceInfoLine.InventTransId == this.InventTransId
        #        exists join vendInvoiceInfoTable
        #            where   vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId
        #                &&  vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId
        #                && (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting
        #                ||  vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors)
        #                &&  vendInvoiceInfoTable.VendInvoiceSaveStatus == VendInvoiceSaveStatus::Pending
        #        notexists join vendInvoiceInfoLineJoin // do not count active lines that are saved
        #            where   vendInvoiceInfoLineJoin.InventTransId == vendInvoiceInfoLine.InventTransId
        #                &&  vendInvoiceInfoLineJoin.InvoiceInfoTableRefId == vendInvoiceInfoLine.TableRefId
        #                &&  vendInvoiceInfoLineJoin.RecId != vendInvoiceInfoLine.RecId
        #                &&  vendInvoiceInfoLineJoin.ParmId != '';
        #
        #    return vendInvoiceInfoLine.PdsCWReceiveNow;
        #}
      ENDSOURCE
      SOURCE #pdsCWCalcPendingQtyPurchDisplay
        #/// <summary>
        #/// Returns the sum of PdsCWInventNow quantities for all pending
        #/// invoice lines connected to this <c>PurchLine</c> table record.
        #/// </summary>
        #/// <returns>
        #/// Calculated PdsCWInventNow quantity.
        #/// </returns>
        #/// <remarks>
        #/// Records from both <c>PurchParmLine</c> and <c>VendInvoiceInfoLine</c>
        #/// tables are used in the calculation.
        #/// </remarks>
        #public display PdsCWPendingInvoice pdsCWCalcPendingQtyPurchDisplay()
        #{
        #    return this.pdsCWCalcPendingQtyPurch();
        #}
      ENDSOURCE
      SOURCE #pdsCWInvoicedInTotal
        #/// <summary>
        #/// Calculates and returns the CW qty Invoiced in total for the purchase order line.
        #/// </summary>
        #/// <returns type="PdsCWInvoiced">CW qty invoiced in total for purchase order line.</returns>
        #/// <remarks>
        #/// <syntax>
        #/// public PdsCWInvoiced PdsCWInvoicedInTotal()
        #/// </syntax>
        #/// </remarks>
        #//BP Deviation Documented
        #public display PdsCWInvoiced pdsCWInvoicedInTotal()
        #{
        #    PdsCWInvoiced   pdsCWInvoiced = 0;
        #
        #    //Check if user has security access
        #    if (hasFieldAccess(tableNum(PurchLine),
        #                       fieldNum(PurchLine, InventTransId),
        #                       AccessType::View))
        #    {
        #        if (pdsIsCWItem(this.ItemId) &&
        #            this.InventTransId)
        #        {
        #            pdsCWInvoiced = this.type().pdsCWInvoicedInTotal();
        #        }
        #    }
        #    return pdsCWInvoiced;
        #}
      ENDSOURCE
      SOURCE #pdsCWOrdered
        #/// <summary>
        #/// Calculates and returns the CW qty ordered for the purchase order line.
        #/// </summary>
        #/// <returns type="PdsCWOrdered">CW qty Ordered</returns>
        #/// <remarks>
        #/// <syntax>
        #/// public PdsCWOrdered PdsCWOrdered()
        #/// </syntax>
        #/// </remarks>
        #//BP Deviation Documented
        #public display PdsCWOrdered pdsCWOrdered()
        #{
        #    PdsCWOrdered        pdsCWOrdered = 0;
        #    InventTransIdSum    inventTransIdSum;
        #
        #    //Check if user has security access
        #    if (hasFieldAccess(tableNum(InventSum),
        #                       fieldNum(InventSum, PdsCWOrdered),
        #                       AccessType::View))
        #    {
        #        if (this.InventTransId)
        #        {
        #            inventTransIdSum = InventTransIdSum::newTransOriginId(
        #            InventTransOriginPurchLine::findInventTransOriginId(
        #                this.DataAreaId, this.InventTransId));
        #
        #            pdsCWOrdered = inventTransIdSum.pdsCWOrdered();
        #        }
        #    }
        #
        #    return pdsCWOrdered;
        #}
      ENDSOURCE
      SOURCE #pdsCWPurchReceivedNowConversion
        #/// <summary>
        #/// Converts CW qty to standard qty or standard qty to
        #/// cw qty for the purchase order line.
        #/// </summary>
        #/// <param name="_fromCW" type="Enum">If true, converts from CW
        #/// qty and sets the PurchReceiveNow field.  If false the opposite is done.
        #/// </param>
        #/// <remarks>
        #/// <syntax>
        #/// private void pdsCWPurchReceivedNowConversion(Enum _fromCW)
        #/// </syntax>
        #/// </remarks>
        #public server void pdsCWPurchReceivedNowConversion(boolean _fromCW = false)
        #{
        #    if (pdsIsCWItem(this.ItemId))
        #    {
        #        if (_fromCW)
        #        {
        #            this.PurchReceivedNow = PdsCatchWeight::inventQty(
        #                                        this.ItemId,
        #                                        this.PdsCWInventReceivedNow,
        #                                        this.PurchUnit);
        #        }
        #        else if (!this.PdsCWInventReceivedNow)
        #        {
        #            this.PdsCWInventReceivedNow = PdsCatchWeight::cwQty(
        #                                            this.ItemId,
        #                                            this.InventReceivedNow);
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #pdsCWQtyConversion
        #/// <summary>
        #/// Converts the CW qty to the standard qty and sets the
        #/// purchLine.PurchQty to the converted value.
        #/// </summary>
        #/// <remarks>
        #/// <syntax>
        #/// private void pdsCWQtyConversion()
        #/// </syntax>
        #/// </remarks>
        #public server void pdsCWQtyConversion()
        #{
        #    if (pdsIsCWItem(this.ItemId))
        #    {
        #        this.PurchQty = PdsCatchWeight::inventQty(
        #                            this.ItemId,
        #                            this.PdsCWQty,
        #                            this.PurchUnit);
        #    }
        #}
      ENDSOURCE
      SOURCE #pdsCWQtyValidation
        #/// <summary>
        #/// Validates that the catch weight quanity entered is valid.
        #/// </summary>
        #/// <returns>
        #/// true if CW quantity is valid; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// Checks that catch weight quantity is not negative, and that it is within the range set
        #/// up for the item.
        #/// </remarks>
        #public client server boolean pdsCWQtyValidation()
        #{
        #    boolean ret = true;
        #    boolean isNegative = false;
        #
        #    if (pdsIsCWItem(this.ItemId))
        #    {
        #        if (this.purchTable().PurchaseType == PurchaseType::ReturnItem
        #            || this.PdsCWQty < 0)
        #        {
        #            isNegative = true;
        #        }
        #
        #        if (!this.PdsCWQty
        #            && !isNegative)
        #        {
        #            ret = checkFailed("@PDS113");
        #        }
        #
        #        if (ret
        #            && this.PdsCWInventReceivedNow
        #            && !PdsCatchWeightItem::pdsCWIsValidQty(this.ItemId,
        #                                                this.InventReceivedNow,
        #                                                this.PdsCWInventReceivedNow))
        #        {
        #            ret = checkFailed(PdsCatchWeightItem::pdsCWErrorMsgForUnit(
        #                                                this.ItemId,
        #                                                this.PdsCWInventReceivedNow,
        #                                                this.PurchUnit));
        #        }
        #
        #        if (ret
        #            && !PdsCatchWeightItem::pdsCWIsValidQty(this.ItemId,
        #                                                    this.QtyOrdered,
        #                                                    this.PdsCWQty))
        #        {
        #            ret = checkFailed(PdsCatchWeightItem::pdsCWErrorMsgForUnit(
        #                                                    this.ItemId,
        #                                                    this.PdsCWQty,
        #                                                    this.PurchUnit));
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #pdsCWReceivedInTotal
        #/// <summary>
        #/// Calculates and returns the CW qty received in total for
        #/// the purchase order line.
        #/// </summary>
        #/// <returns type="PdsCWQtyReceived">CW qty received in total.</returns>
        #/// <remarks>
        #/// <syntax>
        #/// public PdsCWQtyReceived PdsCWReceivedInTotal()
        #/// </syntax>
        #/// </remarks>
        #//BP Deviation Documented
        #public display PdsCWQtyReceived pdsCWReceivedInTotal()
        #{
        #    PdsCWQtyReceived pdsCWQtyReceived = 0;
        #
        #    //Check if user has security access
        #    if (hasFieldAccess(tableNum(VendInvoiceTrans),
        #                       fieldNum(VendInvoiceTrans, PdsCWQtyPhysical),
        #                       AccessType::View)
        #        && hasFieldAccess(tableNum(VendPackingSlipTrans),
        #                          fieldNum(VendPackingSlipTrans, PdsCWQty),
        #                          AccessType::View))
        #    {
        #        if (pdsIsCWItem(this.ItemId)
        #            && this.InventTransId)
        #        {
        #            pdsCWQtyReceived = this.type().pdsCWReceivedInTotal();
        #        }
        #    }
        #
        #    return pdsCWQtyReceived;
        #}
      ENDSOURCE
      SOURCE #pdsCWRegistered
        #/// <summary>
        #/// Returns the CW qty registered for the purchase order line.
        #/// </summary>
        #/// <returns type="PdsCWRegistered">CW qty registered.</returns>
        #/// <remarks>
        #/// <syntax>
        #/// public PdsCWRegistered PdsCWRegistered()
        #/// </syntax>
        #/// </remarks>
        #//BP Deviation Documented
        #public display PdsCWRegistered pdsCWRegistered()
        #{
        #    PdsCWRegistered     pdsCWRegistered = 0;
        #    InventTransIdSum    inventTransIdSum;
        #
        #    //Check if user has security access
        #    if (hasFieldAccess(tableNum(InventSum),
        #                          fieldNum(InventSum, PdsCWRegistered),
        #                          AccessType::View))
        #    {
        #        if (this.InventTransId)
        #        {
        #            inventTransIdSum = InventTransIdSum::newTransOriginId(
        #            InventTransOriginPurchLine::findInventTransOriginId(
        #                this.DataAreaId, this.InventTransId));
        #
        #            pdsCWRegistered = inventTransIdSum.pdsCWRegistered();
        #        }
        #    }
        #
        #    return pdsCWRegistered;
        #}
      ENDSOURCE
      SOURCE #pdsCWUnitId
        #/// <summary>
        #/// Gets the catch weight unit for the item.
        #/// </summary>
        #/// <returns>
        #/// The catch weight unit for the item.
        #/// </returns>
        #[SysClientCacheDataMethodAttribute(true)]
        #public display PdsCWUnitId pdsCWUnitId()
        #{
        #    return PdsCatchWeight::cwUnitId(this.ItemId);
        #}
      ENDSOURCE
      SOURCE #pdsVendBatchInfo
        #/// Gets the <c>PdsVendBatchInfo</c> related record for the <c>PurchLine</c> record.
        #/// </summary>
        #/// <returns>
        #/// The <c>PdsVendBatchInfo</c> record.
        #/// </returns>
        #public PdsVendBatchInfo pdsVendBatchInfo()
        #{
        #    return PdsVendBatchInfo::findByRefRecId(this.RecId);
        #}
      ENDSOURCE
      SOURCE #postModifyInventDimBR
        #/// <summary>
        #///   Sets field values on the order line based on the changed inventory dimension.
        #/// </summary>
        #/// <param name="_inventDim">
        #///   A record.
        #/// </param>
        #/// <param name="_dimFieldId">
        #///   A field ID.
        #/// </param>
        #/// <param name="_resetPrice">
        #///   A <c>Boolean</c> value determinig if the price should be reset; optional.
        #/// </param>
        #public void postModifyInventDimBR(
        #    InventDim                           _inventDim,
        #    FieldId                             _dimFieldId,
        #    boolean                             _resetPrice = true)
        #{
        #    if (_dimFieldId == fieldNum(InventDim, InventSiteId))
        #    {
        #        this.inventSiteChanged_BR();
        #    }
        #}
      ENDSOURCE
      SOURCE #priceDate
        #/// <summary>
        #/// Retrieves the date for which to calculate the price according to the <c>PriceDateType</c> field.
        #/// </summary>
        #/// <returns>
        #/// The date for which to calculate the price.
        #/// </returns>
        #/// <remarks>
        #/// The <c>PriceDateType</c> field can be set up to <c>Today</c> or <c>DeliveryDate</c> as a price date.
        #/// </remarks>
        #TransDate priceDate()
        #{
        #    PurchParameters purchParameters;
        #    // <GEERU>
        #    PurchLine_W     purchLine_W;
        #    #ISOCountryRegionCodes
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([ #isoRU ]))
        #    {
        #        purchLine_W = this.purchLine_W();
        #        if (purchLine_W.PriceAgreementDate_RU)
        #        {
        #            return purchLine_W.PriceAgreementDate_RU;
        #        }
        #    }
        #    // <GEERU>
        #
        #    purchParameters = PurchParameters::find();
        #
        #    switch (purchParameters.PriceDateType)
        #    {
        #        case PurchPriceDateType::DeliveryDate:
        #            return this.DeliveryDate;
        #
        #        default:
        #            return systemDateGet();
        #    }
        #}
      ENDSOURCE
      SOURCE #priceGroupId
        #PriceGroupId  priceGroupId()
        #{
        #    return this.purchTable().PriceGroupId;
        #}
      ENDSOURCE
      SOURCE #projIdModified
        #/// <summary>
        #/// Changes the purchase line based on changes in the project ID unit field.
        #/// </summary>
        #/// <remarks>
        #/// Called from the <c>modifiedField</c> method.
        #/// </remarks>
        #public void projIdModified()
        #{
        #    if (this.RecId && !this.isAgreementLinkValid())
        #    {
        #        this.unLinkAgreementLinePrompt(fieldNum(PurchLine, ProjId));
        #    }
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)))
        #    {
        #        this.psaRetainScheduleId = ProjPWPVendorRetentionSetting::findByProjVendor(this.ProjId, this.purchTable().OrderAccount).RuleId;
        #    }
        #}
      ENDSOURCE
      SOURCE #projQueryValueInventTransId
        #str projQueryValueInventTransId()
        #{
        #    return ProjItemTrans::projQueryValueInventTransId(this.InventTransId, this.ItemId);
        #}
      ENDSOURCE
      SOURCE #projTable
        #ProjTable projTable(
        #    ProjId     projId = this.ProjId,
        #    boolean    update = false)
        #{
        #    return ProjTable::find(projId, update);
        #}
      ENDSOURCE
      SOURCE #psAeditActivityPurpose
        #public edit smmActivityPurpose psAeditActivityPurpose(boolean _set, ProjActivityNumber _activityNumber)
        #{
        #    smmActivities smmActivities;
        #    str name;
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)))
        #    {
        #    if (_set)
        #    {
        #        this.ActivityNumber = _activityNumber;
        #        this.initFromProjActivity(ProjActivity::find(_activityNumber));
        #    }
        #    else
        #    {
        #        smmActivities = smmActivities::find(this.ActivityNumber);
        #        name = smmActivities.Purpose;
        #    }
        #    }
        #
        #    return name;
        #}
        #
        #
      ENDSOURCE
      SOURCE #psaGetPWPSetting
        #public boolean psaGetPWPSetting()
        #{
        #    boolean     isPwpSetting;
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)))
        #    {
        #        if (ProjPWPVendorRetentionSetting::findByProjVendor(this.ProjId, this.purchTable().OrderAccount).PwpThresholdPercent > 0)
        #        {
        #            isPwpSetting = true;
        #        }
        #        else
        #        {
        #            isPwpSetting = false;
        #        }
        #    }
        #
        #    return isPwpSetting;
        #}
      ENDSOURCE
      SOURCE #psaInitFromForecastSales
        #
        #// Description    : Init a purch line from a forecast sales line
        #//                  Based on initFromPurchLine
        #// Parameters     : _tForecastSales: Record to init from
        #//                  _bCopyPrecisely: Copy line precisely
        #//                  _bCopyPriceDisc: Init price and discount
        #//                  _bCopyQty: Init quantity
        #//                  _rQty: Quantity to init from
        #// Return value   : None
        #
        #public void  psaInitFromForecastSales(ForecastSales    _tForecastSales,
        #                               boolean          _bCopyPrecisely = true,
        #                               boolean          _bCopyPriceDisc = true,
        #                               boolean          _bCopyQty       = true,
        #                               Qty              _rQty           = _tForecastSales.SalesQty)
        #{
        #    InventDim   inventDim;
        #
        #    if (!isConfigurationkeyEnabled(configurationKeyNum(Project3)))
        #    {
        #        return;
        #    }
        #
        #    this.ItemId             = _tForecastSales.ItemId;
        #    this.initFromInventTable(this.inventTable());
        #
        #    if (_bCopyQty)
        #    {
        #        this.InventDimId        = _tForecastSales.InventDimId;
        #        this.PurchQty           = _rQty;
        #        this.PurchUnit          = _tForecastSales.SalesUnitId;
        #        this.QtyOrdered         = _tForecastSales.SalesQty == _rQty ? _tForecastSales.InventQty : this.calcQtyOrdered();
        #    }
        #    else
        #    {
        #        inventDim               = this.inventDim();
        #        EcoResProductDimGroupSetup::copyProductDimensionsForItem(this.ItemId,_tForecastSales.inventDim(),inventDim);
        #        this.InventDimId        = InventDim::findOrCreate(inventDim).InventDimId;
        #    }
        #
        #    if (_bCopyPriceDisc)
        #    {
        #        this.PurchPrice         = _tForecastSales.CostPrice;
        #        this.ProjSalesPrice     = _tForecastSales.SalesPrice;
        #        this.PriceUnit          = _tForecastSales.PriceUnit;
        #        this.LinePercent        = _tForecastSales.DiscPercent;
        #        this.LineDisc           = _tForecastSales.DiscAmount;
        #        this.PurchMarkup        = _tForecastSales.SalesMarkup;
        #        this.LineAmount         = _tForecastSales.Amount;
        #    }
        #
        #    if (_bCopyPrecisely)
        #    {
        #        this.InventDimId        = _tForecastSales.InventDimId;
        #        this.Name               = _tForecastSales.itemName();
        #        this.TaxItemGroup       = _tForecastSales.TaxItemGroupId;
        #        this.DefaultDimension   = _tForecastSales.DefaultDimension;
        #    }
        #
        #}
        #
        #
      ENDSOURCE
      SOURCE #psaInvoicedAmount
        #public AmountCur psaInvoicedAmount()
        #{
        #    AmountCur   rInvoiceAmount = 0;
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)) && this.InventTransId)
        #    {
        #        rInvoiceAmount = (select sum(LineAmount) from vendInvoiceTrans
        #                        where vendInvoiceTrans.InventTransId == this.InventTransId).LineAmount;
        #    }
        #
        #    return rInvoiceAmount;
        #}
        #
      ENDSOURCE
      SOURCE #psaInvoicedQty
        #public PurchQty psaInvoicedQty()
        #{
        #    PurchQty   invoicedQty = 0.00;
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)) && this.InventTransId)
        #    {
        #        invoicedQty = (select sum(Qty) from vendInvoiceTrans
        #                        where vendInvoiceTrans.InventTransId == this.InventTransId).Qty;
        #    }
        #
        #    return invoicedQty;
        #}
        #
      ENDSOURCE
      SOURCE #psaPwpPercent
        #public display PSAPercent psaPwpPercent(PurchLine _purchLine)
        #{
        #    return ProjPWPVendorRetentionSetting::getPwpThresholdPercent(_purchLine.ProjId, _purchLine.IsPwp, _purchLine.VendAccount);
        #}
        #
        #
      ENDSOURCE
      SOURCE #purchCORremainPurchQty
        #//BP Deviation Documented
        #public display Qty purchCORremainPurchQty(PurchLine _purchLine)
        #{
        #    return EPPurchCOR::corRemainPurchQty(int642str(_purchLine.RecId), _purchLine.RemainPurchPhysical);
        #}
      ENDSOURCE
      SOURCE #purchLine_IN
        #/// <summary>
        #/// Get the <c>PurchLine_IN</c> table.
        #/// </summary>
        #/// <returns>
        #/// The table <c>PurchLine_IN</c> associated with the current record.
        #/// </returns>
        #// <GIN>
        #public PurchLine_IN purchLine_IN()
        #{
        #    return this.SysExtensionSerializerMap::getExtensionTable(tableNum(PurchLine_IN));
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #purchLine_Intrastat
        #/// <summary>
        #/// Retrieves <c>PurchLine_Intrastat</c> extension table record.
        #/// </summary>
        #/// <returns>
        #/// The extension table record related to current record.
        #/// </returns>
        #public PurchLine_Intrastat purchLine_Intrastat()
        #{
        #    return this.SysExtensionSerializerMap::getExtensionTable(tableNum(PurchLine_Intrastat));
        #}
        #
      ENDSOURCE
      SOURCE #purchLine_W
        #/// <summary>
        #/// Get the <c>PurchLine_W</c> table.
        #/// </summary>
        #/// <returns>
        #/// The table <c>PurchLine_W</c> associated with the current record.
        #/// </returns>
        #public PurchLine_W purchLine_W()
        #{
        #    return this.SysExtensionSerializerMap::getExtensionTable(tableNum(PurchLine_W));
        #}
      ENDSOURCE
      SOURCE #purchLineView_IN
        #/// <summary>
        #/// Gets a <C>PurchLineView_IN</C> based on current buffer.
        #/// </summary>
        #/// <returns>
        #/// A <C>PurchLineView_IN</C>.
        #/// </returns>
        #// <GIN>
        #public PurchLineView_IN purchLineView_IN()
        #{
        #    PurchLineView_IN    purchLineView_IN;
        #
        #    purchLineView_IN.initFromPurchLine(this);
        #    purchLineView_IN.initFromPurchLine_IN(this.purchLine_IN());
        #
        #    // If the view doesn't have a RecId then it will assume
        #    // this is an insert scenario when it isn't.  So we will
        #    // let the view borrow the RecId from the PurchLine.  Since
        #    // no writes are done using this view this will work okay.
        #    purchLineView_IN.RecId = this.RecId;
        #
        #    return purchLineView_IN;
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #purchQtyModifiedInteraction
        #/// <summary>
        #/// Performs code with regard to changes in the purchase line when purchase quantity is changed with
        #/// user interaction if associated link to agreement line becomes invalid.
        #/// </summary>
        #/// <param name="_inventDim">
        #/// The inventory dimensions of the changed line.
        #/// </param>
        #/// <remarks>
        #/// Prompt appears if linked purchase agreement line is set to enforce max quantity.
        #/// </remarks>
        #public void purchQtyModifiedInteraction(InventDim _inventDim = this.inventDim())
        #{
        #    boolean     calledFromWeb;
        #    boolean     isAgreementLinkValid;
        #    AmountCur   localOrigLineAmount = this.LineAmount; //This variable is needed for the uncommitted scenario.
        #
        #    if (!this.isTmp() && this.MatchingAgreementLine)
        #    {
        #        //The impact on line amount should be included in the agreement link validation.
        #        this.LineAmount      = this.calcLineAmountForced(this.PurchQty);
        #        isAgreementLinkValid = this.isAgreementLinkValid();
        #        this.LineAmount      = localOrigLineAmount;
        #
        #        if (isAgreementLinkValid)
        #        {
        #            PurchLine::modifyPurchQty(this, _inventDim);
        #        }
        #        else
        #        {
        #            calledFromWeb = webSession() ? true : false;
        #            if (calledFromWeb)
        #            {
        #                warning("@SYS135750");
        #                PurchLine::modifyPurchQty(this, _inventDim);
        #            }
        #            else
        #            {
        #                if (this.unLinkAgreementLinePrompt(fieldNum(PurchLine, PurchQty)))
        #                {
        #                    if (this.LineDeliveryType != LineDeliveryType::DeliveryLine
        #                        && this.doReCalcPricesFromBasePrompt())
        #                    {
        #                        PurchLine::modifyPurchQty(this, _inventDim);
        #                    }
        #                    else
        #                    {
        #                        PurchLine::modifyPurchQty(this, _inventDim, false);
        #                    }
        #                }
        #                else
        #                {
        #                    this.PurchQty = this.orig().PurchQty;
        #                }
        #            }
        #        }
        #    }
        #    else
        #    {
        #        PurchLine::modifyPurchQty(this, _inventDim);
        #    }
        #}
      ENDSOURCE
      SOURCE #purchReceivedNowAllowEdit
        #/// <summary>
        #/// Determines whether the <c>ReceivedNow</c> field can be edited.
        #/// </summary>
        #/// <returns>
        #/// false for order lines with multiple deliveries; otherwise, true.
        #/// </returns>
        #boolean purchReceivedNowAllowEdit()
        #{
        #    return this.LineDeliveryType != LineDeliveryType::OrderLineWithMultipleDeliveries;
        #}
      ENDSOURCE
      SOURCE #purchTable
        #PurchTable purchTable(boolean  update = false)
        #{
        #    return PurchTable::find(this.PurchId, update);
        #}
      ENDSOURCE
      SOURCE #purchUnitModified
        #/// <summary>
        #/// Changes the purchase line based on changes in the <c>PurchUnit</c> field.
        #/// </summary>
        #/// <remarks>
        #/// This method is called from the <c>modifiedField</c> method.
        #/// </remarks>
        #public void purchUnitModified()
        #{
        #    boolean modifyPurchUnit = true;
        #    if (this.RecId && this.isLinkedToAgreement() && !this.isAgreementLinkValid())
        #    {
        #        if (!this.unLinkAgreementLinePrompt(fieldNum(PurchLine, PurchUnit)))
        #        {
        #            modifyPurchUnit = false;
        #        }
        #    }
        #
        #    if (modifyPurchUnit)
        #    {
        #        InventMovement::bufferSetTransQtyUnit(this);
        #        this.setInventReceivedNow();
        #    }
        #
        #    if (this.ProjId && this.PurchUnit && !this.ItemId && !this.ProjSalesUnitId)
        #    {
        #        this.ProjSalesUnitId = this.PurchUnit;
        #    }
        #}
      ENDSOURCE
      SOURCE #qtyMarked
        #/// <summary>
        #///    Retrieves the amount of the inventory items marked for the purchase order line.
        #/// </summary>
        #/// <returns>
        #///    The amount of inventory marked for the inventory transaction related to the purchase order line.
        #/// </returns>
        #public InventQtyMarked qtyMarked()
        #{
        #    InventTransOriginId     inventTransOriginId;
        #    InventQtyMarked         inventQtyMarked;
        #
        #    if (this.isStocked())
        #    {
        #        inventTransOriginId = InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId);
        #        if (inventTransOriginId)
        #        {
        #            inventQtyMarked = InventTransOrigin::qtyMarked(inventTransOriginId);
        #        }
        #    }
        #
        #    return inventQtyMarked;
        #}
      ENDSOURCE
      SOURCE #qualityOrderStatusDisplay
        #/// <summary>
        #/// Retrieves the status of the associated quality orders.
        #/// </summary>
        #/// <returns>
        #/// The current quality order status.
        #/// </returns>
        #
        #//BP deviation documented
        #display InventTestOrderStatusDisplay qualityOrderStatusDisplay()
        #{
        #    return InventQualityOrderTable::referenceDocumentStatusDisplay(this);
        #}
      ENDSOURCE
      SOURCE #quantityToDistribute
        #/// <summary>
        #/// Calculates and returns the quantity to be distributed to the <c>AccountingDistribution</c> table.
        #/// </summary>
        #/// <returns>
        #/// Returns the quantity to be distributed to the <c>AccountingDistribution</c> table.
        #/// </returns>
        #/// <remarks>
        #/// The <c>PurchQty</c> value is not used. Instead, the sum of the quantity invoiced plus the quantity
        #/// that remains to be invoiced, plus the quantity that remains to be delivered is used.
        #/// </remarks>
        #public PurchQty quantityToDistribute()
        #{
        #    return this.PurchQty;
        #}
      ENDSOURCE
      SOURCE #receivedInTotal
        #//BP Deviation Documented
        #display PurchQty   receivedInTotal()
        #{
        #    if (!this.InventTransId)
        #    {
        #        return 0;
        #    }
        #
        #    return this.receivedInTotalServer();
        #}
      ENDSOURCE
      SOURCE #receivedInTotalPrice
        #//BP Deviation Documented
        #server display AmountCur  receivedInTotalPrice()
        #{
        #    AmountCur   receivedAmount;
        #
        #    if (this.ItemId)
        #    {
        #        receivedAmount   = (select sum(LineAmount) from vendInvoiceTrans
        #                                index hint TransIdIdx
        #                                where vendInvoiceTrans.InventTransId == this.InventTransId).LineAmount;
        #
        #        receivedAmount  += (this.receivedOnPackingSlipInTotal() * InventTable::findCostPcsPrice(this.ItemId, this.InventDimId));
        #    }
        #
        #    return receivedAmount;
        #}
      ENDSOURCE
      SOURCE #receivedInTotalServer
        #server PurchQty receivedInTotalServer()
        #{
        #    return this.type().receivedInTotal();
        #}
      ENDSOURCE
      SOURCE #receivedInventInTotal
        #//BP Deviation Documented
        #server display InventQty    receivedInventInTotal()
        #{
        #    InventTransIdSum    inventTransIdSum;
        #    InventQty           inventQty = 0;
        #
        #    if (this.InventTransId && this.isStocked())
        #    {
        #        inventTransIdSum = InventTransIdSum::newTransOriginId(InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId));
        #
        #        inventQty = (inventTransIdSum.physical() + inventTransIdSum.financial());
        #    }
        #
        #    return inventQty;
        #}
      ENDSOURCE
      SOURCE #receivedOnPackingSlipInTotal
        #/// <summary>
        #/// Retrieves the quantity received on packing slips.
        #/// </summary>
        #/// <returns>
        #/// The quantity received on packing slips.
        #/// </returns>
        #public PurchQty receivedOnPackingSlipInTotal()
        #{
        #    VendPackingSlipTrans            vendPackingSlipTrans;
        #
        #    select sum(Qty) from vendPackingSlipTrans
        #        where vendPackingSlipTrans.InventTransId == this.InventTransId;
        #
        #    return vendPackingSlipTrans.Qty;
        #}
      ENDSOURCE
      SOURCE #referenceWarningTxt
        #/// <summary>
        #/// Retrieves a warning message used for a line which references other entities.
        #/// </summary>
        #/// <returns>A warning message used for a line which references other entities.</returns>
        #str referenceWarningTxt()
        #{
        #    SalesLine       salesLine;
        #    PurchLine       purchLine;
        #    PurchReqLine    purchReqLine;
        #
        #    if (this.InventRefId)
        #    {
        #        switch (this.ItemRefType)
        #        {
        #            case InventRefType::Sales:
        #                salesLine = SalesLine::findInventTransId(this.InventRefTransId);
        #                if (salesLine)
        #                {
        #                    return strFmt("@SYS75609", salesLine.SalesId, salesLine.SalesStatus, this.ItemId);
        #                }
        #                break;
        #            case InventRefType::Purch:
        #                purchLine = PurchLine::findInventTransId(this.InventRefTransId);
        #                if (purchLine)
        #                {
        #                    return strFmt("@SYS75607", purchLine.PurchId, purchLine.PurchStatus, this.ItemId);
        #                }
        #                break;
        #
        #        }
        #    }
        #    // Show warning when deleting unconfirmed purchase line connected to a requisition.
        #    else if (this.PurchReqLineRefId
        #        && !this.isVersioned())
        #    {
        #        purchReqLine = PurchReqLine::findLineRefId(this.PurchReqLineRefId);
        #        return strFmt("@SYS342715", purchReqLine.SequenceNumber, this.PurchReqId, this.LineNumber);
        #    }
        #
        #    return '';
        #}
      ENDSOURCE
      SOURCE #registered
        #//BP Deviation Documented
        #display InventQtyRegistered registered()
        #{
        #    if (this.InventTransId && this.isStocked())
        #    {
        #        return InventTransIdSumSingleStatus::qtyRegistered(InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId));
        #    }
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #registeredInPurchUnit
        #//BP Deviation Documented
        #display PurchQtyRegistered registeredInPurchUnit()
        #{
        #    PurchQtyRegistered purchQtyRegistered;
        #
        #    if (this.isStocked())
        #    {
        #        purchQtyRegistered = this.registered();
        #        if (purchQtyRegistered)
        #        {
        #            purchQtyRegistered = this.unitConvertInvent2Purch(purchQtyRegistered);
        #        }
        #    }
        #    else
        #    {
        #        purchQtyRegistered = TradeNonStockedRegistrationHelper::qtyRegistered(this.SourceDocumentLine);
        #    }
        #
        #    return purchQtyRegistered;
        #}
      ENDSOURCE
      SOURCE #registeredQuantityAndServices
        #/// <summary>
        #/// Gets the registered quantity for the line or the line quantity for a non-tangible line that cannot
        #/// be registered.
        #/// </summary>
        #/// <returns>
        #/// A <c>PurchQty</c> value.
        #/// </returns>
        #/// <remarks>
        #/// This method is used during posting for the <c>PurchUpdate</c> enumeration option to show the
        #/// registered quantity and services.
        #/// </remarks>
        #public InventQty registeredQuantityAndServices()
        #{
        #    InventQty   quantity;
        #
        #    if (this.isTangible())
        #    {
        #        //For lines with tangible items the registered quantity is returned
        #        quantity =  this.registered();
        #    }
        #    else
        #    {
        #        //For non-tangible lines, the ordered quantity is returned
        #        quantity = this.unitConvertPurch2Invent(this.PurchQty);
        #    }
        #
        #    return quantity;
        #}
      ENDSOURCE
      SOURCE #registeredQuantityAndServicesInPurchUnit
        #/// <summary>
        #/// Gets the registered quantity for the line or the line quantity for a non-tangible line that cannot
        #/// be registered.
        #/// </summary>
        #/// <returns>
        #/// A <c>PurchQty</c> value.
        #/// </returns>
        #/// <remarks>
        #/// This method is used during posting for the <c>PurchUpdate</c> enumeration option to show the
        #/// registered quantity and services.
        #/// </remarks>
        #public PurchQty registeredQuantityAndServicesInPurchUnit()
        #{
        #    PurchQty quantity;
        #
        #    if (this.isTangible())
        #    {
        #        //For lines with tangible items the registered quantity is returned
        #        quantity = this.registeredInPurchUnit();
        #    }
        #    else
        #    {
        #        //For non-tangible lines, the line quantity is returned
        #        quantity = this.PurchQty;
        #    }
        #
        #    return quantity;
        #}
      ENDSOURCE
      SOURCE #reqTrans
        #/// <summary>
        #/// Finds the corresponding record in the <c>ReqTrans</c> table for the current record in the
        #/// <c>PurchLine</c> table.
        #/// </summary>
        #/// <param name="_reqPlanVersionRefRecId">
        #/// Tthe ID of the record in the <c>ReqPlanVersion</c> table; optional.
        #/// </param>
        #/// <param name="_forupdate">
        #/// A Boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #/// A record in the <c>ReqTrans</c> table; otherwise, an empty record.
        #/// </returns>
        #ReqTrans reqTrans(
        #    RefRecId _reqPlanVersionRefRecId = ReqPlanVersion::findActiveReqPlanIdDynamic().RecId,
        #    boolean  _forupdate              = false)
        #{
        #    ReqTrans                    reqTrans;
        #    InventTransOriginPurchLine  inventTransOriginPurchLine;
        #
        #
        #    reqTrans.selectForUpdate(_forupdate);
        #
        #    select firstonly reqTrans
        #        where reqTrans.PlanVersion  == _reqPlanVersionRefRecId
        #           && reqTrans.RefType      == ReqRefType::Purch
        #           && reqTrans.RefId        == this.PurchId
        #        exists join inventTransOriginPurchLine
        #            where inventTransOriginPurchLine.InventTransOrigin      == reqTrans.InventTransOrigin
        #               && inventTransOriginPurchLine.PurchLineDataAreaId    == this.DataAreaId
        #               && inventTransOriginPurchLine.PurchLineInventTransId == this.InventTransId;
        #
        #    return reqTrans;
        #}
      ENDSOURCE
      SOURCE #resetDistributions
        #/// <summary>
        #/// Removes and regenerates the distributions for the current document.
        #/// </summary>
        #/// <remarks>
        #/// This is used by the commitments feature to reset the accounting distributions after the commitment for the current line is changed.
        #/// </remarks>
        #public void resetDistributions()
        #{
        #    SourceDocumentLine  sourceDocumentLine;
        #
        #    // Check to see that the commitments feature is enabled and that there are existing distributions.
        #    if (PurchCommitmentHeader_PSN::isCommitmentsFeatureEnabled() && AccountingDistribution::existSourceDocumentLine(this.SourceDocumentLine))
        #    {
        #        select firstonly sourceDocumentLine
        #            where sourceDocumentLine.RecId == this.SourceDocumentLine;
        #
        #        // set the accounting state to draft
        #        SourceDocumentLineProcessor::submitSourceDocumentLine(sourceDocumentLine, false, SourceDocumentLineAccountingStatus::Draft, AccountingDistributionViewModelCaller::construct(AccountingDistributionMethod::None));
        #
        #        // set the accounting state back to fully distributed
        #        SourceDocumentLineProcessor::submitSourceDocumentLine(sourceDocumentLine, false, SourceDocumentLineAccountingStatus::FullyDistributed, AccountingDistributionViewModelCaller::construct(AccountingDistributionMethod::None));
        #    }
        #}
      ENDSOURCE
      SOURCE #resetInvent
        #server void  resetInvent(boolean update = true)
        #{
        #    this.PurchQty                       = 0;
        #    this.QtyOrdered                     = 0;
        #
        #    this.PurchPrice    = 0;
        #    this.LineAmount    = 0;
        #
        #    this.RemainPurchPhysical    = this.PurchQty;
        #    this.RemainPurchFinancial   = 0;
        #    this.RemainInventPhysical   = this.QtyOrdered;
        #    // 1877
        #    this.RemainInventFinancial  = 0;
        #    // 1877
        #
        #    InventMovement::bufferSetTransQtyUnit(this);
        #    this.setInventReceivedNow();
        #
        #    if (update)
        #    {
        #        this.update();
        #        this.PurchStatus   = PurchStatus::Canceled;
        #        this.doUpdate();
        #
        #        InterCompanyUpdateStatus::synchronize(this);
        #    }
        #    else
        #    {
        #        this.PurchStatus   = PurchStatus::Canceled;
        #    }
        #}
      ENDSOURCE
      SOURCE #returnActionChanged
        #void  returnActionChanged(InventDim inventDim = null)
        #{
        #    ReturnActionDefaults  returnActionDefaults = ReturnActionDefaults::find(this.moduleType(), this.ReturnActionId);
        #
        #    if (returnActionDefaults.RecId)
        #    {
        #        if (!inventDim)
        #        {
        #            inventDim = this.inventDim();
        #        }
        #
        #        inventDim.mergeUsedDim(InventDimGroupSetup::newItemId(this.ItemId), returnActionDefaults.inventDim());
        #        this.setInventDimIdFromInventDim(inventDim);
        #
        #
        #        if (this.ProjId && !this.purchTable().isProjectSalesItemReqPO()
        #            && !this.getProjCreditNoteSource().purchTable().isProjectSalesItemReqPO())
        #        {
        #            this.Scrap          = returnActionDefaults.Scrap;
        #
        #            if (this.ItemRefType != InventRefType::Sales &&
        #                this.ItemRefType != InventRefType::InventJournal)
        #            {
        #                this.Scrap  = true;
        #            }
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #runPriceDiscPolicyDialog
        #/// <summary>
        #/// Calls the <c>runPriceDiscPolicyDialog</c> method of the <c>PriceDiscResultFields</c> table map.
        #/// </summary>
        #/// <param name="_skipCheck">
        #/// A boolean that specifies whether to skip field change validation before start of the dialog;
        #/// optional.
        #/// </param>
        #/// <returns>
        #/// The return value of the <c>runPriceDiscPolicyDialog</c> method of the <c>PriceDiscResultFields</c>
        #/// table map.
        #/// </returns>
        #public boolean runPriceDiscPolicyDialog(boolean _skipCheck = false)
        #{
        #
        #    return this.PriceDiscResultFields::runPriceDiscPolicyDialog(0,
        #                                                                false,
        #                                                                _skipCheck);
        #}
      ENDSOURCE
      SOURCE #salesLine
        #SalesLine salesLine(boolean _update = false)
        #{
        #    SalesLine salesLine;
        #
        #    if (this.ItemRefType == InventRefType::Sales && this.InventRefId && this.InventRefTransId)
        #    {
        #        salesLine = SalesLine::findInventTransId(this.InventRefTransId, _update);
        #    }
        #
        #    return salesLine;
        #}
      ENDSOURCE
      SOURCE #salesPurchTable
        #SalesPurchTable salesPurchTable()
        #{
        #    return this.purchTable();
        #}
      ENDSOURCE
      SOURCE #setAddressFromInventDim
        #public void setAddressFromInventDim(InventDim _inventDim
        #                                    , boolean _setTaxGroupFromPurchTable = true
        #)
        #{
        #    InventLocation              inventLocation;
        #    InventSite                  inventSite;
        #    LogisticsLocationRecId      location;
        #
        #    if (_inventDim.RecId
        #    &&  !this.isDropShipment())
        #    {
        #        inventLocation  = InventLocation::find(_inventDim.InventLocationId);
        #        location        = LogisticsLocationDefault::findSimpleDefault(inventLocation,
        #                            LogisticsLocationRole::findBytype(LogisticsLocationRoleType::Delivery)).RecId;
        #
        #        if (location)
        #        {
        #            this.setLocation(location, inventLocation);
        #        }
        #        else if (inventLocation.VendAccount
        #                // <GBR>
        #                || this.PurchaseType == PurchaseType::ReturnItem
        #                // </GBR>
        #                )
        #        {
        #            // <GBR>
        #            if (this.PurchaseType != PurchaseType::ReturnItem)
        #            {
        #            // </GBR>
        #            this.setAddressFromVendTable(VendTable::find(inventLocation.VendAccount));
        #            // <GBR>
        #            }
        #            else
        #            {
        #                this.setAddressFromPurchTable();
        #            }
        #            // </GBR>
        #        }
        #        else
        #        {
        #            inventSite  = InventSite::find(_inventDim.InventSiteId);
        #            if (inventSite)
        #            {
        #                location   = LogisticsLocationDefault::findSimpleDefault(inventSite, LogisticsLocationRole::findBytype(LogisticsLocationRoleType::Delivery)).RecId;
        #            }
        #
        #            if (location)
        #            {
        #                this.setLocation(location, inventSite);
        #            }
        #            else
        #            {
        #                this.setAddressFromPurchTable();
        #
        #                if (_setTaxGroupFromPurchTable)
        #                {
        #                    this.TaxGroup = this.purchTable().TaxGroup;
        #                }
        #            }
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #setAddressFromPurchLine
        #public void  setAddressFromPurchLine(PurchLine  _purchLine)
        #{
        #    this.DeliveryPostalAddress      = _purchLine.DeliveryPostalAddress;
        #    this.DeliveryName               = _purchLine.DeliveryName;
        #    this.AddressRefRecId            = _purchLine.AddressRefRecId;
        #    this.AddressRefTableId          = _purchLine.AddressRefTableId;
        #}
      ENDSOURCE
      SOURCE #setAddressFromPurchTable
        #public void  setAddressFromPurchTable(PurchTable  _purchTable = this.purchTable())
        #{
        #    //Note: Any change made here must also be made in purchTable.copyAddressToLine
        #
        #    this.DeliveryPostalAddress      = _purchTable.DeliveryPostalAddress;
        #    this.DeliveryName               = _purchTable.DeliveryName;
        #    this.AddressRefRecId            = _purchTable.AddressRefRecId;
        #    this.AddressRefTableId          = _purchTable.AddressRefTableId;
        #}
      ENDSOURCE
      SOURCE #setAddressFromVendTable
        #void  setAddressFromVendTable(VendTable _vendTable)
        #{
        #    this.DeliveryName               =_vendTable.name();
        #    this.DeliveryPostalAddress      = DirParty::primaryPostalAddress(_vendTable.Party).RecId;
        #    this.AddressRefRecId            = _vendTable.RecId;
        #    this.AddressRefTableId          = _vendTable.TableId;
        #}
      ENDSOURCE
      SOURCE #setAgreementLine
        #/// <summary>
        #/// Sets the <c>AgreementLine</c> when the procurement category is changed for a purchase line.
        #/// </summary>
        #private void setAgreementLine()
        #{
        #    EcoResCategory ecoResCategory, ecoResCategoryChildren;
        #    AgreementLine  agreementLineLocal;
        #    DataAreaId     companyId = CompanyInfo::find().company();
        #
        #    if(this.isCategoryBased() && this.purchTable().MatchingAgreement)
        #    {
        #        select firstOnly RecId from ecoResCategory order by ecoResCategory.Level desc
        #            join Category, Agreement from agreementLineLocal
        #                where ecoResCategory.RecId == agreementLineLocal.Category
        #                    && agreementLineLocal.Agreement == this.purchTable().MatchingAgreement
        #                    && agreementLineLocal.IsDeleted == NoYes::No
        #                    && agreementLineLocal.InventDimDataAreaId == companyId
        #                    && agreementLineLocal.ExpirationDate >= (this.DeliveryDate ? this.DeliveryDate : systemDateGet())
        #                    && agreementLineLocal.EffectiveDate <= (this.DeliveryDate ? this.DeliveryDate : systemDateGet())
        #            exists join ParentCategory, RecId from ecoResCategoryChildren
        #                where ecoResCategoryChildren.CategoryHierarchy == ecoResCategory.CategoryHierarchy
        #                    && ecoResCategoryChildren.NestedSetLeft >= ecoResCategory.NestedSetLeft
        #                    && ecoResCategoryChildren.NestedSetRight <= ecoResCategory.NestedSetRight
        #                    && (ecoResCategory.RecId == this.ProcurementCategory || ecoResCategoryChildren.RecId == this.ProcurementCategory);
        #
        #        if(agreementLineLocal)
        #        {
        #            this.MatchingAgreementLine = agreementLineLocal.RecId;
        #        }
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #setAgreementPrice
        #client server void  setAgreementPrice(AgreementLineQuantityCommitment _agreementLine)
        #{
        #    this.PurchUnit = _agreementLine.ProductUnitOfMeasure;
        #    this.SalesPurchLine::setAgreementQtyAndPrice(_agreementLine);
        #}
      ENDSOURCE
      SOURCE #setCFOP_BR
        #/// <summary>
        #/// It is responsible for setting CFOP code
        #/// </summary>
        #/// <param name="_askToUser">
        #/// boolean to define if should request user intereaction
        #/// </param>
        #// <GBR>
        #public void setCFOP_BR(boolean _askToUser = false)
        #{
        #    CFOPValidation_BR           cfopValidation;
        #
        #    cfopValidation       = CFOPValidation_BR::construct(this);
        #    if (!cfopValidation.checkCFOP(_askToUser))
        #    {
        #        this.cfopTable_BR    = cfopValidation.getDefaultCFOP(_askToUser);
        #        this.onCFOPChange_BR();
        #    }
        #}
        #// </GBR>
      ENDSOURCE
      SOURCE #setDeliveryName
        #/// <summary>
        #///     Sets the delivery name field based on the specified logistic location.
        #/// </summary>
        #public void setDeliveryName()
        #{
        #    this.TradePostalAddress::setDeliveryName();
        #}
      ENDSOURCE
      SOURCE #setDepreciationStartDate
        #void setDepreciationStartDate(boolean _forceSet = false)
        #{
        #    if (this.AssetId != this.orig().AssetId ||
        #        this.AssetBookId != this.orig().AssetBookId || _forceSet)
        #    {
        #        this.DepreciationStartDate = AssetBook::getDepreciationStartDate(this.AssetId, this.AssetBookId);
        #    }
        #}
      ENDSOURCE
      SOURCE #setExciseFields_IN
        #/// <summary>
        #/// Sets excise fields of purch line.
        #/// </summary>
        #// <GIN>
        #public void setExciseFields_IN()
        #{
        #    PurchLine_IN purchLine_IN;
        #
        #    if (TaxParameters::isExciseEnable_IN())
        #    {
        #        purchLine_IN = this.purchLine_IN();
        #        if (!TaxExciseTypeController_IN::isDSAAllowed(purchLine_IN.ExciseType_IN, purchLine_IN.ExciseRecordType_IN, this.ItemId))
        #        {
        #            purchLine_IN.dsa_in = false;
        #        }
        #
        #        if(!TaxExciseTypeController_IN::isDirectSettlementAllowed(
        #        purchLine_IN.ExciseType_IN, purchLine_IN.ExciseRecordType_IN, this.PurchQty > 0 ? TaxDirection::IncomingTax : TaxDirection::OutgoingTax))
        #        {
        #            purchLine_IN.DirectSettlement_IN = DirectSettlement_IN::None;
        #        }
        #
        #        this.packPurchLine_IN(purchLine_IN);
        #    }
        #}
        #
        #// </GIN>
      ENDSOURCE
      SOURCE #setInventDimId
        #/// <summary>
        #/// Applies the <c>InventDimId</c> parameter to the <c>InventDimId</c> field and applies default
        #/// values, depending on the new inventory dimensions.
        #/// </summary>
        #/// <param name="_inventDimId">
        #/// The <c>InventDimId</c> value that should be applied to the <c>InventDimId</c> field.
        #/// </param>
        #/// <param name="_inventDim">
        #/// The <c>InventDim</c> record buffer related to the <c>InventDimId</c> parameters; optional.
        #/// </param>
        #public void setInventDimId(InventDimId _inventDimId, InventDim _inventDim = InventDim::find(_inventDimId))
        #{
        #    InventDim   currentInventDim = this.InventDimId == _inventDimId ? _inventDim : this.inventDim();
        #
        #    this.InventDimId = _inventDimId;
        #    this.linkInventDim2Dimension(_inventDim, currentInventDim);
        #}
      ENDSOURCE
      SOURCE #setInventDimIdFromInventDim
        #/// <summary>
        #/// Finds or creates an <c>InventDimId</c> value for the <c>InventDim</c> parameter and applies the
        #/// found <c>InventDimId</c> value to the <c>PurchLine.inventDimId</c> field.
        #/// </summary>
        #/// <param name="_inventDim">
        #/// An <c>InventDim</c> record buffer that should be referenced by the current <c>PurchLine</c> record
        #/// buffer.
        #/// </param>
        #public void setInventDimIdFromInventDim(InventDim _inventDim)
        #{
        #    InventDim   inventDim;
        #
        #    inventDim = InventDim::findOrCreate(_inventDim);
        #    this.setInventDimId(inventDim.InventDimId, inventDim);
        #}
      ENDSOURCE
      SOURCE #setInventReceivedNow
        #void  setInventReceivedNow()
        #{
        #    if (this.isStocked())
        #    {
        #        this.InventReceivedNow = UnitOfMeasureConverter::convert(
        #            this.PurchReceivedNow,
        #            UnitOfMeasure::unitOfMeasureIdBySymbol(this.PurchUnit),
        #            UnitOfMeasure::unitOfMeasureIdBySymbol(this.inventTable().inventUnitId()),
        #            NoYes::Yes,
        #            InventTable::itemProduct(this.ItemId));
        #    }
        #    else
        #    {
        #        this.InventReceivedNow = 0;
        #    }
        #}
      ENDSOURCE
      SOURCE #setListCode
        #void  setListCode()
        #{
        #}
      ENDSOURCE
      SOURCE #setLocation
        #/// <summary>
        #///    Sets delivery address information and related information.
        #/// </summary>
        #/// <param name="_locationRecId">
        #///    The record ID of the logistics location.
        #/// </param>
        #/// <param name="_source">
        #///    The record that has an associated address.
        #/// </param>
        #/// <remarks>
        #///    If <c>_source</c> parameter is not specified, the address related information will be set based on the logistics location.
        #/// </remarks>
        #void  setLocation(LogisticsLocationRecId  _locationRecId, Common _source = null)
        #{
        #    LogisticsLocation location = LogisticsLocation::find(_locationRecId);
        #
        #    // <GBR>
        #    if (!BrazilParameters::isEnabled() || this.PurchaseType != PurchaseType::ReturnItem)
        #    {
        #    // </GBR>
        #    if (location.Description)
        #        this.DeliveryName       = location.Description;
        #
        #    this.DeliveryPostalAddress  = LogisticsPostalAddress::addressRecIdFromLocationRecId(location.RecId);
        #
        #    if(_source)
        #    {
        #        LogisticsLocationSelectForm_PurchLine::construct(this).copyAddressToCaller(_source,
        #            this.DeliveryPostalAddress);
        #    }
        #    else
        #    {
        #        LogisticsLocationSelectForm_PurchLine::construct(this).copyAddressToCaller(this.getDeliveryEntityRecord(),
        #            this.DeliveryPostalAddress);
        #    }
        #    // <GBR>
        #    }
        #    // </GBR>
        #}
      ENDSOURCE
      SOURCE #setPostingProfile_RU
        #void setPostingProfile_RU()
        #{
        #    PurchLine_W         purchLine_W;
        #    InventProfileId_RU  inventProfile = this.inventDim().InventProfileId_RU;
        #
        #    if (EcoResDimensionGroupSetup::isInventoryDimensionActiveForItem(this.ItemId, fieldNum(InventDim, InventProfileId_RU)) &&
        #        (inventProfile && (! this.RecId || inventProfile != this.orig().inventDim().InventProfileId_RU)))
        #    {
        #        purchLine_W = this.purchLine_W();
        #        purchLine_W.PostingProfile_RU = InventProfileCustVendLedger_RU::vendPostingProfile(inventProfile);
        #        this.packPurchLine_W(purchLine_W);
        #    }
        #}
      ENDSOURCE
      SOURCE #setPriceAgreement
        #server void  setPriceAgreement(InventDim inventDim, PriceDiscPolicyCheckPolicy  _checkPolicy = null )
        #{
        #    this.SalesPurchLine::setPriceAgreement(inventDim, true, _checkPolicy);
        #}
      ENDSOURCE
      SOURCE #setPriceDisc
        #server void  setPriceDisc(InventDim inventDim)
        #{
        #    PriceDiscPolicyCheckPolicy  checkPolicy = PriceDiscPolicyCheckPolicy::newFromParm(this.PriceDiscResultFields::parmPriceDiscResultFields());
        #
        #    this.setPriceAgreement(inventDim, checkPolicy);
        #    this.LineAmount = this.calcLineAmountForced(this.PurchQty, checkPolicy);
        #    // <GIN>
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        this.assessableValue_IN();
        #    }
        #    // </GIN>
        #}
      ENDSOURCE
      SOURCE #setPriceDiscChangePolicy
        #/// <summary>
        #/// Calls the <c>setPriceDiscChangePolicy</c> method of the <c>PriceDiscResultFields</c> table map.
        #/// </summary>
        #/// <param name="_policySource">
        #/// An outcome of the <c>PriceDiscSystemSource</c> enumeration that specifies the source of the policy.
        #/// </param>
        #/// <param name="_fieldId">
        #/// A field ID.
        #/// </param>
        #client server void setPriceDiscChangePolicy(PriceDiscSystemSource _policySource, RefFieldId _fieldId = 0)
        #{
        #    if (!this.isInterCompanyOrder())
        #    {
        #        this.PriceDiscResultFields::createPriceDiscChangePolicy(ModuleSalesPurch::Purch, _policySource, _fieldId);
        #    }
        #}
      ENDSOURCE
      SOURCE #setPriceDiscMarkup
        #/// <summary>
        #/// Calls the <c>setPriceDiscMarkup</c> method on the <c>SalesPurchLine</c> table map.
        #/// </summary>
        #/// <param name="_priceDisc">
        #/// An instance of the <c>PriceDisc</c> class.
        #/// </param>
        #/// <param name="_checkPolicy">
        #/// An instance of the <c>PriceDiscPolicyCheckPolicy</c> class.
        #/// </param>
        #void setPriceDiscMarkup(PriceDisc_Price _priceDisc, PriceDiscPolicyCheckPolicy _checkPolicy)
        #{
        #    this.SalesPurchLine::setPriceDiscMarkup(_priceDisc, _checkPolicy);
        #}
      ENDSOURCE
      SOURCE #setPriceDiscPriceUnit
        #/// <summary>
        #/// Calls the <c>setPriceDiscPriceUnit</c> method on the <c>SalesPurchLine</c> table map.
        #/// </summary>
        #/// <param name="_priceDisc">
        #/// An instance of the <c>PriceDisc</c> class.
        #/// </param>
        #/// <param name="_checkPolicy">
        #/// An instance of the <c>PriceDiscPolicyCheckPolicy</c> class.
        #/// </param>
        #void setPriceDiscPriceUnit(PriceDisc_Price _priceDisc, PriceDiscPolicyCheckPolicy _checkPolicy)
        #{
        #    this.SalesPurchLine::setPriceDiscPriceUnit(_priceDisc, _checkPolicy);
        #}
      ENDSOURCE
      SOURCE #setPurchStatus
        #void  setPurchStatus(boolean _updateHeader = false)
        #{
        #    PurchLineType purchLineType;
        #
        #    purchLineType = this.type();
        #    purchLineType.setPurchStatus(this, null, _updateHeader);
        #}
      ENDSOURCE
      SOURCE #setRAssetInventProfileId_RU
        #public void setRAssetInventProfileId_RU()
        #{
        #    RAssetParameters    rAssetParameters;
        #    InventDim           inventDim;
        #
        #    rAssetParameters = RAssetParameters::find();
        #
        #    if (this.ItemId                                    &&
        #        InventTable::find(this.ItemId).AssetGroupId_RU &&
        #        rAssetParameters.LowCostAssetInventProfileId)
        #    {
        #        if (RAssetTable::acquisitionPriceFromPurchLine(this) <= rAssetParameters.LowCostAmountLimit)
        #        {
        #            inventDim = InventDim::find(this.InventDimId);
        #            inventDim.InventProfileId_RU = rAssetParameters.LowCostAssetInventProfileId;
        #            this.InventDimId = InventDim::findOrCreate(inventDim).InventDimId;
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #setStockedProduct
        #/// <summary>
        #///    Sets the <c>StockedProduct</c> field for the line based on line type and item model group for the associated item.
        #/// </summary>
        #public void setStockedProduct()
        #{
        #    this.type().setStockedProduct();
        #}
      ENDSOURCE
      SOURCE #setTaxGroup
        #void  setTaxGroup(TaxGroup  _taxGroup)
        #{
        #    PurchLineType  purchLineType;
        #
        #    purchLineType = this.type();
        #    purchLineType.setTaxGroup(_taxGroup);
        #}
      ENDSOURCE
      SOURCE #setTaxGroupAndTaxItemGroupFields_BR
        #/// <summary>
        #/// Set PurchLine.TaxGroup and PurchLine.TaxItemGroup based on <c>TaxesMatrix</c>
        #/// </summary>
        #public void setTaxGroupAndTaxItemGroupFields_BR()
        #{
        #    TaxGroup            taxGroup;
        #    TaxItemGroup        taxItemGroup;
        #
        #    [taxGroup, taxItemGroup] = TaxesMatrix_BR::findTaxGroupAndTaxItemGroup(this.cfopTable_BR,
        #                                                                           this.purchTable().purchTable_BR().SalesPurchOperationType_BR,
        #                                                                           SalesPurchTrntype_BR::Purchase,
        #                                                                           CustVendType_BR::Vendor,
        #                                                                           this.purchTable().OrderAccount,
        #                                                                           this.ItemId,
        #                                                                           this.inventDim().inventSite().fiscalEstablishment().fiscalEstablishmentGroup());
        #    if (!taxGroup)
        #    {
        #        taxGroup = this.purchTable().TaxGroup;
        #    }
        #
        #    if (!taxItemGroup)
        #    {
        #        taxItemGroup = this.inventTable().purchTaxItemGroupId();
        #    }
        #
        #    this.TaxGroup      = taxGroup       ? taxGroup     : this.TaxGroup;
        #    this.TaxItemGroup  = taxItemGroup   ? taxItemGroup : this.TaxItemGroup;
        #}
      ENDSOURCE
      SOURCE #setTaxInfoOfCompany_IN
        #/// <summary>
        #/// Sets tax information of company.
        #/// </summary>
        #/// <param name="_companyInfo">
        #/// The company information.
        #/// </param>
        #// <GIN>
        #public void setTaxInfoOfCompany_IN(CompanyInfo _companyInfo)
        #{
        #    DirPartyLocation        dirPartyLocation;
        #    PurchLine_IN            purchLine_IN;
        #
        #    dirPartyLocation = DirPartyLocation::findPrimaryPartyLocation(_companyInfo.RecId);
        #    if (dirPartyLocation)
        #    {
        #        purchLine_IN = this.purchLine_IN();
        #
        #        purchLine_IN.CompanyLocation_IN = LogisticsLocation::find(dirPartyLocation.Location).RecId;
        #        purchLine_IN.modifiedFieldValue(fieldStr(PurchLine_IN, CompanyLocation_IN));
        #
        #        this.packPurchLine_IN(purchLine_IN);
        #    }
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #sourceDocumentLine
        #public SourceDocumentLine sourceDocumentLine()
        #{
        #    return SourceDocumentLine::find(this.SourceDocumentLine);
        #}
      ENDSOURCE
      SOURCE #stockedProductChanged
        #/// <summary>
        #/// Applies default values or sets the inventory related field values to null when the <c>StockedProduct</c> field value is changed.
        #/// </summary>
        #void stockedProductChanged()
        #{
        #    if (this.isStocked())
        #    {
        #        // default inventory fields
        #        this.QtyOrdered             = this.calcQtyOrdered();
        #        this.RemainInventPhysical   = this.QtyOrdered;
        #        this.RemainInventFinancial  = 0;
        #        this.Scrap                  = NoYes::No;
        #        this.ItemPBAId              = '';
        #        this.type().initTagging(this.inventTable());
        #        this.setInventReceivedNow();
        #        TradeNonStockedRegistrationHelper::newFromSalesPurchLine(this).deletePendingRegistration();
        #    }
        #    else
        #    {
        #        // blank out inventory fields
        #        this.QtyOrdered             = 0;
        #        this.InventReceivedNow      = 0;
        #        this.RemainInventPhysical   = 0;
        #        this.RemainInventFinancial  = 0;
        #        this.Scrap                  = NoYes::No;
        #        this.ItemTagging            = NoYes::No;
        #        this.CaseTagging            = NoYes::No;
        #        this.PalletTagging          = NoYes::No;
        #        this.ItemPBAId              = '';
        #    }
        #}
      ENDSOURCE
      SOURCE #submitToWorkflow
        #/// <summary>
        #/// Activates the purchase order line workflow.
        #/// </summary>
        #/// <param name="_workflowTemplateName">
        #/// The AOT name of the workflow template the purchase order line will be submitted to.
        #/// </param>
        #/// <param name="_workflowComment">
        #/// The reason for submitting.
        #/// </param>
        #/// <param name="_activatingFromWeb">
        #/// A Boolean value that indicates whether the submission is coming from the enterprise portal.
        #/// </param>
        #/// <remarks>
        #/// This method starts the workflow configuration by calling the <c>ActivateWorkflowTemplate</c> method
        #/// on the <c>Workflow</c> class with information about the purchase order line record.
        #/// </remarks>
        #public void  submitToWorkflow(WorkflowTypeName		 _workflowTemplateName,
        #                              WorkflowComment       _workflowComment,
        #                              boolean               _activatingFromWeb = false)
        #{
        #    ttsbegin;
        #
        #    Workflow::activateFromWorkflowType(_workflowTemplateName,
        #                                           this.RecId,
        #                                           _workflowComment,
        #                                           _activatingFromWeb,
        #                                           curUserId());
        #
        #    PurchLine::setWorkflowState(this.RecId, TradeWorkflowState::Submitted);
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #taxationOrigin_BR
        #/// <summary>
        #/// Displays the origin of the item in the current purchase order line.
        #/// </summary>
        #/// <returns>
        #/// The origin of the item to be used for taxation.
        #/// </returns>
        #//BP Deviation Documented
        #display FITaxationOrigin_BR taxationOrigin_BR()
        #{
        #    return this.inventTable().TaxationOrigin_BR;
        #}
      ENDSOURCE
      SOURCE #taxByLine
        #real taxByLine()
        #{
        #    TaxTrans taxTrans;
        #
        #    if (this.InventTransId)
        #    {
        #        select sum(TaxAmount) from taxTrans
        #        where taxTrans.InventTransId == this.InventTransId;
        #    }
        #
        #    return taxTrans.TaxAmount;
        #}
      ENDSOURCE
      SOURCE #taxDate
        #TransDate taxDate(TransDate transDate)
        #{
        #    return TaxParameters::find().TaxCalculationDateType == TaxCalculationDateType::DeliveryDate ? this.deliveryDate(transDate) : transDate;
        #}
      ENDSOURCE
      SOURCE #taxFiscalClassification_BR
        #/// <summary>
        #/// Displays the fiscal classification code of the item in the purchase order line.
        #/// </summary>
        #/// <returns>
        #/// The fiscal classification code of the item.
        #/// </returns>
        #//BP Deviation Documented
        #display TaxFiscalClassificationId_BR taxFiscalClassification_BR()
        #{
        #    return this.inventTable().TaxFiscalClassification_BR;
        #}
      ENDSOURCE
      SOURCE #taxPcsPrice
        #PriceCur taxPcsPrice(TransDate transDate = systemDateGet(), Tax _tax = null)
        #{
        #    return this.SalesPurchLine::taxPcsPrice(transDate, _tax);
        #}
      ENDSOURCE
      SOURCE #taxWithholdCodeType_IN
        #/// <summary>
        #/// Gets the tax withhold code type.
        #/// </summary>
        #/// <returns>
        #/// The instance of the <c>TaxWithholdCodeType_IN</c> class.
        #/// </returns>
        #public TaxWithholdCodeType_IN taxWithholdCodeType_IN()
        #{
        #    TaxWithholdCodeType_IN  taxWithholdCodeType = TaxWithholdCodeType_IN::None;
        #    PurchLine_IN            purchLine_IN = this.purchLine_IN();
        #
        #    if  (purchLine_IN.tdsGroup_IN != '')
        #    {
        #        taxWithholdCodeType = TaxWithholdCodeType_IN::TDS;
        #    }
        #    else if(purchLine_IN.tcsGroup_IN != '')
        #    {
        #        taxWithholdCodeType = TaxWithholdCodeType_IN::TCS;
        #    }
        #    return taxWithholdCodeType;
        #}
      ENDSOURCE
      SOURCE #templateName
        #/// <summary>
        #/// Sets or gets the information about the <c>DistributionTemplate</c> record for creating
        #/// distributions.
        #/// </summary>
        #/// <param name="_set">
        #/// A Boolean value that indicates whether to update.
        #/// </param>
        #/// <param name="_templateName">
        #/// The name of the distribution template that will be used to create distributions.
        #/// </param>
        #/// <returns>
        #/// The name of the distribution template.
        #/// </returns>
        #// BP Deviation Documented
        #public edit TemplateName templateName(boolean _set, TemplateName _templateName)
        #{
        #    TemplateName                      templateName = "";
        #    AccountingDistributionTemplate    accountingDistributionTemplate;
        #
        #    if (_set)
        #    {
        #        if (_templateName == "")
        #        {
        #            this.AccountingDistributionTemplate = 0;
        #        }
        #        else
        #        {
        #            accountingDistributionTemplate = AccountingDistributionTemplate::findByName(_templateName);
        #
        #            if (accountingDistributionTemplate)
        #            {
        #                this.AccountingDistributionTemplate = accountingDistributionTemplate.RecId;
        #                templateName = accountingDistributionTemplate.Name;
        #            }
        #            else
        #            {
        #                this.AccountingDistributionTemplate = 0;
        #            }
        #        }
        #    }
        #    else
        #    {
        #        if (this.AccountingDistributionTemplate != 0)
        #        {
        #            templateName = AccountingDistributionTemplate::find(this.AccountingDistributionTemplate).Name;
        #        }
        #    }
        #
        #    return templateName;
        #}
      ENDSOURCE
      SOURCE #totalDiscountAmount
        #/// <summary>
        #/// Calculates the total discount amount.
        #/// </summary>
        #/// <returns>
        #/// The total discount amount.
        #/// </returns>
        #public Amount totalDiscountAmount()
        #{
        #    Amount          totalDiscountAmount;
        #    PurchTable      purchTable;
        #
        #    purchTable = this.purchTable();
        #
        #    totalDiscountAmount = (purchTable.DiscPercent  && this.endDisc()) ?
        #                          Currency::amount(this.calcLineAmountExclTax()* (purchTable.DiscPercent / 100), this.CurrencyCode) :
        #                          0;
        #
        #    return totalDiscountAmount;
        #}
      ENDSOURCE
      SOURCE #trxVolume
        #// Transportation for AX - Blue Horseshoe Solutions, Inc.
        #Volume trxVolume()
        #{
        #    return this.inventTable().grossVolume() * this.QtyOrdered;
        #}
      ENDSOURCE
      SOURCE #trxWeight
        #// Transportation for AX - Blue Horseshoe Solutions, Inc.
        #Weight trxWeight()
        #{
        #    return this.inventTable().grossWeight() * this.QtyOrdered;
        #}
      ENDSOURCE
      SOURCE #type
        #PurchLineType type(PurchTable _purchTable = this.purchTable())
        #{
        #    return PurchLineType::construct(this, _purchTable);
        #}
      ENDSOURCE
      SOURCE #underDeliveryPct
        #/// <summary>
        #/// Returns the allowed under-delivery percent.
        #/// </summary>
        #/// <returns>
        #/// The under-delivery percent that is defined on the purchase order line if under-delivery is allowed;
        #/// otherwise, 0.
        #/// </returns>
        #public Percent underDeliveryPct()
        #{
        #    if (!PurchParameters::find().SubDelivery)
        #    {
        #        return 0;
        #    }
        #
        #    return this.UnderDeliveryPct;
        #}
      ENDSOURCE
      SOURCE #unitConvertInvent2Purch
        #PurchQty unitConvertInvent2Purch(InventQty _inventQty)
        #{
        #    return UnitOfMeasureConverter::convert(
        #        _inventQty,
        #        UnitOfMeasure::unitOfMeasureIdBySymbol(this.inventTable().inventUnitId()),
        #        UnitOfMeasure::unitOfMeasureIdBySymbol(this.PurchUnit),
        #        NoYes::Yes,
        #        InventTable::itemProduct(this.ItemId));
        #}
      ENDSOURCE
      SOURCE #unitConvertPurch2Invent
        #PurchQty unitConvertPurch2Invent(PurchQty _purchQty)
        #{
        #    if (this.ItemId)
        #    {
        #        return UnitOfMeasureConverter::convert(
        #            _purchQty,
        #            UnitOfMeasure::unitOfMeasureIdBySymbol(this.PurchUnit),
        #            UnitOfMeasure::unitOfMeasureIdBySymbol(this.inventTable().inventUnitId()),
        #            NoYes::Yes,
        #            InventTable::itemProduct(this.ItemId));
        #    }
        #    return _purchQty;
        #}
      ENDSOURCE
      SOURCE #unLinkAgreementDeliveryDates
        #/// <summary>
        #/// Indicates whether the link to the agreement line is valid after changes have been made; if not, the
        #/// user is given an option to remove the link to the associated agreement.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field ID of the delivery date field that has been changed.
        #/// </param>
        #public void unLinkAgreementDeliveryDates(FieldId _fieldId)
        #{
        #    PurchLine   purchLineOrig;
        #    boolean     calledFromWeb;
        #    boolean     canRecalculatePrices = true;
        #    PurchTable  purchTable;
        #    InterCompanyEndpointActionPolicy    interCompanyEndpointActionPolicy;
        #
        #
        #    if (this.RecId && !this.isTmp() && !this.isAgreementLinkValid())
        #    {
        #        calledFromWeb = webSession() ? true : false;
        #        if (calledFromWeb)
        #        {
        #            warning("@SYS306909");
        #        }
        #        else
        #        {
        #            if (this.unLinkAgreementLinePrompt(_fieldId)
        #                && this.LineDeliveryType != LineDeliveryType::DeliveryLine)
        #            {
        #                purchTable = this.purchTable();
        #                if (purchTable.isInterCompanyOrder())
        #                {
        #                    interCompanyEndpointActionPolicy = purchTable.interCompanyEndpointActionPolicy();
        #
        #                    canRecalculatePrices = interCompanyEndpointActionPolicy.PriceDiscountSearch ? true : false;
        #                }
        #                if (canRecalculatePrices
        #                    && this.doReCalcPricesFromBasePrompt())
        #                {
        #                    purchLineOrig.data(this);
        #                    PurchLine::modifyPurchQty(this, this.inventDim());
        #                    this.(_fieldId) = purchLineOrig.(_fieldId);
        #                }
        #            }
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #unLinkAgreementLine
        #/// <summary>
        #/// Deletes the links between the purchase order line and the agreement line.
        #/// </summary>
        #/// <param name="_updateLine">
        #/// A Boolean value that indicates whether to execute update for a <c>PurchLine</c> buffer; optional.
        #/// </param>
        #public server void unLinkAgreementLine(boolean _updateLine = false)
        #{
        #    AgreementLineReleasedLine agreementLineReleasedLine;
        #
        #    // Set Price Discount Change Policy originated by PriceDiscSystemSource::Agreement.
        #    this.setPriceDiscChangePolicy(PriceDiscSystemSource::Agreement);
        #    if (this.ManualEntryChangepolicy
        #        && this.SystemEntryChangePolicy)
        #    {
        #        this.PriceDiscResultFields::mergerPriceDiscPolicies(ModuleSalesPurch::Purch);
        #    }
        #
        #    switch (this.LineDeliveryType)
        #    {
        #        case LineDeliveryType::OrderLineWithMultipleDeliveries:
        #            AgreementLineReleasedLine::unlinkPurchDeliverySchedule(this.InventTransId);
        #            this.reread();
        #            break;
        #        case LineDeliveryType::DeliveryLine:
        #            AgreementLineReleasedLine::unlinkPurchDeliverySchedule(PurchDeliverySchedule::findOrderLineForDeliveryLine(this.InventTransId).InventTransId);
        #            break;
        #        default:
        #            ttsbegin;
        #
        #            if (this.RecId)
        #            {
        #                delete_from agreementLineReleasedLine
        #                    where agreementLineReleasedLine.PurchLineInventTransId == this.InventTransId
        #                       && agreementLineReleasedLine.PurchLineDataAreaId    == this.DataAreaId
        #                       && agreementLineReleasedLine.ReferenceRelationType  == tableNum(PurchLine);
        #            }
        #
        #            this.MatchingAgreementLine = 0;
        #
        #            if (_updateLine)
        #            {
        #                this.update();
        #            }
        #
        #            ttscommit;
        #            break;
        #    }
        #}
      ENDSOURCE
      SOURCE #unLinkAgreementLinePrompt
        #/// <summary>
        #/// Prompts whether the user wants to delete the link between the agreement line and the purchase order
        #/// line in a text box.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field ID of the field that has the changes that introduced a conflict in the relation to the
        #/// linked agreement line; optional.
        #/// </param>
        #/// <param name="_tableId">
        #/// The table ID of the field that has changes that introduced a conflict in the relation to the linked
        #/// agreement line; optional.
        #/// </param>
        #/// <param name="_doUpdate">
        #/// boolean indicating if an update of the purchase order line should be performed when unlinking the agreement line; optional.
        #/// </param>
        #/// <returns>
        #/// true if the user wants to delete the link between the agreement line and the purchase order line;
        #/// otherwise, false.
        #/// </returns>
        #public boolean unLinkAgreementLinePrompt(FieldId _fieldId = 0, TableId _tableId = tableNum(PurchLine), boolean _doUpdate = true)
        #{
        #    boolean     unlink;
        #    DictField   dictField;
        #    PurchLine   localPurchLine;
        #
        #    void unlink()
        #    {
        #        this.unLinkAgreementLine();
        #        unlink = true;
        #    }
        #
        #    if (_fieldId)
        #    {
        #        dictField = new DictField(_tableId,_fieldId);
        #        unlink    = Box::okCancel(strFmt("@SYS306897", dictField.label()),DialogButton::Cancel,"@SYS306896") == DialogButton::Ok;
        #
        #        if (unlink)
        #        {
        #            this.unLinkAgreementLine();
        #        }
        #        else
        #        {
        #            if (_tableId == tableNum(InventDim))
        #            {
        #                _fieldId = fieldNum(PurchLine, InventDimId);
        #            }
        #
        #            if (this.RecId)
        #            {
        #                this.(_fieldId) = this.orig().(_fieldId);
        #            }
        #            else
        #            {
        #                localPurchLine.con2buf(this.buf2con());
        #                localPurchLine.initFromAgreementLine(AgreementLine::find(localPurchLine.MatchingAgreementLine));
        #                this.(_fieldId) = localPurchLine.(_fieldId);
        #            }
        #        }
        #    }
        #    else
        #    {
        #        if (Box::yesNo(strFmt("@SYS306910"),DialogButton::No) == DialogButton::Yes)
        #        {
        #            // The price discount fixed policies will block recalculation of certain TA values when a sales line is related to an agreement hence, we need to unlink before recalc.
        #            unlink();
        #
        #            // Run the price discount policy dialog in order to let the user determine which agreement values to recalulate.
        #            this.runPriceDiscPolicyDialog(true);
        #
        #            PurchLine::modifyPurchQty(this,this.inventDim());
        #
        #            if (_doUpdate)
        #            {
        #                this.update();
        #            }
        #        }
        #    }
        #
        #    return unlink;
        #}
      ENDSOURCE
      SOURCE #update
        #public void  update(boolean  dropInvent                         = false,
        #                    boolean  updateOrderLineOfDeliverySchedule  = true)
        #{
        #    // Warehousing for AX - Blue Horseshoe Solutions, Inc.
        #    // Begin Mod
        #    Qty                 oldQty;
        #    WAXUOM              oldUnit;
        #    // End Mod
        #    PurchLineType       purchLineType;
        #
        #    PurchLine origPurchLine;
        #    PurchTotalsSummaryController purchTotalsSummaryController;
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #    {
        #        origPurchLine = this.orig();
        #        purchTotalsSummaryController = PurchTotalsSummaryController::construct(this.PurchId);
        #        purchTotalsSummaryController.checkFields(this);
        #    }
        #
        #    // Warehousing for AX - Blue Horseshoe Solutions, Inc.
        #    // Store off the old Sales Qty.
        #    // Begin Mod
        #    oldQty  = this.orig().PurchQty;
        #    oldUnit = this.orig().PurchUnit;
        #    // End Mod
        #
        #    purchLineType = this.type();
        #    purchLineType.update(dropInvent, false, updateOrderLineOfDeliverySchedule);
        #
        #    // Warehousing for AX - Blue Horseshoe Solutions, Inc.
        #    // If the Sales Qty has changed, update the Qty Left To Load.
        #    // Begin Mod
        #    WAXLoadLine::updateOrCreateLoadLine(this, oldQty, oldUnit);
        #    // End Mod
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #    {
        #        this.Tax1099RecId = Tax1099BoxDetail::deleteOrClear1099Detail(Tax1099Fields::find(this.Tax1099Fields).Tax1099Box, this.Tax1099RecId);
        #        purchTotalsSummaryController.onUpdate(this);
        #
        #        // If the PurchCommitmentLine_PSN field has been changed, then reset the distributions
        #        if (origPurchLine.PurchCommitmentLine_PSN != this.PurchCommitmentLine_PSN)
        #        {
        #            this.resetDistributions();
        #        }
        #    }
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        #    {
        #        this.checkCrossdocking();
        #    }
        #}
      ENDSOURCE
      SOURCE #updateWorkflowState
        #/// <summary>
        #///     This method are setting the field <c>WorkflowState</c> on the current <c>PurchLine</c>
        #/// </summary>
        #/// <param name="_workflowState">
        #///     <c>WorkflowState</c> that the record must be updated with.
        #/// </param>
        #/// <param name="_editableInWorkflow">
        #///     <c>editableInWorkflow</c> that the record must be updated with.
        #/// </param>
        #void  updateWorkflowState(TradeWorkflowState        _workflowState,
        #                          TradeEditableInWorkflow   _editableInWorkflow = NoYes::No)
        #{
        #    this.WorkflowState      = _workflowState;
        #    this.EditableInWorkflow = _editableInWorkflow;
        #}
      ENDSOURCE
      SOURCE #validateDelete
        #boolean  validateDelete(boolean _interCompanyForce = false)
        #{
        #    boolean         ok = true;
        #    PurchLineType   purchLineType;
        #
        #    // <GIN>
        #    #ISOCountryRegionCodes
        #    // </GIN>
        #
        #    ok = super();
        #
        #    if (ok)
        #    {
        #        purchLineType = this.type();
        #        ok = purchLineType.validateDelete(_interCompanyForce);
        #    }
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Retail))
        #        && ok)
        #    {
        #        if (this.RetailPackageId)
        #            ok = checkFailed(strFmt("@RET4539",this.RetailPackageId));
        #    }
        #
        #    // <GIN>
        #    if (TaxParameters::checkParameterForPosting_IN(TaxType_IN::Customs)
        #        &&  PurchTable::find(this.PurchId).purchTable_W().CustomsImportOrder_IN
        #        &&  CustomsVendBOETrans_IN::findPurchLineRecId(this.RecId).RecId)
        #    {
        #        ok = checkFailed("@GLS5764");
        #    }
        #    // </GIN>
        #
        #    return ok;
        #}
        #
        #
      ENDSOURCE
      SOURCE #validateField
        #/// <summary>
        #///     Validates the value of field.
        #/// </summary>
        #/// <param name="fieldId">
        #///     A FieldId type representing the field to be validated.
        #/// </param>
        #/// <returns>
        #///     true if the field value is valid; otherwise, false.
        #/// </returns>
        #public boolean  validateField(FieldId  fieldId)
        #{
        #    boolean         ok;
        #    PurchLineType   purchLineType;
        #
        #    switch(fieldId)
        #    {
        #        case fieldNum(PurchLine, InventTransId):
        #            if (this.PurchaseType == PurchaseType::Journal
        #                || !this.isStocked())
        #                // No inventory transactions so no need for consistency check to report this as error
        #                return true;
        #            break;
        #    }
        #
        #    ok = super(fieldId);
        #
        #    // Warehousing for AX - Blue Horseshoe Solutions, Inc.
        #    // Validate that modified item number can be ordered
        #    // Begin Mod
        #    if (ok && fieldId == fieldNum(PurchLine, ItemId))
        #    {
        #        if (!WAXFilter::vendFilterMatch(this.VendAccount, this.ItemId))
        #        {
        #            throw error("@WAX1003");
        #        }
        #    }
        #    // End Mod
        #
        #    if (ok)
        #    {
        #        purchLineType = this.type();
        #        ok = purchLineType.validateField(fieldId);
        #    }
        #
        #    if (ok && isConfigurationkeyEnabled(configurationKeyNum(PublicSector)) && fieldId == fieldNum(PurchLine, PurchCommitmentLine_PSN))
        #    {
        #        ok = this.checkPurchCommitmentLine();
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #validateFieldValue
        #/// <summary>
        #///     Determines whether the parameter "_fieldName" field is valid.
        #/// </summary>
        #/// <param name="_fieldName">
        #///     The field name of the field to validate.
        #/// </param>
        #/// <param name="_arrayIndex">
        #///     The array index of the field to validate.
        #/// </param>
        #/// <returns>
        #///     true if the field is valid; otherwise, false.
        #/// </returns>
        #public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
        #{
        #    boolean ret;
        #
        #    ret = super(_fieldName, _arrayIndex);
        #    if(ret)
        #    {
        #        switch(_fieldName)
        #        {
        #            // <GIN>
        #            case fieldStr(PurchLine, TaxItemGroup):
        #                ret = TaxItemGroupHeading::validatePOTForGTA_IN(this.vendTable_OrderAccount(), this.TaxItemGroup);
        #                break;
        #            // </GIN>
        #        }
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #validateModifyInventDim
        #public boolean validateModifyInventDim(
        #    InventDim          _inventDim,
        #    FieldId            _dimFieldId)
        #{
        #    return this.type().validateModifyInventDim(_inventDim, _dimFieldId);
        #}
      ENDSOURCE
      SOURCE #validateWrite
        #boolean  validateWrite()
        #{
        #    boolean ok = true;
        #
        #    ok = super();
        #
        #    ok = ok && this.validateWrite_Server();
        #
        #    return ok;
        #}
        #
        #
      ENDSOURCE
      SOURCE #validateWrite_Server
        #/// <summary>
        #///     Validates if the current <c>PurcLine</c> table buffer can be written to the database.
        #/// </summary>
        #/// <returns>
        #///     true if the buffer can be written; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #///     This method is forcing server side execution of the validation logic.
        #/// </remarks>
        #server boolean validateWrite_Server()
        #{
        #    WAXLoadLine     loadLine;   // Warehousing for AX - Blue Horseshoe Solutions, Inc.
        #    boolean         ok;
        #    PurchLineType   purchLineType;
        #    container       taxCheck;
        #    AmountMST       totalAmt;
        #    AmountMST       taxAmount;
        #
        #    // <GIN>
        #    PurchTable      purchTable;
        #    PurchTable_W    purchTable_W;
        #    #ISOCountryRegionCodes
        #    // </GIN>
        #
        #    purchLineType = this.type();
        #    ok = purchLineType.validateWrite();
        #
        #
        #    if (ok)
        #    {
        #        taxAmount = this.taxByLine();
        #        totalAmt = this.LineAmount + taxAmount;
        #        taxCheck = [totalAmt, this.Tax1099Amount, this.Tax1099StateAmount, this.Tax1099Fields, this.Tax1099State];
        #        ok = Tax1099ElectronicCheck::tax1099EntryValidation(taxCheck);
        #    }
        #    // Check to make sure the commitment line is still valid.
        #    // This needs to be done because it's possible one of the values verified against have changed (such as account number).
        #    if (ok && PurchCommitmentHeader_PSN::isCommitmentsFeatureEnabled())
        #    {
        #        ok = this.checkPurchCommitmentLine();
        #    }
        #
        #    // <GIN>
        #    if(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN])
        #        && ok && TaxParameters::find().Customs_IN)
        #    {
        #        ttsbegin;
        #
        #        purchTable = PurchTable::find(this.PurchId);
        #        purchTable_W = purchTable.purchTable_W();
        #        if (CustomsInvoiceRegnTrans_IN::checkInvoiceRegnComplete(this.RecId))
        #        {
        #            purchTable_W.CustomsInvoiceRegistered_IN = NoYes::Yes;
        #        }
        #        else
        #        {
        #            purchTable_W.CustomsInvoiceRegistered_IN = NoYes::No;
        #        }
        #
        #        purchTable.packPurchTable_W(purchTable_W);
        #        purchTable.SysExtensionSerializerMap::postUpdate();
        #        ttscommit;
        #    }
        #    // </GIN>
        #    // <GEERU>
        #    if (ok && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        this.checkLine_RU();
        #    }
        #    // </GEERU>
        #
        #    if (ok &&
        #        SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLT, #isoHU]) &&
        #        this.purchTable().InclTax)
        #    {
        #        ok = this.SalesPurchLine::validateExcludeTaxFromInvoice(this.purchTable().InclTax);
        #    }
        #
        #    // Warehousing for AX - Blue Horseshoe Solutions, Inc.
        #    // Qty check for WAX items
        #    // Begin Mod
        #    if (WAXInventEnabled::exist(this.ItemId) && ok && this.orig() && this.orig().QtyOrdered != this.QtyOrdered)
        #    {
        #        if (abs(this.QtyOrdered) <= (select sum(WAXInventQty) from waxLoadLine
        #            where waxLoadLine.InventTransId == this.InventTransId).WAXInventQty)
        #        {
        #            select count(RecId) from loadLine
        #                where loadLine.InventTransId == this.InventTransId;
        #            if (loadLIne.RecId != 1)
        #            {
        #                ok = checkFailed("@WAX452");
        #            }
        #        }
        #    }
        #    // Prevent the change of inventory dimension once the salesline has been put on a load or shipment.
        #    if (ok && this.orig().InventDimId != this.InventDimId)
        #    {
        #        select firstOnly RecId from loadLine
        #            where loadLine.InventTransId == this.InventTransId;
        #
        #        if (loadLine.RecId)
        #        {
        #            ok = checkFailed("@WAX4307");
        #        }
        #    }
        #    // End Mod
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #variencePrice
        #//BP Deviation Documented
        #server display AmountCur variencePrice()
        #{
        #    return this.calcLineAmount(this.varienceQty());
        #}
      ENDSOURCE
      SOURCE #varienceQty
        #//BP Deviation Documented
        #server display PurchQty varienceQty()
        #{
        #    return this.receivedInTotal() - this.PurchQty;
        #}
      ENDSOURCE
      SOURCE #varienceQtyPct
        #//BP Deviation Documented
        #server display Percent varienceQtyPct()
        #{
        #    if (this.PurchQty)
        #    {
        #        return (this.receivedInTotal() * 100) / this.PurchQty;
        #    }
        #
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #vendTable_OrderAccount
        #VendTable vendTable_OrderAccount()
        #{
        #    return this.purchTable().vendTable_OrderAccount();
        #}
      ENDSOURCE
      SOURCE #warningForReference
        #/// <summary>
        #/// Show a warning for a line which references other entities.
        #/// </summary>
        #/// <returns>true if the line can be deleted; otherwise, false.</returns>
        #boolean warningForReference()
        #{
        #    str         warningTxt;
        #
        #    warningTxt = this.referenceWarningTxt();
        #    if (warningTxt)
        #    {
        #        return Box::yesNo(warningTxt+'\n\n'+strFmt("@SYS75610"),DialogButton::Yes) == DialogButton::Yes;
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #waxGetLoads
        #// Warehousing for AX - Blue Horseshoe Solutions, Inc.
        #// BP Deviation Documented
        #display WAXLoadId waxGetLoads()
        #{
        #    WAXLoadLine     loadLine;
        #    WAXLoadId       ret;
        #    int             counter;
        #
        #    while select loadLine
        #        where loadLine.InventTransId == this.InventTransId
        #    {
        #        ret = loadLine.WAXLoadId;
        #        ++counter;
        #    }
        #
        #    switch (counter)
        #    {
        #        case 0:
        #            ret = '';
        #            break;
        #
        #        case 1:
        #            break;
        #
        #        default:
        #            ret = "@WAX402";
        #            break;
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #waxPurchTableAddress
        #// BP Deviation Documented
        #display Addressing waxPurchTableAddress()
        #{
        #    return this.purchTable().deliveryAddressing();
        #}
      ENDSOURCE
      SOURCE #workflowInstructions
        #/// <summary>
        #/// Retrieves the latest workflow step instructions for this record.
        #/// </summary>
        #/// <returns>
        #/// The instructions for the latest work item for this record.
        #/// </returns>
        #
        #//BP Deviation Documented
        #display public WorkflowStepInstruction  workflowInstructions()
        #{
        #    List                        workItemList;
        #    ListEnumerator              enumerator;
        #
        #    WorkflowWorkItemInstanceId  workItemInstanceId;
        #
        #    WorkflowWorkItemTable       workflowWorkItemTable;
        #    WorkflowDueDateTime         dueDateTime;
        #    WorkflowStepInstruction     stepInstruction;
        #
        #    void getRecord()
        #    {
        #        workItemInstanceId = enumerator.current();
        #        select DueDateTime, Description from workflowWorkItemTable
        #            where workflowWorkItemTable.Id == workItemInstanceId;
        #    }
        #
        #
        #    workItemList = Workflow::findWorkItemsForCurrentUser(this);
        #
        #    if (workItemList)
        #    {
        #        enumerator   = workItemList.getEnumerator();
        #
        #        switch(workItemList.elements())
        #        {
        #            case    0 : stepInstruction = '';
        #                        break;
        #
        #            case    1 : enumerator.moveNext();
        #
        #                        getRecord();
        #                        stepInstruction = workflowWorkItemTable.Description;
        #
        #                        break;
        #
        #            default   : dueDateTime = DateTimeUtil::minValue();
        #
        #                        while (enumerator.moveNext())
        #                        {
        #                            getRecord();
        #
        #                            if (workflowWorkItemTable.DueDateTime > dueDateTime)
        #                            {
        #                                dueDateTime = workflowWorkItemTable.DueDateTime;
        #                                stepInstruction = workflowWorkItemTable.Description;
        #                            }
        #                        }
        #        }
        #    }
        #
        #    return stepInstruction;
        #}
      ENDSOURCE
      SOURCE #workflowLastComment
        #/// <summary>
        #/// Retrieves the last workflow comment for this record.
        #/// </summary>
        #/// <returns>
        #/// The last comment entered by any user for this record.
        #/// </returns>
        #
        #//BP Deviation Documented
        #display public server  WorkflowComment  workflowLastComment()
        #{
        #    WorkflowTrackingTable           workflowTrackingTable;
        #    WorkflowTrackingStatusTable     workflowTrackingStatusTable;
        #    WorkflowTrackingCommentTable    workflowTrackingCommentTable;
        #
        #
        #    select ContextCompanyId, ContextTableId, ContextRecId from workflowTrackingStatusTable
        #        where workflowTrackingStatusTable.ContextCompanyId    == curext()
        #           && workflowTrackingStatusTable.ContextTableId      == this.TableId
        #           && workflowTrackingStatusTable.ContextRecId        == this.RecId
        #        join firstonly TrackingId, CreatedDateTime from workflowTrackingTable order by CreatedDateTime desc
        #            where workflowTrackingTable.WorkflowTrackingStatusTable == workflowTrackingStatusTable.RecId
        #        join Comment from workflowTrackingCommentTable
        #            where workflowTrackingCommentTable.WorkflowTrackingTable == workflowTrackingTable.RecId;
        #
        #    return workflowTrackingCommentTable.Comment;
        #}
      ENDSOURCE
      SOURCE #workflowWorkItemDueDate
        #/// <summary>
        #/// Retrieves the latest workflow due date for this record.
        #/// </summary>
        #/// <returns>
        #/// The due date for the latest work item for this record.
        #/// </returns>
        #
        #//BP Deviation Documented
        #display public WorkflowDueDateTime  workflowWorkItemDueDate()
        #{
        #    List                        workItemList;
        #    ListEnumerator              enumerator;
        #
        #    WorkflowWorkItemInstanceId  workItemInstanceId;
        #
        #    WorkflowWorkItemTable       workflowWorkItemTable;
        #    WorkflowDueDateTime         dueDateTime;
        #
        #    void getRecord()
        #    {
        #        workItemInstanceId = enumerator.current();
        #        select DueDateTime from workflowWorkItemTable
        #            where workflowWorkItemTable.Id == workItemInstanceId;
        #    }
        #
        #
        #    workItemList = Workflow::findWorkItemsForCurrentUser(this);
        #
        #    if (workItemList)
        #    {
        #        enumerator   = workItemList.getEnumerator();
        #
        #        switch(workItemList.elements())
        #        {
        #            case    0 : dueDateTime = DateTimeUtil::minValue();
        #                        break;
        #
        #            case    1 : enumerator.moveNext();
        #
        #                        getRecord();
        #                        dueDateTime = workflowWorkItemTable.DueDateTime;
        #
        #                        break;
        #
        #            default   : dueDateTime = DateTimeUtil::minValue();
        #
        #                        while (enumerator.moveNext())
        #                        {
        #                            getRecord();
        #
        #                            if (workflowWorkItemTable.DueDateTime > dueDateTime)
        #                                dueDateTime = workflowWorkItemTable.DueDateTime;
        #                        }
        #        }
        #    }
        #
        #    return dueDateTime;
        #}
      ENDSOURCE
      SOURCE #checkMultipleAccountingDistExist
        #/// <summary>
        #/// Indicates whether the <c>PurchLine</c> buffer has more than one <c>AccountingDistribution</c>
        #/// records.
        #/// </summary>
        #/// <param name="_purchLine">
        #/// A <c>PurchLine</c> record which needs to be checked for multiple distributions.
        #/// </param>
        #/// <returns>
        #/// true when the count is more than 1; otherwise, false.
        #/// </returns>
        #public static server boolean checkMultipleAccountingDistExist(PurchLine _purchLine)
        #{
        #    return SourceDocumentLineProvider::isAccountingDistributionSplit(_purchLine.sourceDocumentLine(), MonetaryAmount::ExtendedPrice);
        #}
      ENDSOURCE
      SOURCE #checkReceiveQty_IN
        #// <GIN>
        #public static boolean checkReceiveQty_IN(PurchId _purchId)
        #{
        #    PurchLine purchLine;
        #    boolean insert;
        #
        #    while select purchLine
        #        where purchLine.PurchId == _purchId
        #    {
        #        if(CustomsInvoiceRegistrateForm_IN::calcReceiveQty(purchLine))
        #        {
        #            insert = true;
        #        }
        #    }
        #
        #    return insert;
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #earliestConfirmedDlv
        #/// <summary>
        #/// Finds the purchase order line that have the earliest confirmed delivery date.
        #/// </summary>
        #/// <param name="_purchId">
        #/// The purchase ID that will be used to search for confirmed delivery dates.
        #/// </param>
        #/// <returns>
        #/// The earliest confirmed delivery date for the purchase lines.
        #/// </returns>
        #/// <remarks>
        #/// The returned confirmed delivery date can be passed to the <c>datenull</c> method in order to fully
        #/// confirm the purchase order.
        #/// </remarks>
        #server static PurchLineDlvDate earliestConfirmedDlv(PurchId  _purchId)
        #{
        #    return (select minof(ConfirmedDlv) from purchLine
        #                where purchLine.PurchId == _purchId
        #                   && !purchLine.IsDeleted).ConfirmedDlv;
        #}
      ENDSOURCE
      SOURCE #exist
        #client server static boolean  exist(
        #    PurchId             _purchId,
        #    TradeLineNumber     _lineNumber = int64Min())
        #{
        #    if (_purchId)
        #    {
        #        if (_lineNumber == int64Min())
        #            return (select firstonly RecId from purchLine
        #                        index PurchLineIdx
        #                        where purchLine.PurchId         == _purchId
        #                           && purchLine.IsDeleted       == NoYes::No
        #                   ).RecId     != 0;
        #
        #        return (select firstonly RecId from purchLine
        #                        index PurchLineIdx
        #                        where purchLine.PurchId         == _purchId
        #                           && purchLine.LineNumber      == _lineNumber
        #                           && purchLine.IsDeleted       == NoYes::No
        #                   ).RecId != 0;
        #    }
        #
        #    return false;
        #}
      ENDSOURCE
      SOURCE #existDifferentCurrency
        #server static boolean  existDifferentCurrency(PurchId   purchId, CurrencyCode currencyCode)
        #{
        #    if (!purchId || !currencyCode)
        #    {
        #        return false;
        #    }
        #
        #    return (select firstonly RecId from purchLine
        #                   index hint PurchLineIdx
        #                   where purchLine.PurchId          == purchId
        #                      && purchLine.CurrencyCode     != currencyCode
        #                      && purchLine.IsDeleted        == NoYes::No).RecId != 0;
        #}
      ENDSOURCE
      SOURCE #existNonFinalizedLines
        #/// <summary>
        #///    Determines if one or more purchase order lines exist that are not finalized.
        #/// </summary>
        #/// <param name="_purchId">
        #///    The ID of the purchase order.
        #/// </param>
        #/// <returns>
        #///    true if one or more purchase order lines are not finalized; otherwise, false.
        #/// </returns>
        #server static boolean existNonFinalizedLines(PurchId _purchId)
        #{
        #    return (select firstonly RecId from purchLine
        #                   where purchLine.PurchId          == _purchId
        #                      && purchLine.IsFinalized      == NoYes::No).RecId != 0;
        #}
        #
      ENDSOURCE
      SOURCE #find
        #client server static PurchLine find(
        #    PurchId           _purchId,
        #    TradeLineNumber   _lineNumber = int64Min(),
        #    boolean           _update     = false)
        #{
        #    PurchLine  purchLine;
        #
        #    if (_purchId)
        #    {
        #        purchLine.selectForUpdate(_update);
        #
        #        if (_lineNumber == int64Min())
        #        {
        #            select firstonly purchLine
        #                index hint PurchLineIdx
        #                where purchLine.PurchId         == _purchId
        #                   && !purchLine.IsDeleted;
        #        }
        #        else
        #        {
        #            select firstonly purchLine
        #                index hint PurchLineIdx
        #                where purchLine.PurchId         == _purchId
        #                   && purchLine.LineNumber      == _lineNumber
        #                   && !purchLine.IsDeleted;
        #        }
        #    }
        #
        #    return purchLine;
        #}
      ENDSOURCE
      SOURCE #findBySourceDocumentLine
        #/// <summary>
        #///    Finds the <c>PurchLine</c> record.
        #/// </summary>
        #/// <param name="_sourceDocumentLine">
        #///    A <c>SourceDocumentLine</c> record RecId.
        #/// </param>
        #/// <param name="_forUpdate">
        #///    A Boolean value that determines whether the record should be selected for update; optional.
        #/// </param>
        #/// <returns>
        #///    A <c>PurchLine</c> record.
        #/// </returns>
        #static public PurchLine findBySourceDocumentLine(   RefRecId _sourceDocumentLine,
        #                                                    boolean  _forUpdate = false)
        #
        #{
        #    PurchLine     purchLine;
        #
        #    if (_sourceDocumentLine)
        #    {
        #        purchLine.selectForUpdate(_forUpdate);
        #
        #        select firstonly purchLine
        #            where purchLine.SourceDocumentLine  == _sourceDocumentLine
        #                ;
        #    }
        #
        #    return purchLine;
        #}
      ENDSOURCE
      SOURCE #findInventTransId
        #static PurchLine findInventTransId(TradeInventTransId   _inventTransId,
        #                                   boolean              _update = false)
        #{
        #    PurchLine purchLine;
        #
        #    if (_inventTransId)
        #    {
        #        purchLine.selectForUpdate(_update);
        #
        #        select firstonly purchLine
        #            where purchLine.InventTransId == _inventTransId
        #               && !purchLine.IsDeleted;
        #    }
        #
        #    return purchLine;
        #}
      ENDSOURCE
      SOURCE #findItemIdInventDimId
        #/// <summary>
        #///   Finds the specified record in the <c>PurchLine</c> table.
        #/// </summary>
        #/// <param name="purchId">
        #///   A <c>PurchId</c>
        #/// </param>
        #/// <param name="itemId">
        #///   An <c>ItemId</c>.
        #/// </param>
        #/// <param name="inventDimId">
        #///   An <c>InventDimId</c>.
        #/// </param>
        #/// <param name="lineNum">
        #///   A line number; optional.
        #/// </param>
        #/// <param name="update">
        #///   A Boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #///   A record in the <c>PurchLine</c> table; otherwise, an empty record.
        #/// </returns>
        #client server static PurchLine findItemIdInventDimId( PurchId          purchId,
        #                                               ItemId           itemId,
        #                                               InventDimId      inventDimId,
        #                                               TradeLineNumber  lineNum     = int64Min(),
        #                                               boolean          update      = false)
        #{
        #    PurchLine  purchLine;
        #
        #    if (purchId)
        #    {
        #        purchLine.selectForUpdate(update);
        #
        #        if (lineNum == int64Min())
        #        {
        #            select firstonly purchLine
        #                index hint PurchLineIdx
        #                where purchLine.PurchId     == purchId      &&
        #                      purchLine.ItemId      == itemId       &&
        #                      purchLine.InventDimId == inventDimId  &&
        #                      !purchLine.IsDeleted;
        #        }
        #        else
        #        {
        #            select firstonly purchLine
        #                index hint PurchLineIdx
        #                where purchLine.PurchId     == purchId      &&
        #                      purchLine.LineNumber  == lineNum      &&
        #                      purchLine.ItemId      == itemId       &&
        #                      purchLine.InventDimId == inventDimId    &&
        #                      !purchLine.IsDeleted;
        #        }
        #    }
        #
        #    return purchLine;
        #}
      ENDSOURCE
      SOURCE #findPurchIdPurchType
        #/// <summary>
        #///   Finds the specified record in the <c>PurchLine</c> table.
        #/// </summary>
        #/// <param name="purchId">
        #///   A <c>PurchId</c>.
        #/// </param>
        #/// <param name="purchType">
        #///   A <c>PurchType</c>.
        #/// </param>
        #/// <param name="lineNum">
        #///   A line number; optional.
        #/// </param>
        #/// <param name="update">
        #///   A Boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #///   A record in the <c>PurchLine</c> table; otherwise, an empty record.
        #/// </returns>
        #client server static PurchLine findPurchIdPurchType(  PurchId           purchId,
        #                                                      PurchaseType      purchType,
        #                                                      TradeLineNumber   lineNum     = int64Min(),
        #                                                      boolean           update      = false)
        #{
        #    PurchLine  purchLine;
        #
        #    if (purchId)
        #    {
        #        purchLine.selectForUpdate(update);
        #
        #        if (lineNum == int64Min())
        #        {
        #            select firstonly purchLine
        #                index hint PurchLineIdx
        #                where purchLine.PurchId == purchId     &&
        #                      purchLine.PurchaseType == purchType &&
        #                      !purchLine.IsDeleted;
        #        }
        #        else
        #        {
        #            select firstonly purchLine
        #                index hint PurchLineIdx
        #                where purchLine.PurchId == purchId     &&
        #                      purchLine.LineNumber == lineNum     &&
        #                      purchLine.PurchaseType == purchType &&
        #                      !purchLine.IsDeleted;
        #        }
        #    }
        #
        #    return purchLine;
        #}
      ENDSOURCE
      SOURCE #findPurchTypeItemIdVarinatId
        #/// <summary>
        #///   Finds the specified record in the <c>PurchLine</c> table.
        #/// </summary>
        #/// <param name="purchId">
        #///   A <c>PurchId</c>.
        #/// </param>
        #/// <param name="purchType">
        #///   A <c>PurchType</c>.
        #/// </param>
        #/// <param name="itemId">
        #///   An <c>ItemId</c>.
        #/// </param>
        #/// <param name="variantId">
        #///   A <c>RetailVariantId</c>.
        #/// </param>
        #/// <param name="update">
        #///   A Boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #///   A record in the <c>PurchLine</c> table; otherwise, an empty record.
        #/// </returns>
        #client server static PurchLine findPurchTypeItemIdVarinatId(PurchId      purchId,
        #                      PurchaseType  purchType,
        #                      ItemId        itemId,
        #                      RetailVariantId  variantId,
        #                      boolean       update      = false)
        #{
        #    PurchLine  purchLine;
        #
        #    if (purchId)
        #    {
        #        purchLine.selectForUpdate(update);
        #
        #        select firstonly purchLine
        #            index hint PurchLineIdx
        #            where purchLine.PurchId == purchId          &&
        #                  purchLine.PurchaseType == purchType   &&
        #                  purchLine.ItemId == itemId            &&
        #                  purchLine.VariantId == variantId      &&
        #                  !purchLine.IsDeleted;
        #    }
        #
        #    return purchLine;
        #}
      ENDSOURCE
      SOURCE #findRecId
        #static PurchLine findRecId(RecId    _recId,
        #                           boolean  _update = false)
        #{
        #    PurchLine purchLine;
        #
        #    if (_recId)
        #    {
        #        purchLine.selectForUpdate(_update);
        #
        #        select firstonly purchLine
        #            where purchLine.RecId == _recId
        #               && !purchLine.IsDeleted;
        #    }
        #
        #    return purchLine;
        #}
      ENDSOURCE
      SOURCE #getLedgerPostingType
        #public static LedgerPostingType getLedgerPostingType(ItemId _itemId)
        #{
        #    LedgerPostingType ledgerPostingType;
        #    InventModelGroup  inventoryModelGroup;
        #
        #    inventoryModelGroup = InventTable::find(_itemId).modelGroup();
        #
        #    if (inventoryModelGroup.PostPhysicalPurchase ||
        #                (!inventoryModelGroup.PostOnhandPhysical &&
        #                 !inventoryModelGroup.PostPhysicalPurchase))
        #    {
        #        ledgerPostingType = LedgerPostingType::PurchConsump;
        #    }
        #    else if (inventoryModelGroup.PostOnhandPhysical &&
        #            !inventoryModelGroup.PostPhysicalPurchase)
        #    {
        #        ledgerPostingType = LedgerPostingType::PurchReceipt;
        #    }
        #
        #    return ledgerPostingType;
        #}
      ENDSOURCE
      SOURCE #getVendorLocationId_IN
        #/// <summary>
        #/// Gets vendor location id.
        #/// </summary>
        #/// <param name="_party">
        #/// The instance of the <c>DirPartyRecId</c> class.
        #/// </param>
        #/// <returns>
        #/// The instance of the <c>LogisticsLocationRecId</c> class.
        #/// </returns>
        #// <GIN>
        #public server static LogisticsLocationRecId getVendorLocationId_IN(DirPartyRecId _party)
        #{
        #    DirPartyLocation  dirPartyLocation;
        #    LogisticsLocation logisticsLocation;
        #
        #    if (_party)
        #    {
        #        select firstonly Location from dirPartyLocation
        #            where dirPartyLocation.Party          == _party
        #                join RecId from logisticsLocation
        #                    where logisticsLocation.RecId == dirPartyLocation.Location;
        #    }
        #
        #    return logisticsLocation.RecId;
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #hasExensionTableEnabled
        #/// <summary>
        #/// Checks is there any extension table of table <C>PurchLine</C> is enabled.
        #/// </summary>
        #/// <returns>
        #/// true if there is one or more extension tables are enabled. Otherwise, return false.
        #/// </returns>
        #public static boolean hasExensionTableEnabled()
        #{
        #    return SysExtensionSerializerMap::hasExensionTableEnabled(tableNum(PurchLine));
        #}
      ENDSOURCE
      SOURCE #highestPackageLineNum
        #/// <summary>
        #///   Returns the highest package line number from the purchase order.
        #/// </summary>
        #/// <param name="purchId">
        #///   A <c>PurchId</c>.
        #/// </param>
        #/// <param name="packageId">
        #///   A <c>RetailPackageId</c>.
        #/// </param>
        #/// <returns>
        #///   The highest package line number from the purchase order.
        #/// </returns>
        #static LineNum  highestPackageLineNum(PurchId  purchId,RetailPackageId packageId)
        #{
        #    PurchLine   purchLine;
        #    ;
        #
        #    select maxof(rboPackageLineNum) from purchLine
        #    index hint RBOPackageIdx
        #    where purchLine.PurchId == purchId &&
        #          purchLine.RetailPackageId == packageId;
        #
        #
        #    return purchLine.rboPackageLineNum;
        #
        #}
      ENDSOURCE
      SOURCE #highestPurchStatus
        #static PurchStatus   highestPurchStatus(PurchId  purchId)
        #{
        #    PurchLine purchLine;
        #
        #    select maxof(PurchStatus) from purchLine
        #        index hint PurchStatusIdx
        #        where   purchLine.PurchId           == purchId
        #           &&   purchLine.PurchStatus       >  PurchStatus::None
        #           &&   !purchLine.IsDeleted;
        #
        #    if (purchLine)
        #    {
        #        return purchLine.PurchStatus;
        #    }
        #
        #    return PurchStatus::Backorder;
        #}
      ENDSOURCE
      SOURCE #initFromInventTableIL
        #/// <summary>
        #/// Updates a <c>PurchLine</c> table buffer based on the item.
        #/// </summary>
        #/// <param name="_inputContract">
        #///     A container with the <c>PurchLine</c> buffer and the <c>InventTable</c> buffer to initialize from.
        #/// </param>
        #/// <returns>
        #///    The initialized <c>PurchLine</c> record.
        #/// </returns>
        #/// <remarks>
        #///     The intention is this method should only be called from \Data Dictionary\Tables\PurchLine\Methods\initFromInventTable and should be run in IL.
        #/// </remarks>
        #private static container initFromInventTableIL(container _inputContract)
        #{
        #    PurchLine       purchLine = con2Buf(conPeek(_inputContract, 1));
        #    InventTable     inventTable = con2Buf(conPeek(_inputContract, 2));
        #    PurchLineType   purchLineType;
        #
        #    purchLineType = purchLine.type();
        #    purchLineType.initFromInventTable(inventTable);
        #
        #    return buf2Con(purchLine, true);
        #}
      ENDSOURCE
      SOURCE #isDeleted
        #/// <summary>
        #/// Checks whether the <c>PurchLine</c> record is deleted.
        #/// </summary>
        #/// <param name="_recId">
        #/// The <c>RecId</c> field of the <c>PurchLine</c> table record.
        #/// </param>
        #/// <returns>
        #/// true if the <c>PurchLine</c> table record is deleted; otherwise, false.
        #/// </returns>
        #public static boolean isDeleted(RecId _recId)
        #{
        #    PurchLine  purchLine;
        #
        #    if (_recId)
        #    {
        #        select firstonly IsDeleted from purchLine
        #               where purchLine.RecId == _recId;
        #    }
        #
        #    return purchLine.IsDeleted;
        #}
      ENDSOURCE
      SOURCE #isDistributionForCreditNote
        #/// <summary>
        #/// Determines if the accounting distribution originates from a credit note.
        #/// </summary>
        #/// <param name="_accountingDistribution">
        #/// An <c>AccountingDistribution</c> record.
        #/// </param>
        #/// <returns>
        #/// true if the accounting distribution originates from a credit note; otherwise, false.
        #/// </returns>
        #public static boolean isDistributionForCreditNote(AccountingDistribution _accountingDistribution)
        #{
        #    SourceDocumentLine  sourceDocumentLine;
        #    PurchLine           purchLine;
        #    PurchLineType       purchLineType;
        #
        #    select firstonly RecId from sourceDocumentLine
        #        where sourceDocumentLine.RecId == _accountingDistribution.SourceDocumentLine
        #    join firstonly purchLine
        #        where purchLine.SourceDocumentLine == sourceDocumentLine.RecId;
        #
        #    purchLineType = PurchLineType::construct(purchLine);
        #
        #    return purchLineType.creditNoteLine();
        #}
      ENDSOURCE
      SOURCE #isTaxExist
        #static boolean isTaxExist(TradeInventTransId _inventTransId, TaxCode _taxCode)
        #{
        #    PurchLine       purchLineloc;
        #    TaxOnItem       taxOnItem;
        #
        #    if (_inventTransId && _taxCode)
        #    {
        #        select firstonly RecId from taxOnItem
        #            where taxOnItem.TaxCode == _taxCode
        #            exists join purchLineloc
        #                where purchLineloc.InventTransId    == _inventTransId
        #                   && purchLineloc.TaxItemGroup     == taxOnItem.TaxItemGroup
        #                   && !purchLineloc.IsDeleted;
        #    }
        #    return taxOnItem.RecId;
        #}
      ENDSOURCE
      SOURCE #isTaxUnrealized
        #static boolean isTaxUnrealized(PurchIdBase _purchID)
        #{
        #    PurchLine       purchLineloc;
        #    TaxGroupData    taxGroupData;
        #    TaxTable        taxTable;
        #
        #    select firstonly RecId from taxTable
        #        where taxTable.UnrealizedTax == true
        #        exists join taxGroupData
        #            where taxGroupData.TaxCode == taxTable.TaxCode
        #        exists join purchLineloc
        #            where purchLineloc.PurchId          == _purchID
        #               && purchLineloc.TaxGroup         == taxGroupData.TaxGroup
        #               && !purchLineloc.IsDeleted;
        #    return taxTable.RecId;
        #}
      ENDSOURCE
      SOURCE #lastLineNum
        #server public static TradeLineNumber lastLineNum(PurchId _purchId)
        #{
        #    if (_purchId)
        #    {
        #        return
        #            (select maxof(LineNumber) from PurchLine
        #                where PurchLine.PurchId == _purchId).LineNumber;
        #    }
        #
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #lookupCountryRegionName_RU
        #/// <summary>
        #/// Performs lookup on <c>LogisticsAddressCountryRegionTranslation</c> table
        #/// </summary>
        #/// <param name="_ctrl">
        #/// Control lookup linked to
        #/// </param>
        #/// <param name="_languageId">
        #/// Code of language to search for
        #/// </param>
        #// <GEERU>
        #public static void lookupCountryRegionName_RU(FormStringControl _ctrl, LanguageId _languageId)
        #{
        #    SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(LogisticsAddressCountryRegionTranslation), _ctrl);
        #    Query          query          = new Query();
        #
        #    query.addDataSource(tableNum(LogisticsAddressCountryRegionTranslation));
        #
        #    query.dataSourceNo(1).addRange(fieldNum(LogisticsAddressCountryRegionTranslation, LanguageId)).value(_languageId);
        #
        #    sysTableLookup.addLookupfield(fieldNum(LogisticsAddressCountryRegionTranslation, ShortName));
        #    sysTableLookup.addLookupfield(fieldNum(LogisticsAddressCountryRegionTranslation, LongName));
        #
        #    sysTableLookup.parmQuery(query);
        #    sysTableLookup.performFormLookup();
        #}
        #// </GEERU>
      ENDSOURCE
      SOURCE #lookupRetailVariantId
        #/// <summary>
        #/// Performs the lookup for the <c>RetailVariantId</c> field.
        #/// </summary>
        #/// <param name="_ctrl">
        #/// The form control for which to perform the lookup.
        #/// </param>
        #/// <param name="_itemIdFilter">
        #/// An item id to filter the variants.
        #/// </param>
        #public static void lookupRetailVariantId(FormStringControl _ctrl, ItemId _itemIdFilter)
        #{
        #    FormRun formRun = classfactory.formRunClass(new Args(formStr(RetailVariantLookup)));
        #
        #    formRun.args().parm(_itemIdFilter);
        #    formRun.args().caller(_ctrl);
        #    formRun.init();
        #
        #    formRun.run();
        #    _ctrl.performFormLookup(formRun);
        #}
      ENDSOURCE
      SOURCE #lowestPurchStatus
        #public static PurchStatus   lowestPurchStatus(PurchId  _purchId)
        #{
        #    PurchLine   purchLine;
        #
        #    select minof(PurchStatus) from purchLine
        #        index hint PurchStatusIdx
        #        where   purchLine.PurchId           == _purchId
        #           &&   purchLine.PurchStatus       >  PurchStatus::None
        #           &&   !purchLine.IsDeleted;
        #
        #    if (purchLine)
        #    {
        #        return purchLine.PurchStatus;
        #    }
        #
        #    if (PurchTable::find(_purchId).DocumentStatus != DocumentStatus::None)
        #    {
        #        return PurchStatus::Canceled;
        #    }
        #
        #    return PurchStatus::Backorder;
        #}
      ENDSOURCE
      SOURCE #mms_getPrecedingLWOFinished
        #public static boolean mms_getPrecedingLWOFinished(MMS_LWONum lwoNum, ItemId itemId)
        #{
        #    PurchLine                   purchLineFind;
        #    InventTrans                 inventTrans;
        #    InventTransOrigin           inventTransOrigin;
        #    SalesLine                   salesLineFind;
        #
        #    select sum(Qty) from inventTrans
        #    join TableId from inventTransOrigin
        #        where inventTrans.InventTransOrigin == inventTransOrigin.RecId
        #           && (inventTrans.StatusReceipt    == StatusReceipt::Received
        #           || inventTrans.StatusReceipt     == StatusReceipt::Purchased)
        #    join TableId from purchLineFind
        #        where purchLineFind.MMS_PrecedingLWO    == lwoNum
        #           && purchLineFind.ItemId              == itemId
        #           && purchLineFind.InventTransId       == inventTransOrigin.InventTransId;
        #
        #    select firstonly sum(SalesQty) from salesLineFind
        #        where salesLineFind.MMS_PrecedingLWO == lwoNum
        #           && salesLineFind.ItemId == itemId;
        #
        #    return inventTrans.Qty >= salesLineFind.SalesQty;
        #}
      ENDSOURCE
      SOURCE #modifyPurchQty
        #static void  modifyPurchQty(
        #    PurchLine       _purchLine,
        #    InventDim       _inventDim,
        #    boolean         _resetPrice = true)
        #{
        #    if (!_purchLine.interCompanyIsBeingUpdated())
        #    {
        #        // Transportation for AX - Blue Horseshoe Solutions, Inc.
        #        // Begin Mod
        #        // InventMovement::setMinMaxQty(_purchLine);
        #        InventMovement::setMinMaxQty(_purchLine, !Global::isRunningOnServer());
        #        // End Mod
        #
        #        if (_purchLine.LineDeliveryType == LineDeliveryType::DeliveryLine
        #            || !_resetPrice) //we should recalculate amount even though we do not reset price
        #        {
        #            _purchLine.LineAmount = _purchLine.calcLineAmountForced();
        #        }
        #        else if (_resetPrice)
        #        {
        #            _purchLine.SalesPurchLine::resetPriceAgreement();
        #            _purchLine.setPriceDisc(_inventDim);
        #        }
        #        _purchLine.initPurchQty();
        #
        #        InventMovement::bufferSetTransQtyUnit(_purchLine);
        #
        #        _purchLine.setInventReceivedNow();
        #
        #        // Added ProjParameter clause because this was resetting the sales price.
        #        if (_purchLine.ProjId && !_purchLine.purchTable().isProjectSalesItemReqPO()
        #                && !_purchLine.getProjCreditNoteSource().purchTable().isProjectSalesItemReqPO()
        #                && !ProjParameters::find().DefaultCostPriceAsSalesPrice)
        #        {
        #            // Recalculate the project sales price
        #            _purchLine.initFromProjTable(_purchLine.projTable(), true);
        #        }
        #    }
        #    else
        #    {
        #        _purchLine.PurchQty = _purchLine.orig().PurchQty;
        #    }
        #}
      ENDSOURCE
      SOURCE #resetAxPurchLinePolicies
        #/// <summary>
        #///    Resets the price discount policies.
        #/// </summary>
        #/// <param name="_axPurchLine">
        #///    An <c>AxPurchLine</c> object representing the order line that should have the policies reset.
        #/// </param>
        #public static void resetAxPurchLinePolicies(AxPurchLine _axPurchLine)
        #{
        #    _axPurchLine.parmSystemEntrySource(PriceDiscSystemSource::None);
        #    _axPurchLine.parmSystemEntryChangePolicy(0);
        #    _axPurchLine.parmManualEntryChangepolicy(0);
        #}
      ENDSOURCE
      SOURCE #setDeliveryDueWorkflowState
        #/// <summary>
        #/// Sets the <c>PurchLine</c> workflow state for the COR: Delivery due in xx days workflow.
        #/// </summary>
        #/// <param name="_purchLineRecId">
        #/// The record ID <c>PurchLine</c> record.
        #/// </param>
        #/// <param name="_purchCORWorkflowState">
        #/// The workflow state enumeration value to set on the <c>PurchLine</c> record.
        #/// </param>
        #static void setDeliveryDueWorkflowState(RecId _purchLineRecId,
        #                                        TradeWorkflowState _purchCORWorkflowState)
        #{
        #    PurchLine purchLine;
        #
        #    ttsbegin;
        #
        #    purchLine = PurchLine::findRecId(_purchLineRecId, true);
        #    purchLine.WfDeliveryDueState = _purchCORWorkflowState;
        #    purchLine.doUpdate();
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #setInvReceivedWorkflowState
        #/// <summary>
        #/// Sets the <c>PurchLine</c> workflow state for the COR: Invoice received, items not received workflow.
        #/// </summary>
        #/// <param name="_purchLineRecId">
        #/// The record ID of the <c>PurchLine</c> record.
        #/// </param>
        #/// <param name="_purchCORWorkflowState">
        #/// The workflow state enumeration value to set on the <c>PurchLine</c> record.
        #/// </param>
        #static void setInvReceivedWorkflowState(RecId _purchLineRecId,
        #                                        TradeWorkflowState _purchCORWorkflowState)
        #{
        #    PurchLine purchLine;
        #
        #    ttsbegin;
        #
        #    purchLine = PurchLine::findRecId(_purchLineRecId, true);
        #    purchLine.WfInvReceivedState = _purchCORWorkflowState;
        #    purchLine.doUpdate();
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #setWorkflowState
        #/// <summary>
        #///     This method update the <c>WorkflowState</c> on the specified <c>PurchLine</c>
        #/// </summary>
        #/// <param name="_recId">
        #///     <c>RecId</c> of the record to update.
        #/// </param>
        #/// <param name="_workflowState">
        #///     <c>WorkflowState</c> that the record must be updated with.
        #/// </param>
        #/// <param name="_editableInWorkflow">
        #///     <c>editableInWorkflow</c> that the record must be updated with.
        #/// </param>
        #static void  setWorkflowState(RecId                     _recId,
        #                              TradeWorkflowState        _workflowState,
        #                              TradeEditableInWorkflow   _editableInWorkflow = NoYes::No)
        #{
        #    PurchLine  purchLine;
        #
        #    ttsbegin;
        #
        #    purchLine = PurchLine::findRecId(_recId, true);
        #    purchLine.updateWorkflowState(_workflowState, _editableInWorkflow);
        #    purchLine.doUpdate();
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #waxGetExpectedArrivalDateTime
        #// Warehousing for AX - Blue Horseshoe Solutions, Inc.
        #public static UtcDateTime waxGetExpectedArrivalDateTime(InventTransId _inventTransId)
        #{
        #    TransDate           inboundDate;
        #    TimeOfDay           inboundTime;
        #    PurchLine           purchLine;
        #    ;
        #
        #    purchLine = PurchLine::findInventTransId(_inventTransId);
        #
        #    inboundDate = purchLine.ConfirmedDlv ? purchLine.ConfirmedDlv : purchLine.DeliveryDate;
        #
        #    return DateTimeUtil::newDateTime(inboundDate, inboundTime);
        #}
        #
      ENDSOURCE
    ENDMETHODS
    EVENTS
      METHOD #initFromPurchLine
        EVENTHANDLERS
          EVENTHANDLER #PurchLineEventHandler
            PROPERTIES
              CalledWhen          #Post
              Class               #PurchLineEventHandler
              Method              #setPurchCommitmentLine_PSN
              AOTlink             #\Classes\PurchLineEventHandler\setPurchCommitmentLine_PSN
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
      METHOD #initFromVendInvoiceTrans
        EVENTHANDLERS
          EVENTHANDLER #postInitFromVendInvoiceTrans_BR
            PROPERTIES
              CalledWhen          #Post
              Class               #PurchLineEventHandler_BR
              Method              #postInitFromVendInvoiceTransHandler_BR
              AOTlink             #\Classes\PurchLineEventHandler_BR\postInitFromVendInvoiceTransHandler_BR
            ENDPROPERTIES
            
          ENDEVENTHANDLER
          EVENTHANDLER #PurchLineEventHandler
            PROPERTIES
              CalledWhen          #Post
              Class               #PurchLineEventHandler
              Method              #setPurchCommitmentLine_PSN
              AOTlink             #\Classes\PurchLineEventHandler\setPurchCommitmentLine_PSN
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
      METHOD #insert
        EVENTHANDLERS
          EVENTHANDLER #updateTransportation
            PROPERTIES
              Class               #TRXPurchLineEventHandler
              Method              #checkDirectDelivery
              AOTlink             #\Classes\TRXPurchLineEventHandler\checkDirectDelivery
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
      METHOD #modifiedField
        EVENTHANDLERS
          EVENTHANDLER #modifiedFieldPost_PMF
            PROPERTIES
              CalledWhen          #Post
              Class               #PurchLineHandler_PMF
              Method              #modifiedFieldPost
              AOTlink             #\Classes\PurchLineHandler_PMF\modifiedFieldPost
            ENDPROPERTIES
            
          ENDEVENTHANDLER
          EVENTHANDLER #postModifiedField_BR
            PROPERTIES
              CalledWhen          #Post
              Class               #PurchLineEventHandler_BR
              Method              #postModifiedFieldHandler_BR
              AOTlink             #\Classes\PurchLineEventHandler_BR\postModifiedFieldHandler_BR
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
      METHOD #modifyInventDim
        EVENTHANDLERS
          EVENTHANDLER #postModifyInventDimBR
            PROPERTIES
              CalledWhen          #Post
              Class               #PurchLineEventHandler_BR
              Method              #postModifyInventDim
              AOTlink             #\Classes\PurchLineEventHandler_BR\postModifyInventDim
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
      METHOD #validateField
        EVENTHANDLERS
          EVENTHANDLER #pmfValidateFieldPost
            PROPERTIES
              CalledWhen          #Post
              Class               #purchLineHandler_Pmf
              Method              #validateFieldPost
              AOTlink             #\Classes\purchLineHandler_Pmf\validateFieldPost
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
    ENDEVENTS
  ENDTABLE
  

***Element: END
